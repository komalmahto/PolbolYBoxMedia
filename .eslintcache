[{"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\index.js":"1","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\App.js":"2","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Store.js":"3","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Layout\\Layout.js":"4","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\MainView\\MainView.js":"5","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Navigation\\Nav.js":"6","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\index.js":"7","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\HomePage\\Home.js":"8","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardSubCategories.js":"9","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardCategories.js":"10","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\Awards.js":"11","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardT2.js":"12","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Footer\\Footer.js":"13","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\News\\News.js":"14","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\Award.js":"15","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\QuizLevels.js":"16","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\LiveTv\\Livetv.js":"17","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\Quiz.js":"18","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\AuthActions.js":"19","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\LanguageAction.js":"20","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardSubCat.js":"21","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Modal\\ModalLogin.js":"22","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\QuizPlay.js":"23","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\Graph.js":"24","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\Youtube.jsx":"25","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Polls\\Polls.js":"26","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\AwardsReducer.js":"27","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\AuthReducer.js":"28","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\PollsReducer.js":"29","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\NewsReducer.js":"30","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\LanguageReducer.js":"31","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\NewsAction.js":"32","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\HomePage\\HomeSection3.js":"33","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\axios.js":"34","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Modal\\ShareModal.js":"35","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\AwardResult.js":"36","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\QuizCategories.js":"37","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\HomePage\\HomePollsAndAwards.js":"38","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\Types.js":"39","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Modal\\Modal.js":"40","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\News\\NewsTrendingCard.js":"41","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\News\\NewsCard.js":"42","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\icons\\Icons.js":"43","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\PieChart.js":"44","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\AwardCategoriesCard.js":"45","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\CategoryBar\\CategoryBar.js":"46","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\NomineeCard.js":"47","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\JuryCard.js":"48","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\QuizLevelsCard.js":"49","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Polls\\PollCard.js":"50","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\QuizCategoryCard.js":"51","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\AwardsAction.js":"52","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\PollsAction.js":"53","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\Bar.js":"54"},{"size":275,"mtime":1622376110490,"results":"55","hashOfConfig":"56"},{"size":426,"mtime":1622376110436,"results":"57","hashOfConfig":"56"},{"size":774,"mtime":1622376110483,"results":"58","hashOfConfig":"56"},{"size":472,"mtime":1618308448657,"results":"59","hashOfConfig":"56"},{"size":4393,"mtime":1618308448658,"results":"60","hashOfConfig":"56"},{"size":9360,"mtime":1622657616829,"results":"61","hashOfConfig":"56"},{"size":361,"mtime":1622376110476,"results":"62","hashOfConfig":"56"},{"size":5910,"mtime":1622390374732,"results":"63","hashOfConfig":"56"},{"size":1197,"mtime":1618308448888,"results":"64","hashOfConfig":"56"},{"size":1122,"mtime":1618308448814,"results":"65","hashOfConfig":"56"},{"size":10421,"mtime":1622198682601,"results":"66","hashOfConfig":"56"},{"size":1744,"mtime":1618308448889,"results":"67","hashOfConfig":"56"},{"size":3702,"mtime":1618308448656,"results":"68","hashOfConfig":"56"},{"size":14335,"mtime":1622718299500,"results":"69","hashOfConfig":"56"},{"size":5578,"mtime":1618308448813,"results":"70","hashOfConfig":"56"},{"size":1252,"mtime":1621130361534,"results":"71","hashOfConfig":"56"},{"size":5244,"mtime":1618308448944,"results":"72","hashOfConfig":"56"},{"size":191,"mtime":1618308448961,"results":"73","hashOfConfig":"56"},{"size":452,"mtime":1622376110409,"results":"74","hashOfConfig":"56"},{"size":190,"mtime":1618308448587,"results":"75","hashOfConfig":"56"},{"size":1078,"mtime":1618308448814,"results":"76","hashOfConfig":"56"},{"size":11970,"mtime":1622693260926,"results":"77","hashOfConfig":"56"},{"size":10370,"mtime":1621130374883,"results":"78","hashOfConfig":"56"},{"size":13106,"mtime":1618308448792,"results":"79","hashOfConfig":"56"},{"size":460,"mtime":1618308448912,"results":"80","hashOfConfig":"56"},{"size":6553,"mtime":1622693516905,"results":"81","hashOfConfig":"56"},{"size":341,"mtime":1618308448794,"results":"82","hashOfConfig":"56"},{"size":768,"mtime":1622376110470,"results":"83","hashOfConfig":"56"},{"size":335,"mtime":1618308448795,"results":"84","hashOfConfig":"56"},{"size":333,"mtime":1618308448795,"results":"85","hashOfConfig":"56"},{"size":609,"mtime":1618308448794,"results":"86","hashOfConfig":"56"},{"size":353,"mtime":1618308448587,"results":"87","hashOfConfig":"56"},{"size":1523,"mtime":1618308448943,"results":"88","hashOfConfig":"56"},{"size":186,"mtime":1621672578302,"results":"89","hashOfConfig":"56"},{"size":1913,"mtime":1618308448659,"results":"90","hashOfConfig":"56"},{"size":3941,"mtime":1618308448761,"results":"91","hashOfConfig":"56"},{"size":1025,"mtime":1621130355703,"results":"92","hashOfConfig":"56"},{"size":15286,"mtime":1622390388589,"results":"93","hashOfConfig":"56"},{"size":246,"mtime":1622376110414,"results":"94","hashOfConfig":"56"},{"size":1260,"mtime":1622647378038,"results":"95","hashOfConfig":"56"},{"size":728,"mtime":1618308448661,"results":"96","hashOfConfig":"56"},{"size":2538,"mtime":1618308448660,"results":"97","hashOfConfig":"56"},{"size":1879,"mtime":1618308448793,"results":"98","hashOfConfig":"56"},{"size":828,"mtime":1618308448793,"results":"99","hashOfConfig":"56"},{"size":375,"mtime":1618308448634,"results":"100","hashOfConfig":"56"},{"size":550,"mtime":1618308448656,"results":"101","hashOfConfig":"56"},{"size":1693,"mtime":1618308448635,"results":"102","hashOfConfig":"56"},{"size":757,"mtime":1618308448635,"results":"103","hashOfConfig":"56"},{"size":755,"mtime":1618308448655,"results":"104","hashOfConfig":"56"},{"size":13412,"mtime":1622695797186,"results":"105","hashOfConfig":"56"},{"size":354,"mtime":1618308448636,"results":"106","hashOfConfig":"56"},{"size":360,"mtime":1618308448586,"results":"107","hashOfConfig":"56"},{"size":364,"mtime":1618308448588,"results":"108","hashOfConfig":"56"},{"size":24795,"mtime":1622717397520,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"19kb11q",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"112"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\index.js",[],["249","250"],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\App.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Store.js",["251"],"import {createStore,applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './Reducers'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localS\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\nconst initialState = {}\r\n\r\nconst middleware =[thunk]\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    whitelist: ['auth'] // or blacklist to exclude specific reducers\r\n  };\r\n  \r\n\r\n  const presistedReducer = persistReducer(persistConfig, rootReducer );\r\n\r\n  const store = createStore(presistedReducer,composeWithDevTools(applyMiddleware(...middleware)))\r\n  const persistor = persistStore(store);\r\n  \r\n  \r\n  export  {store,persistor};","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Layout\\Layout.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\MainView\\MainView.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Navigation\\Nav.js",["252","253","254","255","256","257","258","259","260","261","262"],"import React, { useState } from 'react';\r\nimport { Select } from 'antd';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport { DownOutlined, UserOutlined, MessageOutlined } from '@ant-design/icons';\r\nimport logo from '../../assets/2160 4K.gif';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport Modal from '../Modal/ModalLogin';\r\nimport { fetchLanguage } from '../../Actions/LanguageAction';\r\nimport { connect } from 'react-redux';\r\nimport Icon from '@ant-design/icons';\r\nimport { logout } from '../../Actions/AuthActions'\r\n\r\nconst { Option } = Select;\r\n\r\nconst Nav = ({ fetchLanguage, logout, english: { english }, auth: { token, user } }) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const location = useLocation();\r\n  const handleChange = (e) => {\r\n    console.log(e);\r\n    if (e === 'english') {\r\n      fetchLanguage(true);\r\n      localStorage.setItem('language', JSON.stringify(true));\r\n    }\r\n    if (e === 'hindi') {\r\n      fetchLanguage(false);\r\n      localStorage.setItem('language', JSON.stringify(false));\r\n    }\r\n  };\r\n  const onClick = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      {!token ? <Menu.Item onClick={onClick} danger>\r\n        Login/Register\r\n      </Menu.Item> : <Menu.Item onClick={logout} danger>\r\n        Logout\r\n      </Menu.Item>}\r\n    </Menu>\r\n  );\r\n\r\n  function openNav() {\r\n    document.getElementById('mySidenav').style.width = '250px';\r\n  }\r\n\r\n  function closeNav() {\r\n    document.getElementById('mySidenav').style.width = '0';\r\n  }\r\n\r\n  return (\r\n    <div className='header'>\r\n      <Modal\r\n        isModalVisible={isModalVisible}\r\n        setIsModalVisible={setIsModalVisible}\r\n      />\r\n      {/*<div className='header-top'>\r\n        <Select\r\n          bordered={false}\r\n          className='language'\r\n          style={{ width: 100 }}\r\n          defaultValue={english?'english':'hindi'}\r\n          onChange={handleChange}\r\n        >\r\n          <Option\r\n            className='language-option'\r\n            style={{ height: '22px' }}\r\n            value='english'\r\n          >\r\n            {english?'English':'अंग्रेज़ी'}\r\n          </Option>\r\n          <Option className='language-option' value='hindi'>\r\n          {english?'Hindi':'हिंदी '}\r\n\r\n          </Option>\r\n        </Select>\r\n        <Dropdown className='guest' overlay={menu}>\r\n          <a\r\n            className='ant-dropdown-link guest-item'\r\n            onClick={(e) => e.preventDefault()}\r\n          >\r\n            <span>\r\n              <UserOutlined /> Guest\r\n            </span>{' '}\r\n            <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n      </div>*/}\r\n      <nav className='header-nav'>\r\n        <div className='nav-left'>\r\n          <ul>\r\n            <li className='logo' style={{ overflow: 'hidden' }}>\r\n              <img\r\n                style={{ height: '12rem', marginLeft: '10px' }}\r\n                src={logo}\r\n                alt='logo'\r\n              />\r\n            </li>\r\n            <li className={location.pathname === '/' ? 'active-link' : null}>\r\n              <Link to='/'>HOME</Link>\r\n            </li>\r\n            <li\r\n              className={location.pathname === '/news' ? 'active-link' : null}\r\n            >\r\n              <Link to='/news'>{english ? 'NEWS' : 'समाचार'}</Link>\r\n            </li>\r\n            <li\r\n              className={location.pathname === '/polls' ? 'active-link' : null}\r\n            >\r\n              <Link to='/polls'>{english ? 'POLLS' : 'मतदान'}</Link>\r\n            </li>\r\n            <li\r\n              className={location.pathname === '/awards' ? 'active-link' : null}\r\n            >\r\n              <Link to='/awards'>{english ? 'AWARDS' : 'अवार्डस'}</Link>\r\n            </li>\r\n            <li\r\n              className={location.pathname === '/livetv' ? 'active-link' : null}\r\n            >\r\n              <Link to='/livetv'>{english ? 'LIVE TV' : 'लाइव टीवी'}</Link>\r\n            </li>\r\n            <li\r\n              className={location.pathname === '/quiz' ? 'active-link' : null}\r\n            >\r\n              <Link to='/quiz'>{english ? 'QUIZ' : 'क्विज़'}</Link>\r\n            </li>\r\n            <li style={{ position: 'absolute', right: '110px' }}>\r\n              <Dropdown className='guest' overlay={menu}>\r\n                <a\r\n                  className='ant-dropdown-link guest-item'\r\n                  onClick={(e) => {e.preventDefault()}}\r\n                  style={{ color: 'white' }}\r\n                >\r\n                  <span style={{ color: 'white' }}>\r\n                    <i style={{ color: 'white' }} className=\"far fa-user\"></i> {!token ? \"Guest\" : user && user.userName && user.userName}\r\n                  </span>{' '}\r\n                  <span>\r\n                    {' '}\r\n                    <i style={{ color: 'white' }} className=\"fas fa-chevron-down\"></i>                  </span>\r\n                </a>\r\n              </Dropdown>\r\n            </li>\r\n            <li style={{ position: 'absolute', right: '0px' }}>\r\n              <Select\r\n                bordered={false}\r\n                className='language'\r\n                style={{ width: 100, color: 'white' }}\r\n                defaultValue={english ? 'english' : 'hindi'}\r\n                onChange={handleChange}\r\n                theme='dark'\r\n                className=\"ant-select-selection\"\r\n\r\n              >\r\n                <Option\r\n                  className='language-option'\r\n                  style={{ height: '22px' }}\r\n                  value='english'\r\n                >\r\n                  <span> {english ? 'English' : 'अंग्रेज़ी'}</span>\r\n                </Option>\r\n                <Option className='language-option' value='hindi'>\r\n                  <span>{english ? 'Hindi' : 'हिंदी '}</span>\r\n                </Option>\r\n              </Select>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className='nav-right'>\r\n          <span\r\n            className='side'\r\n            style={{\r\n              fontSize: '30px',\r\n              cursor: 'pointer',\r\n              color: 'white',\r\n              marginRight: '3rem',\r\n            }}\r\n            onClick={openNav}\r\n          >\r\n            &#9776;\r\n          </span>\r\n        </div>\r\n      </nav>\r\n      <div id='mySidenav' className='sidenav'>\r\n        <a href='javascript:void(0)' className='closebtn' onClick={closeNav}>\r\n          &times;\r\n        </a>\r\n        <li\r\n          onClick={closeNav}\r\n          className={location.pathname === '/' ? 'active-link' : null}\r\n        >\r\n          <Link to='/'>HOME</Link>\r\n        </li>\r\n        <li>\r\n          <Dropdown className='guest' overlay={menu} trigger={['click']}>\r\n            <a\r\n              className='ant-dropdown-link guest-item'\r\n              onClick={(e) => e.preventDefault()}\r\n              style={{ color: 'white' , fontSize:'1.5rem' }}\r\n            >\r\n              <span style={{ color: 'white' }}>\r\n                <i style={{ color: 'white' }} className=\"far fa-user\"></i> {!token ? \"Guest\" : user && user.userName && user.userName}\r\n              </span>{' '}\r\n              <span>\r\n                {' '}\r\n                <i style={{ color: 'white' }} className=\"fas fa-chevron-down\"></i>                  </span>\r\n            </a>\r\n          </Dropdown>\r\n        </li>\r\n        <li style={{marginLeft:'20px'}}>\r\n          <Select\r\n            bordered={false}\r\n            className='language'\r\n            defaultValue={english ? 'english' : 'hindi'}\r\n            onChange={handleChange}\r\n            theme='dark'\r\n            className=\"ant-select-selection\"\r\n\r\n          >\r\n            <Option\r\n              className='language-option'\r\n              style={{ height: '22px', color: 'black' }}\r\n              value='english'\r\n            >\r\n              <span> {english ? 'English' : 'अंग्रेज़ी'}</span>\r\n            </Option>\r\n            <Option className='language-option' value='hindi'>\r\n              <span>{english ? 'Hindi' : 'हिंदी '}</span>\r\n            </Option>\r\n          </Select>\r\n        </li>\r\n        <li\r\n          onClick={closeNav}\r\n          className={location.pathname === '/news' ? 'active-link' : null}\r\n        >\r\n          <Link to='/news'>NEWS</Link>\r\n        </li>\r\n        <li\r\n          onClick={closeNav}\r\n          className={location.pathname === '/polls' ? 'active-link' : null}\r\n        >\r\n          <Link to='/polls'>POLLS</Link>\r\n        </li>\r\n        <li\r\n          onClick={closeNav}\r\n          className={location.pathname === '/awards' ? 'active-link' : null}\r\n        >\r\n          <Link to='/awards'>AWARDS</Link>\r\n        </li>\r\n        <li\r\n          onClick={closeNav}\r\n          className={location.pathname === '/livetv' ? 'active-link' : null}\r\n        >\r\n          <Link to='/livetv'>LIVE TV</Link>\r\n        </li>\r\n        <li\r\n          onClick={closeNav}\r\n          className={location.pathname === '/quiz' ? 'active-link' : null}\r\n        >\r\n          <Link to='/quiz'>QUIZ</Link>\r\n        </li>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  english: state.english,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchLanguage, logout\r\n})(Nav);\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\index.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\HomePage\\Home.js",["263","264","265","266"],"import React, { useState, useEffect } from 'react';\r\nimport { RightOutlined} from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport HomePollsAndAwards from './HomePollsAndAwards';\r\nimport HomeSection3 from './HomeSection3';\r\nimport { Card} from 'antd';\r\nimport {cats} from '../../Components/icons/Icons';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { Checkbox} from 'antd';\r\nimport axios from '../../axios';\r\nimport { fetchNews } from '../../Actions/NewsAction';\r\nimport NewsCard from '../../Components/News/NewsCard';\r\nimport NewsTrendingCard from '../../Components/News/NewsTrendingCard';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = ({ fetchNews, news: { news },english:{english},history}) => {\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [newsBasedOnCategory, setNewsBasedOnCategory] = useState({});\r\n  const [trending,setTrending]=useState([])\r\n\r\n  useEffect(() => {\r\n    fetchNews(english);\r\n    fetchNewsSelected();\r\n    getTrending()\r\n  }, [english]);\r\n\r\n  useEffect(() => {\r\n    fetchNewsSelected();\r\n  }, [selectedTags]);\r\n\r\n  const fetchNewsSelected = async (page) => {\r\n    const queryParam = selectedTags.join(',');\r\n    try {\r\n      const response = await axios.get(`/common/news?hindi=${!english}`, {\r\n        params: {\r\n          page,\r\n          categories: selectedTags.length > 0 ? queryParam : undefined,\r\n        },\r\n      });\r\n      const responseJSON = response.data;\r\n      setNewsBasedOnCategory(responseJSON);\r\n      console.log(responseJSON, 'selected news');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  console.log(news);\r\n  function onChange(checkedValues) {\r\n    console.log('checked = ', checkedValues);\r\n    setSelectedTags(checkedValues);\r\n  }\r\n  const checkChecked = (item) => {\r\n    console.log(selectedTags);\r\n    const bool = selectedTags.indexOf(item);\r\n    console.log(bool);\r\n    if (bool !== -1) {\r\n      return {\r\n        backgroundColor: '#a62844',\r\n        color: 'white',\r\n      };\r\n    }\r\n  };\r\n  const getTrending=async()=>{\r\n    await axios.get(`notification/latest?language=${english?'english':'hindi'}`).then((res)=>{\r\n      console.log(res.data.payload,\"trend\")\r\n     setTrending(res.data.payload.payload)\r\n    })\r\n  }\r\n\r\n  const CustomButtonGroupAsArrows = ({ next, previous, goToSlide, ...rest }) => {\r\n    const { carouselState: { currentSlide } } = rest;\r\n    return (\r\n      <div className=\"carousel-button-group\"> \r\n      <div className=\"ppp\">\r\n        <button className={currentSlide === 0 ? 'disable' : ''} onClick={() => previous()} >Previous</button>\r\n        <button onClick={() => next()} >Next</button>\r\n        <button    className=\"view\" ><Link  to=\"/news\">\r\n        View all\r\n       \r\n      </Link>\r\n      </button>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  };\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 4,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1100 },\r\n      items: 3,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1100, min: 670 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 670, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className='box'>\r\n      <section className='section-news'>\r\n        <div className='section-news-left'>\r\n          <div className='section-news-left--head'>\r\n            <span className=\"news-head\">{english?'NEWS':'समाचार'}</span>\r\n           \r\n          </div>\r\n          <div className='section-news-left--tags'>\r\n            <Checkbox.Group\r\n              className='tags'\r\n              style={{ width: '100%' }}\r\n              onChange={onChange}\r\n            >\r\n              {cats.map((p) => (\r\n                <label className=\"cur\" style={checkChecked(p)}>\r\n                  {p}\r\n                  <Checkbox style={{ display: 'none' }} value={p}></Checkbox>\r\n                </label>\r\n              ))}\r\n            </Checkbox.Group>\r\n          </div>\r\n          <Carousel\r\n          sliderClass=\"class-slide\"\r\n          itemClass=\"class-slide\"\r\n          arrows={false}\r\n          customButtonGroup={<CustomButtonGroupAsArrows />}\r\n          renderButtonGroupOutside={true}\r\n            style={{ display:'flex',justifyContent:'space-evenly' }}\r\n            className='card-container'\r\n            responsive={responsive}\r\n            slidesToSlide={3}\r\n          >\r\n            {Object.keys(newsBasedOnCategory).length > 0 &&\r\n              newsBasedOnCategory.payload.data.length > 0 &&\r\n              newsBasedOnCategory.payload.data.map((p) => <NewsCard p={p} />)}\r\n          </Carousel>\r\n        </div>\r\n        <div className='section-news-right'>\r\n        <div className='trending-head'>\r\n        <span>Trending News</span>\r\n      </div>\r\n          <div className='trending-news' style={{overflowY:'scroll'}}>\r\n            {\r\n              trending\r\n              .filter((p)=>{\r\nif(selectedTags.length >0){\r\n                return selectedTags.includes(p.icon)\r\n}\r\nelse return p\r\n              })\r\n                .map((k) => \r\n                <div onClick={() => history.push(`/news/${k.targetId}`)}>\r\n                <NewsTrendingCard   k={k} />\r\n                </div>\r\n                )}\r\n          </div>\r\n         <div className='trending-head-1'>\r\n            <Link  className=\"viewAll\" to=\"/news\">View all</Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className='home-section-2' style={{ marginTop: '2rem' }}>\r\n        <HomePollsAndAwards />\r\n      </section>\r\n      <section className='home-section-3'>\r\n        <HomeSection3 />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  news: state.news,\r\n  english:state.english\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchNews,\r\n})(Home);\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardSubCategories.js",["267"],"import React, { useEffect, useState } from 'react'\r\nimport axios from '../../axios'\r\nimport AwardCategoriesCard from '../../Components/Cards/AwardCategoriesCard'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AwardSubCategories = ({ match }) => {\r\n  const [subCat, setSubCat] = useState([])\r\n  useEffect(() => {\r\n    fetchAward();\r\n  }, [])\r\n\r\n  const fetchAward = async () => {\r\n    await axios.get(`award/awardList?categoryId=${match.params.catId}`)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setSubCat(res.data.payload)\r\n      })\r\n  }\r\n  return (\r\n    <div className=\"box\" style={{ backgroundColor: '#f5f5f5' }}>\r\n      {/* <div style={{ marginBottom: '2rem' }}>\r\n        <h2></h2>\r\n        <span style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>Sub Categories</span></div> */}\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit,minmax(300px,1fr))', justifyItems: 'center' }}>\r\n        {subCat.map((c) => (<Link to={`/categories/subcat/award/${match.params.showId}/${match.params.catId}/${c._id}`}><AwardCategoriesCard c={c} type={\"sub\"} /></Link>\r\n        ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AwardSubCategories\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardCategories.js",["268","269"],"import React,{useEffect,useState} from 'react'\r\nimport axios from '../../axios'\r\nimport AwardCategoriesCard from '../../Components/Cards/AwardCategoriesCard'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AwardCategories = ({match}) => {\r\n  const [categories,setCategories]=useState([])\r\n  useEffect(()=>{\r\n    fetchCat()\r\n\r\n  },[])\r\n\r\n\r\n  const hello=()=>{\r\n    console.log(\"hello world\");\r\n\r\n  }\r\n  const fetchCat=async()=>{\r\n    await axios.get(`award/awardCategoryList?id=${match.params.id}`)\r\n    .then((res)=>{\r\nsetCategories(res.data.payload)  \r\nconsole.log(res.data.payload);\r\n  })\r\n  }\r\n  return (\r\n    <div className=\"box\" style={{backgroundColor:'#f5f5f5'}}>\r\n    <div style={{marginBottom:'2rem'}}><span style={{fontSize:'1.5rem',fontWeight:'bold'}}>Categories</span></div>\r\n    <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(300px,1fr))',justifyItems:'center'}}>\r\n    {categories.map((c)=>(<Link to={`/categories/subcat/${match.params.id}/${c._id}`}><AwardCategoriesCard c={c} type={\"cat\"}/></Link>\r\n      ))\r\n    }\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AwardCategories\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\Awards.js",["270","271","272","273","274","275"],"import React, { useState, useEffect } from 'react';\r\nimport CategoryBar from '../../Components/CategoryBar/CategoryBar';\r\nimport { cats,catspa } from '../../Components/icons/Icons';\r\nimport { Tabs } from 'antd';\r\nimport axios from '../../axios';\r\nimport moment from 'moment';\r\nimport PollCard from '../../Components/Polls/PollCard';\r\nimport { icons } from '../../Components/icons/Icons';\r\nimport { fetchAwards } from '../../Actions/AwardsAction';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button } from 'antd';\r\nimport NomineeCard from '../../Components/Cards/NomineeCard';\r\nimport JuryCard from '../../Components/Cards/JuryCard';\r\nimport AwardResult from '../../Components/Result/AwardResult';\r\n\r\nconst Awards = ({ fetchAwards, awards: { awards },english:{english} } ) => {\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [expiredAwards, setExpiredAwards] = useState({});\r\n  const [type3, setType3] = useState(false);\r\n  const [type3Data, setType3Data] = useState({});\r\n  const[comm,setComm]=useState([])\r\n\r\n  const { TabPane } = Tabs;\r\n  useEffect(() => {\r\n    fetchExpiredAwards();\r\n    fetchAwards();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   fetchExpiredAwards();\r\n  // }, [selectedTags]);\r\n\r\n  const fetchExpiredAwards = async (page) => {\r\n    try {\r\n      const response = await axios.get(\r\n        '/award/fetchAwardsAndCategories?mode=expired'\r\n      );\r\n      const responseJSON = response.data;\r\n      setExpiredAwards(responseJSON);\r\n      console.log(responseJSON, 'expired awards');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  function onChange(checkedValues) {\r\n    console.log('checked = ', checkedValues);\r\n    setSelectedTags(checkedValues);\r\n  }\r\n  const checkChecked = (item) => {\r\n    console.log(selectedTags);\r\n    const bool = selectedTags.indexOf(item);\r\n    console.log(bool);\r\n    if (bool !== -1) {\r\n      return {\r\n        backgroundColor: '#a62844',\r\n        color: 'white',\r\n      };\r\n    }\r\n  };\r\n\r\n  const getExpiryString = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff;\r\n  };\r\n\r\n  const getExpiryString1 = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    console.log(duration, 'duration');\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff < 0\r\n      ? 'show has expired'\r\n      : `${duration._data.hours} hours ${duration._data.minutes} minutes left!!`;\r\n  };\r\n  const handleOk = () => {\r\n    setType3(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setType3(false);\r\n  };\r\n  const setIt = (p) => {\r\n    console.log(p);\r\n    if (p.isSubcategory) {\r\n      setType3(true);\r\n      setType3Data(p);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    fetchComments()\r\n  },[type3Data])\r\n  const checkLength = (data, type) => {\r\n    let useData = [];\r\n\r\n    if (type === 'awards') {\r\n      if (selectedTags.length > 0) {\r\n        useData =\r\n          data &&\r\n          data.length > 0 &&\r\n          data\r\n            .filter((l) => {\r\n              return selectedTags.includes(l.type[0]);\r\n            })\r\n            .filter((p) => {\r\n              return getExpiryString(p.lifeSpan) > 0;\r\n            });\r\n      }\r\n      else {\r\n        useData =\r\n        data &&\r\n        data.length > 0 &&\r\n        data.filter((p) => {\r\n          return getExpiryString(p.lifeSpan) > 0;\r\n        });\r\n      }\r\n     \r\n      return useData && useData.length;\r\n    }\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    await axios\r\n      .get(`award/audienceComments?id=${type3Data && type3Data._id}`)\r\n      .then((res) => {\r\n        console.log(res, 'COMMENTS');\r\n        setComm(res.data.payload);\r\n      }).catch(err => {\r\n        console.log(err,'error in comments')\r\n      })\r\n  };\r\n  const PollView = (data, type, type2) => {\r\n    let useData = [];\r\n    if (type2 === 'awards') {\r\n      if (type === 'active') {\r\n        if (data && data.length > 0) {\r\n          if (selectedTags.length > 0) {\r\n            useData =\r\n              data &&\r\n              data.length > 0 &&\r\n              data\r\n                .filter((l) => {\r\n                  return selectedTags.includes(l.type[0]);\r\n                })\r\n                .filter((p) => {\r\n                  return getExpiryString(p.lifeSpan) > 0;\r\n                });\r\n          } else {\r\n            useData =\r\n              data &&\r\n              data.length > 0 &&\r\n              data.filter((p) => {\r\n                return getExpiryString(p.lifeSpan) > 0;\r\n              });\r\n            console.log(useData, 'use');\r\n          }\r\n        }\r\n      } else if (type === 'expired') {\r\n        if (selectedTags.length > 0) {\r\n          useData =\r\n            data &&\r\n            data.length > 0 &&\r\n            data\r\n              .filter((l) => {\r\n                return selectedTags.includes(l.type[0]);\r\n              })\r\n              .filter((p) => {\r\n                return getExpiryString(p.lifeSpan) < 0;\r\n              });\r\n        } else {\r\n          useData =\r\n            data &&\r\n            data.length > 0 &&\r\n            data.filter((p) => {\r\n              return getExpiryString(p.lifeSpan) < 0;\r\n            });\r\n          console.log(useData);\r\n        }\r\n      }\r\n      console.log(useData, 'usedata');\r\n      console.log(awards,'awwwwww');\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div style={{ margin: '1.5rem 0' }}>\r\n          {/*useData &&<span>{useData.length + ' ' + type + ' ' + type2}</span>*/}\r\n        </div>\r\n        <div className='pollCont'>\r\n          {useData &&\r\n            useData.map(\r\n              (p) =>\r\n                p.hidden === false && (\r\n                  <div onClick={() => setIt(p)}>\r\n                    <PollCard\r\n                      setType3Data={setType3Data}\r\n                      type3={type3}\r\n                      setType3={setType3}\r\n                      icons={icons}\r\n                      type2={type2}\r\n                      english={english}\r\n                      p={p}\r\n                      getExpiryString1={getExpiryString1}\r\n                      isAward={true}\r\n                    />\r\n                  </div>\r\n                )\r\n            )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className='poll-box'>\r\n      <Modal\r\n        title={\r\n          type3Data && Object.keys(type3Data).length > 0 && type3Data.heading\r\n        }\r\n        footer={null}  \r\n        visible={type3}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {/* <h3>{type3Data&& Object.keys(type3Data).length>0 && type3Data.heading}</h3>*/}\r\n        <Tabs onChange={callback} type='card'>\r\n          <TabPane tab='Nominees' key='1'>\r\n            <div\r\n              style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: 'repeat(auto-fit,minmax(200px,1fr))',\r\n                justifyItems: 'center',\r\n                gridGap: '1.5rem',\r\n              }}\r\n            >\r\n              {type3Data &&\r\n                Object.keys(type3Data).length > 0 &&\r\n                type3Data.nominations.map((p) => <NomineeCard p={p} />)}\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab='Jury' key='2'>\r\n            <div\r\n              tyle={{\r\n                display: 'grid',\r\n                gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))',\r\n                justifyItems: 'center',\r\n                gridGap: '1.5rem',\r\n              }}\r\n            >\r\n              {type3Data &&\r\n                Object.keys(type3Data).length > 0 &&\r\n                type3Data.jurys.map((p) => <JuryCard p={p} />)}\r\n            </div>\r\n          </TabPane>\r\n\r\n          <TabPane tab='Results' key='3'>\r\n            <AwardResult\r\n              id={\r\n                type3Data && Object.keys(type3Data).length > 0 && type3Data._id\r\n              }\r\n            />\r\n          </TabPane>\r\n          <TabPane tab='Comments' key='4'>\r\n          {comm.length > 0 &&\r\n            comm.map((m) => (\r\n              <div className=\"comm-cont\">\r\n                <div>\r\n                  <img style={{ width: '50px' }} src={m.user.avatar} alt='' />\r\n                </div>\r\n                <div>\r\n                <p>\r\n                  @{m.user.userName} Voted{' '}\r\n                  <span style={{ textTransform: 'capitalize' }}>\r\n                    {m.award.nominations.name}\r\n                  </span>\r\n                </p>\r\n                <p className=\"comment-1\">{m.comment}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </TabPane>\r\n        </Tabs>\r\n      </Modal>\r\n      <div>\r\n        {/*<h1>Awards</h1>*/}\r\n        <div>\r\n          <CategoryBar\r\n            onChange={onChange}\r\n            checkChecked={checkChecked}\r\n            cats={catspa}\r\n          />\r\n          <Tabs\r\n          size={'large'}\r\n            defaultActiveKey={checkLength(awards, 'awards') === 0 ? '2' : '1'}\r\n            onChange={callback}\r\n            type='card'\r\n          >\r\n            <TabPane tab='Active' key='1'>\r\n              {PollView(awards,'active','awards')}\r\n            </TabPane>\r\n            <TabPane tab='Expired' key='2'>\r\n              {PollView(expiredAwards.payload, 'expired', 'awards')}\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  polls: state.polls,\r\n  awards: state.awards,\r\n  english:state.english\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchAwards,\r\n})(Awards);\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardT2.js",["276"],"import React ,{useEffect,useState}from 'react'\r\nimport { Tabs } from 'antd';\r\nimport axios from '../../axios'\r\nimport NomineeCard from '../../Components/Cards/NomineeCard'\r\nimport JuryCard from '../../Components/Cards/JuryCard'\r\nimport AwardResult from '../../Components/Result/AwardResult'\r\n\r\n\r\n\r\nconst AwardT2 = ({match}) => {\r\n  const { TabPane } = Tabs;\r\n\r\n\r\n  const [subCat,setSubCat]=useState([])\r\n  useEffect(()=>{\r\nfetchAward();\r\nwindow.scrollTo(0, 0);\r\n  },[])\r\n\r\n  const fetchAward=async()=>{\r\nawait axios.get(`award/awardList?showId=${match.params.showId}`)\r\n.then((res)=>{\r\n  console.log(res.data)\r\n  setSubCat(res.data.payload)\r\n})\r\n  }\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\nconst award=()=>{\r\n  const arr=subCat.filter((c)=>{return c._id === match.params.awardId})\r\n  return arr\r\n}\r\n  return (\r\n    <div className=\"box\">\r\n    <h3>{award()&& award().length>0 && award()[0].heading}</h3>\r\n    <Tabs onChange={callback} type=\"card\">\r\n    <TabPane tab=\"Nominees\" key=\"1\">\r\n    <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(200px,1fr))',justifyItems:'center',gridGap:'1.5rem'}}>\r\n      {award()&& award().length>0 &&award()[0].nominations.map((p)=>(\r\n        <NomineeCard p={p}/>\r\n      ))}\r\n      </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Jury\" key=\"2\">\r\n    <div tyle={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(320px,1fr))',justifyItems:'center',gridGap:'1.5rem'}}>\r\n    {award()&& award().length>0 &&award()[0].jurys.map((p)=>(\r\n      <JuryCard p={p}/>\r\n    ))}\r\n    </div>\r\n    </TabPane>\r\n   \r\n    <TabPane tab=\"Results\" key=\"3\">\r\n    <AwardResult id={award()&& award().length>0 &&award()[0]._id}/>\r\n  </TabPane>\r\n  </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AwardT2\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Footer\\Footer.js",["277"],"import React,{useState} from 'react';\r\nimport {Col, Row} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Logo from '../../assets/logo.png';\r\nimport Modal from '../Modal/Modal'\r\nconst Footer = () => {\r\n    const [isModalVisible,setIsModalVisible]=useState(false)\r\n\r\n    return (\r\n        <div style={{\r\n            marginTop: \"100px\",\r\n            background: `linear-gradient(179.62305952040288deg,#27383f .8071748878923769%,#10161b 68.96860986547085%)`,\r\n        }}>\r\n\r\n<Modal\r\n        isModalVisible={isModalVisible}\r\n        setIsModalVisible={setIsModalVisible}\r\n      />\r\n\r\n\r\n            <br></br>\r\n            <br/>\r\n            <Row style={{color: \"white\"}}>\r\n                <Col xs={0} sm={0} md={2} lg={3}/>\r\n                <Col xs={24} sm={24} md={14} style={{padding: \"10px\"}}>\r\n                    <img alt={'Logo'} src={Logo} style={{height: \"70px\"}}/>\r\n                    \r\n                    <p style={{marginTop: \"20px\", fontSize: \"12px\",color:'white',width:'230px'}}>Copyright © 2021 All rights reserved | This template is made by <a style={{color:'white'}} href='http://www.yboxmedia.com/' target=\"_blank\">YBox Media Technologies</a></p>\r\n                    <div>\r\n                        <br/>\r\n                        <a target='_blank' rel='noreferrer noopener' href={'https://www.facebook.com/polbol.media/'}\r\n                           style={{color: \"white\"}}>\r\n                            <i className=\"fa fa-facebook fa-2x\"/>\r\n                        </a>\r\n                        <a target='_blank' rel='noreferrer noopener' href={'https://twitter.com/mediapolbol'}\r\n                           style={{marginLeft: '30px', color: \"white\"}}>\r\n                            <i className=\"fa fa-twitter fa-2x\"/>\r\n                        </a>\r\n                        <a target='_blank' rel='noreferrer noopener' href={'mailto:infopolbol@gmail.com'}\r\n                           style={{marginLeft: '30px', color: \"white\"}}>\r\n                            <i className=\"fa fa-envelope fa-2x\"/>\r\n                        </a>\r\n                        <a target='_blank' rel='noreferrer noopener'\r\n                           href={'https://instagram.com/polbol.media?igshid=1g22qbpf4mig3'}\r\n                           style={{marginLeft: '30px', color: \"white\"}}>\r\n                            <i className=\"fa fa-instagram fa-2x\"/>\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={4} style={{padding: \"10px\"}}>\r\n                    <div>\r\n                        <br/>\r\n                        <Link to=\"/\" style={{color: \"white\"}}>\r\n                            <h3 style={{color: \"white\"}}>Home</h3>\r\n                        </Link>\r\n                        <Link to=\"\" onClick={()=>setIsModalVisible(true)} style={{color: \"white\"}}>\r\n                            <h3 style={{color: \"white\"}}>Download App</h3>\r\n                        </Link>\r\n                        <Link to=\"\" style={{color: \"white\"}}>\r\n                            <h3 style={{color: \"white\"}}>Privacy Policy</h3>\r\n                        </Link>\r\n                        <Link to=\"\" style={{color: \"white\"}}>\r\n                            <h3 style={{color: \"white\"}}>Terms and Conditions</h3>\r\n                        </Link>\r\n                        <Link to=\"\" style={{color: \"white\"}}>\r\n                            <h3 style={{color: \"white\"}}>About Developer</h3>\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={0} sm={0} md={2} lg={3}/>\r\n            </Row>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\News\\News.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\Award.js",["294","295","296"],"import React, { useEffect, useState } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport axios from '../../axios';\r\nimport NomineeCard from '../../Components/Cards/NomineeCard';\r\nimport JuryCard from '../../Components/Cards/JuryCard';\r\nimport AwardResult from '../../Components/Result/AwardResult';\r\nimport moment from 'moment';\r\nimport Modal from '../../Components/Modal/Modal'\r\n\r\nconst Award = ({ match }) => {\r\n  const { TabPane } = Tabs;\r\n\r\n  const [subCat, setSubCat] = useState([]);\r\n  const [comm, setComm] = useState([]);\r\n  const [sh,setSh]=useState(false)\r\n  const [showInfo,setShowInfo] = useState([]);\r\n  useEffect(() => {\r\n    fetchAward();\r\n    fetchComments();\r\n    fetchShowInfo();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const fetchAward = async () => {\r\n    await axios\r\n      .get(`award/awardList?categoryId=${match.params.catId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubCat(res.data.payload);\r\n      });\r\n  };\r\n\r\n  const fetchShow = async () => {\r\n    await axios\r\n      .get(`award/awardList?categoryId=${match.params.catId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubCat(res.data.payload);\r\n      });\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    await axios\r\n      .get(`award/audienceComments?id=${match.params.awardId}`)\r\n      .then((res) => {\r\n        console.log(res, 'COMMENTS');\r\n        setComm(res.data.payload);\r\n      }).catch(err=>{\r\n        console.log(err,'Error in award');\r\n      });\r\n  };\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  const award = () => {\r\n    const arr = subCat.filter((c) => {\r\n      return c._id === match.params.awardId;\r\n    });\r\n    return arr;\r\n  };\r\n  console.log(award(), 'aww');\r\n\r\n  const fetchShowInfo = async () => {\r\n    await axios\r\n      .get(`/award/fetchAwardsAndCategories`)\r\n      .then((res) => {\r\n        console.log('fetchShowInfo Called');\r\n        setShowInfo(res.data.payload);\r\n      });\r\n  };\r\n\r\n  const show = () => {\r\n    const arr = showInfo.filter((c) => {\r\n      return c._id === match.params.showId && c.isAward === true;\r\n    });\r\n    return arr;\r\n  }\r\n\r\n  console.log(show()[0],'show info');\r\n\r\n  const getExpiryString1 = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    console.log(duration, 'duration');\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff < 0 ? true : false;\r\n  };\r\n\r\n  return (\r\n    <div className='box'>\r\n    <Modal isModalVisible={sh} setIsModalVisible={setSh}/>\r\n      <h2 style={{ margin: '2rem 0' }}>\r\n        {award() && award().length > 0 && award()[0].heading}\r\n      </h2>\r\n      <Tabs onChange={callback} type='card'>\r\n        <TabPane tab='Nominees' key='1'>\r\n          <div className='nom-div' style={{padding:'5rem 10rem'}}>\r\n            {award() &&\r\n              award().length > 0 &&\r\n              award()[0].nominations.map((p) => <NomineeCard p={p} />)}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab='Jury' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))',\r\n              justifyItems: 'center',\r\n              gridGap: '1.5rem',\r\n            }}\r\n          >\r\n            {show() && show().length > 0 ? getExpiryString1(show()[0].lifeSpan) ? award() &&\r\n              award().length > 0 &&\r\n              award()[0].jurys.map((p) => <JuryCard p={p} />) : <div>Jury Comments will be disclosed on {moment(show()[0].lifeSpan).format('MMMM Do YYYY')}.</div> : null }\r\n          </div>\r\n        </TabPane>\r\n\r\n        {award() &&\r\n          award().length > 0 && (\r\n            <TabPane tab='Results' key='3'>\r\n              {show() && show().length > 0 ? getExpiryString1(show()[0].lifeSpan) ?\r\n                <AwardResult\r\n                  id={award() && award().length > 0 && award()[0]._id}\r\n                /> : <div style={{\r\n                  display: 'grid',\r\n                  gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))',\r\n                  justifyItems: 'center',\r\n                  gridGap: '1.5rem',\r\n                }} >Results will be declared on {moment(show()[0].lifeSpan).format('MMMM Do YYYY')}.</div> : null}\r\n            </TabPane>\r\n          )}\r\n\r\n        <TabPane tab='Comments' key='4'>\r\n          {comm.length > 0 &&\r\n            comm.map((m) => (\r\n              <div className=\"comm-cont\">\r\n                <div>\r\n                  <img style={{ width: '50px' }} src={m.user.avatar} alt='' />\r\n                </div>\r\n                <div>\r\n                <p>\r\n                  @{m.user.userName} Voted{' '}\r\n                  <span style={{ textTransform: 'capitalize' }}>\r\n                    {m.award.nominations.name}\r\n                  </span>\r\n                </p>\r\n                <p className=\"comment-1\">{m.comment}</p>\r\n                </div>\r\n              </div>\r\n              \r\n            ))}\r\n            <div onClick={()=>setSh(true)} className='comment'>\r\n            <p style={{color:'grey'}}>Add comments.....</p>\r\n              </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Award;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\QuizLevels.js",["297"],"import React,{useEffect,useState} from 'react'\r\nimport axios from '../../axios'\r\nimport QuizLevelsCard from '../../Components/Cards/QuizLevelsCard'\r\nimport {connect} from 'react-redux'\r\n\r\nconst QuizLevels = ({match,history,english:{english}}) => {\r\n  const [levels,setLevels]=useState([])\r\n  useEffect(() => {\r\nfetchLevels();\r\n  },[])\r\n\r\n\r\n  const fetchLevels=async()=>{\r\n    await axios.get(`/quiz/fetchQuiz/guest?categoryId=${match.params.catId}`)\r\n    .then((res)=>{\r\n      console.log(res.data)\r\n      setLevels(res.data.payload.quizzes)\r\n    })\r\n\r\n  }\r\n\r\n  const startLevel1=(level)=>{\r\n    if(level.level===1){\r\n      history.push(`/quiz/level/${match.params.catId}/${level._id}`)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\">\r\n    <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(250px,1fr))',gridGap:'2rem',marginTop:'10rem'}}>\r\n    \r\n    {\r\n      levels && levels.length >0&& levels.map((level)=>(\r\n        <div onClick={()=>startLevel1(level)}>\r\n        <QuizLevelsCard  english={english} level={level}/>\r\n        </div>\r\n        ))\r\n    }\r\n    \r\n    </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  english: state.english,\r\n });\r\n \r\n export default connect(mapStateToProps)(QuizLevels);","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\LiveTv\\Livetv.js",["298"],"import React,{useEffect,useState} from 'react'\r\nimport NewsTrendingCard from '../../Components/News/NewsTrendingCard'\r\nimport { fetchNews } from '../../Actions/NewsAction';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios'\r\nimport ReactPlayer from 'react-player'\r\nimport { Switch } from 'antd';\r\n\r\n\r\n\r\nconst Livetv = ({fetchNews,news:{news},history}) => {\r\n  const [channels,setChannels]=useState([])\r\n  const [english,setEnglish]=useState(true)\r\n  const [trending,setTrending]=useState([])\r\n\r\n  const [play,setPlay]=useState(english? {\r\n    \"language\": \"english\",\r\n    \"priority\": 90,\r\n    \"hidden\": false,\r\n    \"_id\": \"5eaf0fe46936d7087a582a23\",\r\n    \"name\": \"India Today\",\r\n    \"link\": \"https://indiatodaylive.akamaized.net/hls/live/2014320/indiatoday/indiatodaylive/playlist.m3u8\",\r\n    \"image\": \"https://polbol-media.s3.ap-south-1.amazonaws.com/newsIcon/india_today.jpg\",\r\n    \"createdAt\": \"2020-05-03T18:39:32.117Z\",\r\n    \"updatedAt\": \"2020-05-03T18:39:32.117Z\",\r\n    \"__v\": 0\r\n}: {\r\n  \"language\": \"hindi\",\r\n  \"priority\": 60,\r\n  \"hidden\": false,\r\n  \"_id\": \"5eaf0fe46936d7087a582a13\",\r\n  \"name\": \"AajTak\",\r\n  \"link\": \"https://feeds.intoday.in/aajtak/api/master.m3u8\",\r\n  \"image\": \"https://polbol-media.s3.ap-south-1.amazonaws.com/newsIcon/aajtak.png\",\r\n  \"createdAt\": \"2020-05-03T18:39:32.116Z\",\r\n  \"updatedAt\": \"2020-05-03T18:39:32.116Z\",\r\n  \"__v\": 0\r\n})\r\n  useEffect(() =>{\r\n    fetchNews();\r\n    fetchChannels();\r\n    getTrending();\r\n  },[])\r\n  const getTrending=async()=>{\r\n    await axios.get(`notification/latest?language=${english?'english':'hindi'}`).then((res)=>{\r\n      console.log(res.data.payload,\"trend\")\r\n     setTrending(res.data.payload.payload)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(english){\r\n      setPlay({\r\n        \"language\": \"english\",\r\n        \"priority\": 90,\r\n        \"hidden\": false,\r\n        \"_id\": \"5eaf0fe46936d7087a582a23\",\r\n        \"name\": \"India Today\",\r\n        \"link\": \"https://indiatodaylive.akamaized.net/hls/live/2014320/indiatoday/indiatodaylive/playlist.m3u8\",\r\n        \"image\": \"https://polbol-media.s3.ap-south-1.amazonaws.com/newsIcon/india_today.jpg\",\r\n        \"createdAt\": \"2020-05-03T18:39:32.117Z\",\r\n        \"updatedAt\": \"2020-05-03T18:39:32.117Z\",\r\n        \"__v\": 0\r\n    })\r\n    }\r\n    else{\r\n      setPlay({\r\n        \"language\": \"hindi\",\r\n        \"priority\": 60,\r\n        \"hidden\": false,\r\n        \"_id\": \"5eaf0fe46936d7087a582a13\",\r\n        \"name\": \"AajTak\",\r\n        \"link\": \"https://feeds.intoday.in/aajtak/api/master.m3u8\",\r\n        \"image\": \"https://polbol-media.s3.ap-south-1.amazonaws.com/newsIcon/aajtak.png\",\r\n        \"createdAt\": \"2020-05-03T18:39:32.116Z\",\r\n        \"updatedAt\": \"2020-05-03T18:39:32.116Z\",\r\n        \"__v\": 0\r\n      })\r\n    }\r\n\r\n  },[english])\r\nconst fetchChannels=async()=>{\r\n  await axios.get(\"channels\")\r\n  .then((res)=>{\r\n    console.log(res.data.payload)\r\nsetChannels(res.data.payload)  })\r\n.catch((err)=>{\r\n  console.log(err);\r\n})\r\n\r\n\r\n}\r\n\r\nconst playTv=(c)=>{\r\nconsole.log(c);\r\nsetPlay(c)\r\n}\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n  setEnglish(checked)\r\n}\r\nconst checkPlaying=(id)=>{\r\n  console.log(play._id,id)\r\nif(play._id === id){\r\n  return {\r\n    height:'6rem',\r\n    width:'6rem',\r\n    borderRadius:'50%',\r\n    marginRight:'15px',\r\n    marginBottom:'1.5rem',\r\n    border:\"4px solid red\",\r\n    padding:\"0.5rem\",\r\n    cursor:'pointer',\r\n    boxShadow: '5px 10px 18px #888888'\r\n\r\n  \r\n\r\n  }\r\n}\r\nelse {\r\n  return {\r\n    height:'6rem',\r\n    width:'6rem',\r\n    borderRadius:'50%',\r\n    marginRight:'15px',\r\n    marginBottom:'1.5rem',\r\n    cursor:'pointer',\r\n    boxShadow: '5px 10px 18px #888888'\r\n\r\n  }\r\n}\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"news\">\r\n    <div className='news-head'>\r\n{ /*   <h1>Live Tv</h1>\r\n*/}  </div>\r\n  <section  className='news-section1'>\r\n    <div className=\"left\">\r\n    <div style={{marginBottom:'2rem'}}>\r\n    {channels.filter((h)=>{return h.hidden===false}).filter((p)=>{return english?p.language==='english':p.language===\"hindi\" }).map((c)=>(\r\n      <img style={checkPlaying(c._id)} onClick={()=>playTv(c)}  src={c.image} alt=\"\"/>\r\n    ))}\r\n    \r\n    </div>\r\n    <div>\r\n    {Object.keys(play).length>0 && <ReactPlayer  playing={true} width=\"100%\" controls={true} url={play.link} />\r\n  }\r\n  <div style={{display:\"flex\",justifyContent:\"space-between\",padding:'1rem'}}><span style={{fontWeight:\"bold\"}}>{Object.keys(play).length>0 && play.name}</span><span><span>Hindi</span><Switch style={{margin:'0 1rem'}} defaultChecked onChange={onChange} /><span>English</span></span></div>\r\n    </div>\r\n   \r\n    </div>\r\n    <div className='spotlight'>\r\n      <div className='spotlight-head'>\r\n        <span>Trending News</span>\r\n        <span style={{color:'#56a7ff'}}>View all</span>\r\n      </div>\r\n      <div className='trending-news'>\r\n        {trending&&\r\n          trending.length>0&&\r\n          trending\r\n            .map((k) => \r\n            <div onClick={() => history.push(`/news/${k.targetId}`)}>\r\n            <NewsTrendingCard k={k} />\r\n            </div>\r\n            )}\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  news: state.news,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchNews,\r\n})(Livetv);","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\Quiz.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\AuthActions.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\LanguageAction.js",["299"],"import { GET_LANGUAGE } from './Types';\r\nimport axios from '../axios';\r\n\r\nexport const fetchLanguage = (lang) => async (dispatch) => {\r\n      dispatch({type:GET_LANGUAGE,payload:lang})\r\n};\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\AwardSubCat.js",["300","301"],"import React,{useEffect,useState} from 'react'\r\nimport axios from '../../axios'\r\nimport AwardCategoriesCard from '../../Components/Cards/AwardCategoriesCard'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AwardSubCat = ({match}) => {\r\n  const [subCat,setSubCat]=useState([])\r\n  useEffect(()=>{\r\nfetchAward();\r\nwindow.scrollTo(0, 0);\r\n\r\n  },[])\r\n\r\n  const fetchAward=async()=>{\r\nawait axios.get(`award/awardList?showId=${match.params.showId}`)\r\n.then((res)=>{\r\n  console.log(res.data)\r\n  setSubCat(res.data.payload)\r\n})\r\n  }\r\n  return (\r\n    <div className=\"box\" style={{backgroundColor:'#f5f5f5'}}>\r\n    <div style={{marginBottom:'2rem'}}>\r\n    <h2></h2>\r\n    <span style={{fontSize:'1.5rem',fontWeight:'bold'}}>Sub Categories</span></div>\r\n    <div style={{display:'grid',gridTemplateColumns:'repeat(auto-fit,minmax(300px,1fr))',justifyItems:'center'}}>\r\n    {subCat.map((c)=>(<Link to={`/categories/subcat/award/${match.params.showId}/${c._id}`}><AwardCategoriesCard c={c} type={\"sub\"}/></Link>\r\n      ))\r\n    }\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AwardSubCat\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Modal\\ModalLogin.js",["302","303","304","305","306","307","308","309","310","311","312","313"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport Apple from \"../../assets/apple.svg\";\r\nimport Play from \"../../assets/play_store.png\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport axios from \"../../axios\";\r\nimport { fetchToken, updateUser } from \"../../Actions/AuthActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst ModalLogin = ({\r\n  isModalVisible,\r\n  fetchToken,\r\n  setIsModalVisible,\r\n  updateUser,\r\n  auth: { token, user },\r\n}) => {\r\n  const history = useHistory();\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [resData, setResData] = useState({});\r\n  const [valid, setValid] = useState(true);\r\n  const [timer, setTimer] = useState({\r\n    time: 30,\r\n    isSet: false,\r\n  });\r\n  const [loginSuccessModal,setLoginSuccessModal] = useState(false);\r\n  const [regionData, setRegionData] = useState([]);\r\n  const [profile, setProfile] = useState(false);\r\n  const [profileData, setProfileData] = useState({\r\n    gender: \"\",\r\n    dateOfBirth: new Date(),\r\n    religion: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n  });\r\n  const religionData = [\r\n    \"christian\",\r\n    \"islam\",\r\n    \"hindu\",\r\n    \"sikh\",\r\n    \"jain\",\r\n    \"buddhist\",\r\n    \"other\",\r\n  ];\r\n  const fetchRegions = async () => {\r\n    await axios.get(\"/region\").then((res) => {\r\n      setRegionData(res.data.payload);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchRegions();\r\n  }, []);\r\n  useEffect(() => {\r\n    // setIsModalVisible(true);\r\n    if (timer.time > 0 && timer.isSet) {\r\n      let timer1 = setTimeout(\r\n        () => setTimer({ ...timer, time: timer.time - 1 }),\r\n        1000\r\n      );\r\n\r\n      // this will clear Timeout when component unmount like in willComponentUnmount\r\n      return () => {\r\n        clearTimeout(timer1);\r\n      };\r\n    }\r\n  });\r\n\r\n  const changePhone = (e) => {\r\n    console.log(e.target.value);\r\n    setPhone(e.target.value);\r\n  };\r\n  const handleOtpChange = async (otp) => {\r\n    setOtp(otp);\r\n    if (otp.length === 4) {\r\n      await axios\r\n        .get(`user/${resData._id}/verify-otp?otp=${otp}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.headers[`x-auth`]);\r\n          localStorage.setItem(\r\n            \"authToken\",\r\n            JSON.stringify(res.headers[`x-auth`])\r\n          );\r\n          fetchToken(JSON.stringify(res.headers[`x-auth`]), res.data.payload);\r\n          history.push(\"/\");\r\n          setPhone(\"\");\r\n          setOtp(\"\");\r\n          setResData(\"\");\r\n          setTimer({\r\n            time: 30,\r\n            isSet: false,\r\n          });\r\n          setValid(true);\r\n          if (!res.data.payload.gender) {\r\n            setProfile(true);\r\n          } else {\r\n            setLoginSuccessModal(true);\r\n            setIsModalVisible(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"invalid otp\");\r\n          setValid(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getOtp = async () => {\r\n    if (phone.length === 10) {\r\n      await axios\r\n        .post(`user/login?phone=${phone}`, {\r\n          phone: phone,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          setTimer({ ...timer, time: 30, isSet: true });\r\n          setResData(res.data.payload);\r\n        });\r\n    }\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    setPhone(\"\");\r\n    setOtp(\"\");\r\n    setResData(\"\");\r\n    setTimer({\r\n      time: 30,\r\n      isSet: false,\r\n    });\r\n    setValid(true);\r\n\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setPhone(\"\");\r\n    setOtp(\"\");\r\n    setResData(\"\");\r\n    setTimer({\r\n      time: 30,\r\n      isSet: false,\r\n    });\r\n    setValid(true);\r\n\r\n  };\r\n  function handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  function onChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  function onBlur() {\r\n    console.log(\"blur\");\r\n  }\r\n\r\n  function onFocus() {\r\n    console.log(\"focus\");\r\n  }\r\n\r\n  function onSearch(val) {\r\n    console.log(\"search:\", val);\r\n  }\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    const { gender, religion, dateOfBirth, state, city } = profileData;\r\n    e.preventDefault();\r\n    if (!gender || !dateOfBirth || !state || !city) {\r\n      toast.error(\"Fill all fields!\");\r\n      return;\r\n    }\r\n    await axios\r\n      .patch(`/user/${user._id}`, profileData, {\r\n        headers: {\r\n          Authorization: {\r\n            toString() {\r\n              return `Bearer ` + JSON.parse(token);\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.payload);\r\n        updateUser(res.data.payload)\r\n        toast.success(\"Profile updated!\");\r\n        setLoginSuccessModal(true);\r\n        setIsModalVisible(false)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        visible={loginSuccessModal}\r\n        onOk={()=>setLoginSuccessModal(false)}\r\n        onCancel={()=>{setLoginSuccessModal(false)}}\r\n        footer={null}\r\n      >\r\n        <h3>Logged in succesfully</h3>\r\n      </Modal>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        {!token && (\r\n          <div className=\"signin-form-container\">\r\n            <center>\r\n              {\" \"}\r\n              <img width={100} src={logo} alt=\"\" />\r\n            </center>\r\n\r\n            <div className=\"signin-form-container-box\">\r\n              <div className=\"head\">\r\n                <h2>SIGNIN</h2>\r\n              </div>\r\n              <div>\r\n                <div className=\"input-box\">\r\n                  <input\r\n                    value={phone}\r\n                    onChange={changePhone}\r\n                    type=\"number\"\r\n                    placeholder=\"Phone number\"\r\n                  />\r\n                  <label className=\"label\">Phone number</label>\r\n                </div>\r\n                {Object.keys(resData).length > 0 && (\r\n                  <div className=\"otp-box\">\r\n                    <p>Please enter otp</p>\r\n                    <OtpInput\r\n                      value={otp}\r\n                      onChange={handleOtpChange}\r\n                      numInputs={4}\r\n                      containerStyle={\"container-style\"}\r\n                      inputStyle={\r\n                        valid ? \"input-style\" : \"input-style invalid-style\"\r\n                      }\r\n                      isInputNum={true}\r\n                    />\r\n                    {!valid && <p className=\"invalid\">Invalid otp</p>}\r\n                  </div>\r\n                )}\r\n                <div className=\"actions\">\r\n                  <button\r\n                    onClick={getOtp}\r\n                    onKeyPress={(e) => console.log(e)}\r\n                    type=\"submit\"\r\n                    className=\"get-otp-btn\"\r\n                    disabled={\r\n                      phone.length < 10 || (timer.isSet && timer.time > 0)\r\n                    }\r\n                    style={\r\n                      phone.length < 10 || (timer.isSet && timer.time > 0)\r\n                        ? { cursor: \"no-drop\" }\r\n                        : { cursor: \"pointer\" }\r\n                    }\r\n                  >\r\n                    {Object.keys(resData).length > 0 && resData._id\r\n                      ? `Resend Otp ${timer.time > 0 ? `in ${timer.time} s` : \"\"\r\n                      } `\r\n                      : \"Get otp\"}\r\n                  </button>{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <center><p style={{ fontSize: '1.1rem', color: 'grey' }}>By registering on Polbol you accept the following <a href=\"https://polbol-media.s3.ap-south-1.amazonaws.com/ToS.pdf\">Terms and Conditions.</a></p></center>\r\n\r\n          </div>\r\n        )}\r\n        {token && profile && (\r\n          <div>\r\n            <center>\r\n              {\" \"}\r\n              <h3>Update Profile</h3>\r\n            </center>\r\n\r\n            <form className=\"profile-form\" onSubmit={handleProfileUpdate}>\r\n              <label htmlFor=\"gender\">\r\n                Gender\r\n              <select\r\n                  value={profileData.gender}\r\n                  onChange={(e) =>\r\n                    setProfileData((prev) => ({\r\n                      ...prev,\r\n                      gender: e.target.value,\r\n                    }))\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </select>\r\n              </label>\r\n              <br />\r\n              <label htmlFor=\"\">\r\n                Date of Birth\r\n              <DatePicker\r\n                  onChange={(value) =>\r\n                    setProfileData((prev) => ({ ...prev, dateOfBirth: value }))\r\n                  }\r\n                  value={profileData.dateOfBirth}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label htmlFor=\"religion\">\r\n                Religion\r\n              <select\r\n                  value={profileData.religion}\r\n                  onChange={(e) =>\r\n                    setProfileData((prev) => ({\r\n                      ...prev,\r\n                      religion: e.target.value,\r\n                    }))\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Religion</option>\r\n                  {religionData &&\r\n                    religionData.map((rel) => (\r\n                      <option value={rel}>{rel.toUpperCase()}</option>\r\n                    ))}\r\n                </select>\r\n              </label>\r\n              <br />\r\n              <label htmlFor=\"state\">\r\n                State\r\n              <select\r\n                  value={profileData.state}\r\n                  onChange={(e) =>\r\n                    setProfileData((prev) => ({ ...prev, state: e.target.value }))\r\n                  }\r\n                >\r\n                  <option value=\"\">Select State</option>\r\n                  {regionData &&\r\n                    regionData.length > 0 &&\r\n                    regionData.map((rel) => (\r\n                      <option value={rel.name}>{rel.name.toUpperCase()}</option>\r\n                    ))}\r\n                </select>\r\n              </label>\r\n              <br />\r\n              {profileData.state && (\r\n                <label htmlFor=\"city\">\r\n                  City\r\n                  <select\r\n                    value={profileData.city}\r\n                    onChange={(e) =>\r\n                      setProfileData((prev) => ({\r\n                        ...prev,\r\n                        city: e.target.value,\r\n                      }))\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select City</option>\r\n                    {regionData &&\r\n                      regionData.length > 0 &&\r\n                      regionData\r\n                        .filter((p) => p.name === profileData.state)[0]\r\n                        .subRegions.map((rel) => (\r\n                          <option value={rel}>{rel}</option>\r\n                        ))}\r\n                  </select>\r\n                </label>\r\n              )}\r\n\r\n              <center>\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n              </center>\r\n            </form>\r\n          </div>\r\n        )}\r\n        <ToastContainer />\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchToken, updateUser })(ModalLogin);\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\QuizPlay.js",["314","315","316","317","318","319","320","321","322","323","324","325"],"import React, { useEffect, useState } from 'react';\r\nimport axios from '../../axios';\r\nimport useSound from 'use-sound';\r\nimport boopSfx from '../../assets/Blop-Mark_DiAngelo-79054334.mp3';\r\nimport correctSound from '../../assets/state-change_confirm-up.wav';\r\nimport wrongSound from '../../assets/Wrong-answer-sound-effect.mp3';\r\nimport tik from '../../assets/ticktok.wav'\r\nimport { Modal, Button } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport light from '../../assets/light-bulb-1.png'\r\nimport { FieldTimeOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport {connect} from 'react-redux'\r\nimport lose from '../../assets/lose.png'\r\nimport win from '../../assets/Win.png'\r\nconst { confirm } = Modal;\r\n\r\nconst QuizPlay = ({ match, history,english:{english} }) => {\r\n  const [questions, setQuestions] = useState({});\r\n  const [play] = useSound(boopSfx);\r\n  const [correct] = useSound(correctSound);\r\n  const [wrong] = useSound(wrongSound);\r\n  const [tiktok] = useSound(tik);\r\n  const [start, setStart] = useState(false);\r\n  const [index, setIndex] = useState(0);\r\n  const [display, setDisplay] = useState({});\r\n  const [result, setResult] = useState({});\r\n  const [timer, setTimer] = useState({\r\n    time: 20,\r\n    isOn: false,\r\n  });\r\n  const [final, setFinal] = useState({});\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [hint,setHint]=useState({\r\n    value:5,\r\n    taken:false\r\n  })\r\n  const [hintRes,setHintRes]=useState({});\r\n  const [alert,setAlert]=useState(false)\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    history.push(`/quiz/levels/${match.params.catId}`);\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push(`/quiz/levels/${match.params.catId}`);\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const fetchQuiz = async () => {\r\n    await axios\r\n      .get(\r\n        `/quiz/start/guest?quizId=${match.params.quizId}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setQuestions(res.data.payload);\r\n        \r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuiz();\r\n  }, []);\r\n\r\n  useEffect(() =>{\r\n    startQuiz();\r\n\r\n  },[questions])\r\n  useEffect(() => {\r\n    if (timer.isOn) {\r\n      let timer1 = setTimeout(\r\n        () => setTimer({ ...timer, time: timer.time - 1 }),\r\n        1000\r\n      );\r\n      if (timer.time <= 0) {\r\n        setTimer({ ...timer, isOn: false });\r\n        const timeOut = async () => {\r\n          await axios\r\n            .get(\r\n              `/quiz/timedOut/guest?quesId=${display._id}&resultId=${questions.resultId}`\r\n            )\r\n            .then((res) => {\r\n              setResult(res.data.payload);\r\n            });\r\n        };\r\n        timeOut();\r\n        wrong();\r\n      }\r\n      // this will clear Timeout when component unmount like in willComponentUnmount\r\n      return () => {\r\n        clearTimeout(timer1);\r\n      };\r\n    }\r\n  });\r\n\r\n  const startQuiz = () => {\r\n    if(Object.keys(questions).length>0){\r\n    setStart(true);\r\n    setDisplay(questions.questions[index]);\r\n    setTimer({ ...timer, isOn: true });\r\n    }\r\n  };\r\n\r\n  const showAns = async (answerId) => {\r\n    setTimer({ ...timer, isOn: false });\r\n    // setResult({ hello: 'hello' });\r\n    console.log('answerId', answerId);\r\n    console.log('questionId', display._id);\r\n    console.log('resultId', questions.resultId);\r\n    if (Object.keys(result).length === 0) {\r\n      // play()\r\n      await axios\r\n        .get(\r\n          `/quiz/submitAnswer/guest?resultId=${questions.resultId}&quesId=${display._id}&answer=${answerId}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data.payload);\r\n          if (res.data.payload.isCorrect) {\r\n            correct();\r\n          } else {\r\n            wrong();\r\n          }\r\n          setResult(res.data.payload);\r\n        });\r\n    }\r\n    if (index + 1 === questions.questions.length) {\r\n      await axios\r\n        .get(\r\n          `/quiz/end/guest?resultId=${questions.resultId}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setStart(false);\r\n          showModal();\r\n          setFinal(res.data.payload);\r\n          setDisplay({});\r\n          setResult({});\r\n          setTimer({ ...timer, time: 20, isOn: false });\r\n          setIndex(0);\r\n        });\r\n    }\r\n  };\r\n\r\n  const showCorrect = (id) => {\r\n    console.log(id);\r\n    if (Object.keys(result).length > 0) {\r\n      if (id === result.optionMarked) {\r\n        if (result.optionMarked === result.correctOption) {\r\n          return {\r\n            border: '2px solid green',\r\n          };\r\n        } else {\r\n          return {\r\n            border: '2px solid red',\r\n          };\r\n        }\r\n      }\r\n      if (id !== result.optionMarked) {\r\n        if (id === result.correctOption) {\r\n          return {\r\n            border: '2px solid green',\r\n          };\r\n        }\r\n      }\r\n      if (id) {\r\n        if (result.answer) {\r\n          if (id === result.answer) {\r\n            return {\r\n              border: '2px solid red',\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (index < questions.questions.length) {\r\n      setDisplay(questions.questions[index + 1]);\r\n      setIndex(index + 1);\r\n      setTimer({ ...timer, time: 20, isOn: true });\r\n      setResult({});\r\n      setHint({...hint,taken:false})\r\n    setAlert(false)\r\n    }\r\n  };\r\n  const timerBlink = () => {\r\n    if (timer.time < 5) {\r\n      return {\r\n        color: 'red',\r\n      };\r\n    } else {\r\n      return {\r\n        color: 'black',\r\n      };\r\n    }\r\n  };\r\n\r\n  // const endQuiz=async()=>{\r\n\r\n  // }\r\n\r\n  function showConfirm() {\r\n    confirm({\r\n      title: 'Are you sure you want to quit?',\r\n      icon: <ExclamationCircleOutlined />,\r\n\r\n      onOk() {\r\n        history.push(`/quiz/levels/${match.params.catId}`);\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n  }\r\n\r\n  const getHint=async (id) =>{\r\n    if(hint===0){\r\n      console.log(\"buy hint\")\r\n    }\r\n    if(display.options.length>1&& hint.value>0 &&timer.time>0 && Object.keys(result).length ===0){\r\n  await axios.get(`http://52.66.203.244:2113//quiz/hint/guest?quesId=${id}&cost=1`)\r\n  .then((res)=>{\r\n    setHintRes(res.data.payload)\r\n    console.log(res.data.payload)\r\n    let index;\r\n    let ind=display.options.map((val,ind)=>{\r\n      if(val._id===res.data.payload.answer){\r\n        index=ind\r\n        return ind\r\n      }\r\n    })\r\n    console.log(index)\r\n    \r\n    function generateRandom(min, max) {\r\n      var num = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      console.log(num)\r\n      return (num === index) ? generateRandom(min, max) : num;\r\n  }\r\n  console.log(generateRandom(0,display.options.length-1),\"random\");\r\n  display.options.splice(generateRandom(0,display.options.length-1),1)\r\n    setHint({value:hint.value-1,taken:true})\r\n\r\n  })\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    if(alert===false){\r\n    if(timer.time<6){\r\n      tiktok()\r\n      setAlert(true)\r\n    }\r\n  }\r\n  },[timer.time])\r\n \r\n  \r\n\r\n  return (\r\n    <div className='box'>\r\n   \r\n      <Modal\r\n        title='Result'\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        width='400px'\r\n      >\r\n        {Object.keys(final).length > 0 && (\r\n          <div className='quiz-result' style={{backgroundImage:`url(${final.score<400 ?lose:win})`}} >\r\n          <div className=\"total-score\">\r\n            <p >Total Score: {final.score}/{final.outOf}</p>\r\n            </div>\r\n            <div className=\"bottom\">\r\n            <div className=\"cont\">\r\n            <p><span>Correct Answers :</span><span>{final.countCorrect}/{final.maxQuestions}</span> </p>\r\n            <p><span>No of Attempts :</span><span>{final.attempts}</span> </p>\r\n            <p><span>Accuracy :</span><span> {final.accuracy} %</span></p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n      <div className='quiz-box'>\r\n      \r\n        <div className='quiz-head'>\r\n        <div className=\"hint\"><span>{hint.value}</span><img style={{height:'35px'}} src={light}></img></div>\r\n          <span className='level'>{english?'Level':'स्तर'} 1 </span>\r\n          <span className='timer'>\r\n            <FieldTimeOutlined className='timer-logo' />\r\n            <span style={timerBlink()} className='timer-val'>\r\n              {' '}\r\n              {timer.time} s\r\n            </span>\r\n          </span>\r\n          {start && (\r\n            <span className='questionNo'>\r\n              Question {index + 1} of {questions.questions.length}\r\n            </span>\r\n          )}\r\n        </div>\r\n        {/*!start && (\r\n          <center style={{ marginTop: '1.5rem' }}>\r\n            {' '}\r\n            <span className='start' onClick={startQuiz}>\r\n              Start Quiz\r\n            </span>\r\n          </center>\r\n        )*/}\r\n        {start && display && (\r\n          <div className='quiz '>\r\n            <div className='quiz-ques'>\r\n              <p className=\"modal\">{display.content.question}</p>\r\n              <div className='options'>\r\n                {display.options.map((op) => (\r\n                  <span\r\n                    className='opt'\r\n                    style={showCorrect(op._id)}\r\n                    onClick={() => showAns(op._id)}\r\n                  >\r\n                    {op.text}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"hint-btn\"><span style={{cursor:'pointer'}} onClick={()=>getHint(display._id)}><img style={{height:'25px'}} src={light}></img>{english?'Hint':'हिंट'}</span> </div>\r\n              \r\n                <div className='buttons'>\r\n                {Object.keys(result).length > 0 && (\r\n                  <>\r\n                  <span  className='btn' onClick={showConfirm}>\r\n                    Exit \r\n                  </span>\r\n                  <span className='btn' onClick={nextQuestion}>\r\n                    Next\r\n                  </span>\r\n                  </>\r\n                  )}\r\n                </div>\r\n            \r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  english: state.english,\r\n });\r\n \r\n export default connect(mapStateToProps)(QuizPlay);","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\Graph.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { useEffect, useState } from 'react';\r\n// import { Chart } from \"react-google-charts\";\r\nimport axios from '../../axios';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Select } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nimport { Modal, Button } from 'antd';\r\nimport PieChart from './PieChart'\r\n\r\nconst { Option } = Select;\r\nconst Graph = ({ match, id, isModalVisible, setIsModalVisible }) => {\r\n  const [ageFilter, setAgeFilter] = useState('Age');\r\n  const [regionFilter, setRegionFilter] = useState('Region');\r\n  const [genderFilter, setGenderFilter] = useState('Gender');\r\n  const [overall, setOverall] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n\r\n  const [data1, setData1] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        type: 'bar',\r\n        height: 430,\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true,\r\n          dataLabels: {\r\n            position: 'top',\r\n          },\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n        offsetX: -6,\r\n        style: {\r\n          fontSize: '12px',\r\n          colors: ['#fff'],\r\n        },\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 1,\r\n        colors: ['#fff'],\r\n      },\r\n      xaxis: {\r\n        title: { text: 'Percentage votes' },\r\n        categories: [],\r\n      },\r\n      yaxis: {\r\n        min: 0,\r\n        max: 100,\r\n        title: {\r\n          text: 'Ratings',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n\r\n  const [dataPie,setDataPie]=useState({       \r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        width: '100%',\r\n        type: 'pie',\r\n      },\r\n      labels: [],\r\n      responsive: [{\r\n        breakpoint: 1280,\r\n        options: {\r\n          chart: {\r\n            width: '100%'\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetchResult();\r\n    }\r\n  }, [id]);\r\n\r\n  const dat = [['Votes', 'Audience vote', 'Jury votes', 'Overall']];\r\n  const dat1 = [];\r\n  const dat2 = [];\r\n  const dat3 = [];\r\n  const dat4 = [];\r\n  let seriesData = [];\r\n\r\n  const setDat = () => {\r\n    // Object.keys(data).length>0 && data.award.nominations.length>0 && data.award.nominations.map((n)=>{\r\n    //     // dat.push([n.name,data.nominees[n.name].audience,data.nominees[n.name].jury,data.nominees[n.name].overall.percentage])\r\n    //     dat1.push(n.name)\r\n    //     dat2.push(data.nominees[n.name].audience)\r\n    //     dat3.push(data.nominees[n.name].jury)\r\n    //     dat4.push(data.nominees[n.name].overall.percentage)\r\n\r\n    // })\r\n    if (Object.keys(data).length > 0 && data.poll.type === 'bar') {\r\n      if (overall) {\r\n        Object.keys(data).length > 0 &&\r\n       data.global.chartData.length > 0 &&\r\n          data.global.chartData.map((d) => {\r\n            dat1.push(d.rating);\r\n            dat2.push(d.perc);\r\n          });\r\n      }\r\n      if (ageFilter !== 'Age') {\r\n        Object.keys(data).length > 0 &&\r\n          data.age[ageFilter].chartData &&\r\n          data.age[ageFilter].chartData.map((d) => {\r\n            dat1.push(d.rating);\r\n            dat2.push(d.perc);\r\n          });\r\n      }\r\n      if (regionFilter !== 'Region') {\r\n        Object.keys(data).length > 0 &&\r\n          data.region[regionFilter].chartData &&\r\n          data.region[regionFilter].chartData.map((d) => {\r\n            dat1.push(d.rating);\r\n            dat2.push(d.perc);\r\n          });\r\n      }\r\n      if (genderFilter !== 'Gender') {\r\n        Object.keys(data).length > 0 &&\r\n          data.gender[genderFilter].chartData &&\r\n          data.gender[genderFilter].chartData.map((d) => {\r\n            dat1.push(d.rating);\r\n            dat2.push(d.perc);\r\n          });\r\n      }\r\n     \r\n    }\r\n    seriesData = [\r\n      {\r\n        name: 'Audience Votes',\r\n        data: [...dat2],\r\n      },\r\n    ];\r\n    setData1({ ...data1, series: seriesData });\r\n\r\n    setData1((prevState) => ({\r\n      ...prevState, // copy all other field/objects\r\n      options: {\r\n        // recreate the object that contains the field to update\r\n        ...prevState.options, // copy all the fields of the object\r\n        labels: dat1, // overwrite the value of the field to update\r\n      },\r\n    }));\r\n\r\n\r\n    if (Object.keys(data).length > 0 && data.poll.type==='pie'  ) {\r\n      if (overall) {\r\n        Object.keys(data).length > 0 &&\r\n         Object.keys(data.global).length > 0 &&\r\n          Object.keys(data.global).map((key,ind) => {\r\n            // dat1.push(d.rating);\r\n            // dat2.push(d.perc);\r\n            console.log(data.global[key])\r\n            console.log(key,'key');\r\n            console.log(ind,'ind');\r\n            dat1.push(data.global[key])\r\n            dat2.push(data.options[key])\r\n          });\r\n         \r\n\r\n      }\r\n      if (ageFilter !== 'Age') {\r\n        Object.keys(data).length > 0 &&\r\n        Object.keys(data.age).length > 0 &&\r\n           Object.keys(data.age[ageFilter]).map((key,ind) => {\r\n            // dat1.push(d.rating);\r\n            // dat2.push(d.perc);\r\n            console.log(key);\r\n            console.log(ind);\r\n            console.log(data.age[ageFilter][key]);\r\n            // console.log(data.age[key])\r\n            // console.log(key,'key');\r\n            // console.log(ind,'ind');\r\n            dat1.push(data.age[ageFilter][key])\r\n            dat2.push(data.options[key])\r\n          });\r\n      }\r\n      if (regionFilter !== 'Region') {\r\n        Object.keys(data).length > 0 &&\r\n        Object.keys(data.region).length > 0 &&\r\n           Object.keys(data.region[regionFilter]).map((key,ind) => {\r\n            // dat1.push(d.rating);\r\n            // dat2.push(d.perc);\r\n            console.log(key);\r\n            console.log(ind);\r\n            console.log(data.region[regionFilter][key]);\r\n            // console.log(data.region[key])\r\n            // console.log(key,'key');\r\n            // console.log(ind,'ind');\r\n            dat1.push(data.region[regionFilter][key])\r\n            dat2.push(data.options[key])\r\n          });\r\n      }\r\n      if (genderFilter !== 'Gender') {\r\n        Object.keys(data).length > 0 &&\r\n        Object.keys(data.gender).length > 0 &&\r\n           Object.keys(data.gender[genderFilter]).map((key,ind) => {\r\n            // dat1.push(d.rating);\r\n            // dat2.push(d.perc);\r\n            console.log(key);\r\n            console.log(ind);\r\n            console.log(data.gender[genderFilter][key]);\r\n            // console.log(data.gender[key])\r\n            // console.log(key,'key');\r\n            // console.log(ind,'ind');\r\n            dat1.push(data.gender[genderFilter][key])\r\n            dat2.push(data.options[key])\r\n          });\r\n      }\r\n    \r\n      // setData1({ ...data1, series: seriesData });\r\n  \r\n      // setData1((prevState) => ({\r\n      //   ...prevState, // copy all other field/objects\r\n      //   options: {\r\n      //     // recreate the object that contains the field to update\r\n      //     ...prevState.options, // copy all the fields of the object\r\n      //     xaxis: { ...prevState.xaxis, categories: [...dat1] }, // overwrite the value of the field to update\r\n      //   },\r\n      // }));\r\n\r\n      setDataPie({ ...dataPie, series: dat1 });\r\n      setDataPie((prevState) => ({\r\n        ...prevState, // copy all other field/objects\r\n        options: {\r\n          // recreate the object that contains the field to update\r\n          ...prevState.options, // copy all the fields of the object\r\n          labels: dat2, // overwrite the value of the field to update\r\n        },\r\n      }));\r\n    }\r\n  \r\n    return seriesData;\r\n  };\r\n\r\n  const fetchResult = async () => {\r\n    // await axios.get(`award/results/guest?id=${match.params.id}`)\r\n    await axios.get(`poll/results/guest?id=${id}`).then((res) => {\r\n      setData(res.data.payload);\r\n      console.log(res.data.payload);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer1 = setTimeout(() => setDat(), 1000);\r\n    return () => {\r\n      clearTimeout(timer1);\r\n    };\r\n  }, [data1,dataPie]);\r\n\r\n  const age = () => {\r\n    const ageArr = [];\r\n    for (const property in data.age) {\r\n      ageArr.push(<Option value={property}>{property}</Option>);\r\n    }\r\n    return ageArr;\r\n  };\r\n  function handleChangeAge(value) {\r\n    console.log(`selected ${value}`);\r\n    setOverall(false);\r\n    setAgeFilter(value);\r\n    setRegionFilter('Region');\r\n    setGenderFilter('Gender');\r\n  }\r\n  function handleChangeRegion(value) {\r\n    console.log(`selected ${value}`);\r\n    setOverall(false);\r\n\r\n    setRegionFilter(value);\r\n    setAgeFilter('Age');\r\n    setGenderFilter('Gender');\r\n  }\r\n  function handleChangeGender(value) {\r\n    console.log(`selected ${value}`);\r\n    setOverall(false);\r\n\r\n    setGenderFilter(value);\r\n    setRegionFilter('Region');\r\n    setAgeFilter('Age');\r\n  }\r\n  const region = () => {\r\n    const ageArr = [];\r\n    for (const property in data.region) {\r\n      ageArr.push(<Option value={property}>{property}</Option>);\r\n    }\r\n    return ageArr;\r\n  };\r\n  const gender = () => {\r\n    const ageArr = [];\r\n    for (const property in data.gender) {\r\n      ageArr.push(<Option value={property}>{property}</Option>);\r\n    }\r\n    return ageArr;\r\n  };\r\n  function onChangeOverall(e) {\r\n    console.log(`checked = ${e.target.checked}`);\r\n    setOverall(e.target.checked);\r\n    setGenderFilter('Gender');\r\n    setRegionFilter('Region');\r\n    setAgeFilter('Age');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const overAllRating = () => {\r\n    if (Object.keys(data).length > 0) {\r\n      if (overall) {\r\n        return `Average :${data.global.averageRating}/10`;\r\n      }\r\n      if (ageFilter !== 'Age') {\r\n        return `Average : ${data.age[ageFilter].averageRating}/10`;\r\n      }\r\n      if (regionFilter !== 'Region') {\r\n        return `Average :${data.region[regionFilter].averageRating}/10`;\r\n      }\r\n      if (genderFilter !== 'Gender') {\r\n        return `Average :${data.gender[genderFilter].averageRating}/10`;\r\n      }\r\n    }\r\n  };\r\n  const totalVotes = () => {\r\n    if (Object.keys(data).length > 0) {\r\n      if (overall) {\r\n        return `Total Votes : ${data.global.totalVotes}`;\r\n      }\r\n      if (ageFilter !== 'Age') {\r\n        return `Total Votes : ${data.age[ageFilter].totalVotes}`;\r\n      }\r\n      if (regionFilter !== 'Region') {\r\n        return `Total Votes : ${data.region[regionFilter].totalVotes}`;\r\n      }\r\n      if (genderFilter !== 'Gender') {\r\n        return `Total Votes :${data.gender[genderFilter].totalVotes}`;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      id='res'\r\n      title='Poll result'\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n      >\r\n        <div>\r\n          <p>{Object.keys(data).length > 0 && data.poll.question}</p>\r\n          {Object.keys(data).length > 0&& data.poll.type==='bar'&&<p>\r\n            <span style={{ fontWeight: 'bold', marginRight: '2rem' }}>\r\n              {overAllRating()}\r\n            </span>{' '}\r\n            <span style={{ fontWeight: 'bold' }}>{totalVotes()}</span>\r\n          </p>}\r\n        </div>\r\n\r\n        <div>\r\n          <Checkbox checked={overall} onChange={onChangeOverall}>\r\n            Overall\r\n          </Checkbox>\r\n\r\n          <Select\r\n            value={ageFilter}\r\n            defaultValue='Age'\r\n            style={{ width: 120 }}\r\n            onChange={handleChangeAge}\r\n          >\r\n            {age()}\r\n          </Select>\r\n         <Select\r\n            value={regionFilter}\r\n            defaultValue='region'\r\n            style={{ width: 120 }}\r\n            onChange={handleChangeRegion}\r\n          >\r\n            {region()}\r\n          </Select>\r\n \r\n          <Select\r\n            value={genderFilter}\r\n            defaultValue='gender'\r\n            style={{ width: 120 }}\r\n            onChange={handleChangeGender}\r\n          >\r\n            {gender()}\r\n          </Select>\r\n        </div>\r\n\r\n       {Object.keys(data).length>0&&data.poll.type==='bar'&& <ReactApexChart\r\n          options={data1.options}\r\n          series={data1.series}\r\n          type='bar'\r\n          height={400}\r\n        />\r\n}\r\n{Object.keys(data).length>0&&data.poll.type==='pie'&& <ReactApexChart\r\noptions={dataPie.options}\r\nseries={dataPie.series}\r\ntype='pie'\r\nheight={400}\r\n/>\r\n}\r\n\r\n{/*Object.keys(data).length>0&&data.poll.type==='pie'&& dataPie.series.length>0&&dataPie.options.labels.length>0&& <PieChart dataPie={dataPie}/>*/}\r\n        {/*<Chart\r\nwidth={'100%'}\r\nheight={'300px'}\r\nchartType=\"BarChart\"\r\nloader={<div>Loading Chart</div>}\r\ndata={dat}\r\noptions={{\r\n  title: `${\"\"}`,\r\n  chartArea: { width: '50%' },\r\n  hAxis: {\r\n    title: 'Votes percentage',\r\n    minValue: 0,\r\n    maxValue:100\r\n  },\r\n  vAxis: {\r\n    title: 'Nominees',\r\n  },\r\n}}\r\n// For tests\r\nrootProps={{ 'data-testid': '1' }}\r\n/>*/}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Awards\\Youtube.jsx",["344"],"import React from 'react'\r\n\r\nconst Youtube = ({match}) => {\r\n  return (\r\n    <div style={{height:'100vh'}}>\r\n<iframe src={`https://www.youtube.com/embed/${match.params.ytlink}?autoplay=1&fullscreen=1&mute=0`}\r\n        frameBorder='0'\r\n        allow='autoplay; encrypted-media; fullscreen'\r\n        style={{height:'100%',width:'100%'}}\r\n        allowFullScreen\r\n        title='video'\r\n        allow='autoplay'\r\n/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Youtube\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Polls\\Polls.js",["345","346","347","348"],"import React, { useState, useEffect } from 'react';\r\nimport CategoryBar from '../../Components/CategoryBar/CategoryBar';\r\nimport { cats, catspa } from '../../Components/icons/Icons';\r\nimport { Tabs } from 'antd';\r\nimport axios from '../../axios';\r\nimport moment from 'moment';\r\nimport PollCard from '../../Components/Polls/PollCard';\r\nimport { icons } from '../../Components/icons/Icons';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Polls = ({ english: { english }, auth: { token } }) => {\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [pollsBasedOnCategory, setPollsBasedOnCategory] = useState({});\r\n  const [page, setPage] = useState(1)\r\n  const [vote, setVote] = useState(false)\r\n\r\n\r\n  const { TabPane } = Tabs;\r\n  useEffect(() => {\r\n    fetchPollsSelected();\r\n  }, [english, token, vote]);\r\n\r\n  useEffect(() => {\r\n    fetchPollsSelected();\r\n  }, [selectedTags]);\r\n\r\n  const fetchPollsSelected = async (page) => {\r\n    const queryParam = selectedTags.join(',');\r\n    try {\r\n      if (token) {\r\n        const response = await axios.get(`/polls?hindi=${!english}&mode=active`, {\r\n          headers: {\r\n            Authorization: {\r\n              toString() {\r\n                return `Bearer ` + JSON.parse(token);\r\n              }\r\n            }\r\n          },\r\n          params: {\r\n            page,\r\n            categories: selectedTags.length > 0 ? queryParam : undefined,\r\n          },\r\n        });\r\n        const response1 = await axios.get(`/polls?hindi=${!english}&mode=expired`, {\r\n          headers: {\r\n            Authorization: {\r\n              toString() {\r\n                return `Bearer ` + JSON.parse(token);\r\n              }\r\n            }\r\n          },\r\n          params: {\r\n            page,\r\n            categories: selectedTags.length > 0 ? queryParam : undefined,\r\n          },\r\n        });\r\n        console.log(response1)\r\n        console.log(response.data.payload.payload.concat(response1.data.payload.payload))\r\n        const final = response.data.payload.payload.concat(response1.data.payload.payload)\r\n        console.log(final)\r\n        response.data.payload.payload = final\r\n        const responseJSON = response.data;\r\n        setPollsBasedOnCategory(responseJSON);\r\n\r\n        console.log(responseJSON, 'selected news');\r\n      }\r\n      else {\r\n        const response = await axios.get(`/common/polls?hindi=${!english}`, {\r\n          params: {\r\n            page,\r\n            categories: selectedTags.length > 0 ? queryParam : undefined,\r\n          },\r\n        });\r\n        const responseJSON = response.data;\r\n        setPollsBasedOnCategory(responseJSON);\r\n\r\n        console.log(responseJSON, 'selected news');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  function onChange(checkedValues) {\r\n    console.log('checked = ', checkedValues);\r\n    setSelectedTags(checkedValues);\r\n  }\r\n  const checkChecked = (item) => {\r\n    console.log(selectedTags);\r\n    const bool = selectedTags.indexOf(item);\r\n    console.log(bool);\r\n    if (bool !== -1) {\r\n      return {\r\n        backgroundColor: '#a62844',\r\n        color: 'white',\r\n      };\r\n    }\r\n  };\r\n\r\n  const getExpiryString = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff;\r\n  };\r\n\r\n  const checkLength = (data, type) => {\r\n\r\n    let useData = []\r\n    if (type === 'polls') {\r\n      useData =\r\n        Object.keys(data).length > 0 &&\r\n        data.payload.payload.filter((p) => {\r\n          return getExpiryString(p.lifeSpan) > 0;\r\n        });\r\n      console.log(useData);\r\n      return useData.length;\r\n    }\r\n\r\n  }\r\n\r\n  const PollView = (data, type, type2) => {\r\n    let useData;\r\n    if (type === 'active') {\r\n      useData =\r\n        Object.keys(data).length > 0 &&\r\n        data.payload.payload.filter((p) => {\r\n          return getExpiryString(p.lifeSpan) > 0;\r\n        });\r\n      console.log(useData);\r\n    } else if (type === 'expired') {\r\n      useData =\r\n        Object.keys(data).length > 0 &&\r\n        data.payload.payload.filter((p) => {\r\n          return getExpiryString(p.lifeSpan) < 0;\r\n        });\r\n      console.log(useData);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div style={{ margin: '1.5rem 0' }}>\r\n          {  /*        <span>{useData.length + ' ' + type + ' ' + type2}</span>\r\n    */}        </div>\r\n        <div className='pollCont'>\r\n          {!token && useData &&\r\n            useData.slice(0, 10 * page).map(\r\n              (p) =>\r\n                p.hidden === false && (\r\n                  <PollCard setVote={setVote} vote={vote} english={english} icons={icons} type2={type2} p={p} type={type} />\r\n                )\r\n            )}\r\n          {token && useData &&\r\n            useData.slice(0, 10 * page).map(\r\n              (p) =>\r\n              (\r\n                <PollCard setVote={setVote} vote={vote} english={english} icons={icons} type2={type2} p={p} type={type} />\r\n              )\r\n            )}\r\n        </div>\r\n\r\n        {useData && useData.length > page * 10 && <center><button className=\"loadmore\" onClick={changePage}>Load more</button></center>}\r\n      </>\r\n    );\r\n  };\r\n  const changePage = () => {\r\n    setPage(page + 1)\r\n  }\r\n  return (\r\n    <div className='poll-box'>\r\n      <div>\r\n        {/*<h1>Polls</h1>*/}\r\n        <div>\r\n          <CategoryBar\r\n            onChange={onChange}\r\n            checkChecked={checkChecked}\r\n            cats={catspa}\r\n          />\r\n          <Tabs size={'large'} defaultActiveKey={checkLength(pollsBasedOnCategory, 'polls') === 0 ? '2' : '1'} onChange={callback} type='card'>\r\n            <TabPane tab='Active' key='1'>\r\n              {PollView(pollsBasedOnCategory, 'active', 'polls')}\r\n            </TabPane>\r\n            <TabPane tab='Expired' key='2'>\r\n              {PollView(pollsBasedOnCategory, 'expired', 'polls')}\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  english: state.english,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Polls);","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\AwardsReducer.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\AuthReducer.js",["349"],"import {SIGNIN,LOGOUT,UPDATEUSER} from '../Actions/Types';\r\n\r\nlet token=JSON.parse(localStorage.getItem('authToken'))\r\nconst initialState = {\r\n  token: '',\r\n  user:{}\r\n};\r\n\r\n\r\nexport default function reduce(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  console.log(payload);\r\n  switch (type) {\r\n    case SIGNIN:\r\n      state.token = payload.token;\r\n      state.user=payload.user;\r\n      localStorage.setItem('authToken',JSON.stringify(payload.token));\r\n\r\n      return state;\r\n\r\n      case LOGOUT:\r\n        localStorage.removeItem('authToken')\r\n      state.token = null;\r\n      state.user={};\r\n      return state;\r\n\r\n      case UPDATEUSER:\r\n          state.user=payload;\r\n          return state\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\PollsReducer.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\NewsReducer.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Reducers\\LanguageReducer.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\NewsAction.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\HomePage\\HomeSection3.js",["350","351","352"],"import React from 'react';\r\nimport im from '../../assets/download (1).jpeg';\r\nimport il from '../../assets/download.jpeg';\r\nimport { Button, Radio } from 'antd';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst HomeSection3 = () => {\r\n  const history=useHistory();\r\n  return (\r\n    <div className='base'>\r\n      <div className='disp' style={{ backgroundColor: 'white' }}>\r\n        <div>\r\n          <img\r\n            style={{ width: '50px', width: '100px', borderRadius: '50px' }}\r\n            src={im}\r\n            alt=''\r\n          />\r\n        </div>\r\n        <p>\r\n        Polbol provides exercises for your mind in form of quizzes to test your intelligence and for your entertainment.\r\n        </p>\r\n        <Button onClick={()=>history.push('/quiz')}  type='primary' danger shape='round' >\r\n          <span style={{color:'white'}}>Play quiz</span>\r\n        </Button>\r\n      </div>\r\n      <div className='disp' style={{ backgroundColor: 'white' }}>\r\n        <div>\r\n          <img\r\n            style={{ width: '50px', width: '100px', borderRadius: '50px' }}\r\n            src={il}\r\n            alt=''\r\n          />\r\n        </div>\r\n        <p>\r\n        Never miss any important update with Polbol, catch all the news from top-rated news channel at once place.\r\n        </p>\r\n        <Button onClick={()=>history.push('/livetv')}  shape='round' type='primary' danger >\r\n          <span style={{color:'white'}}>Watch Live Tv</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeSection3;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\axios.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Modal\\ShareModal.js",["353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React from 'react';\r\nimport {\r\n  EmailShareButton,\r\n  FacebookShareButton,\r\n  HatenaShareButton,\r\n  InstapaperShareButton,\r\n  LineShareButton,\r\n  LinkedinShareButton,\r\n  LivejournalShareButton,\r\n  MailruShareButton,\r\n  OKShareButton,\r\n  PinterestShareButton,\r\n  PocketShareButton,\r\n  RedditShareButton,\r\n  TelegramShareButton,\r\n  TumblrShareButton,\r\n  TwitterShareButton,\r\n  ViberShareButton,\r\n  VKShareButton,\r\n  WhatsappShareButton,\r\n  WorkplaceShareButton,\r\n  TwitterIcon,\r\n  FacebookIcon,\r\n  WhatsappIcon,\r\n  EmailIcon,\r\n  TelegramIcon,\r\n} from 'react-share';\r\nimport { Modal, Button } from 'antd';\r\n\r\nconst ShareModal = ({\r\n  isShareModalVisible,\r\n  setIsShareModalVisible,\r\n  shareUrl,\r\n}) => {\r\n  const showModal = () => {\r\n    setIsShareModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsShareModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsShareModalVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={isShareModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={null}\r\n    >\r\n      <div>\r\n        <p className='share-head'> Share on</p>\r\n      </div>\r\n      <div className='share'>\r\n        <FacebookShareButton style={{ cursor: 'pointer' }} url={shareUrl}>\r\n          <FacebookIcon />\r\n        </FacebookShareButton>\r\n        <TwitterShareButton style={{ cursor: 'pointer' }} url={shareUrl}>\r\n          <TwitterIcon />\r\n        </TwitterShareButton>\r\n        <WhatsappShareButton style={{ cursor: 'pointer' }} url={shareUrl}>\r\n          <WhatsappIcon />\r\n        </WhatsappShareButton>\r\n        <EmailShareButton style={{ cursor: 'pointer' }} url={shareUrl}>\r\n          <EmailIcon />\r\n        </EmailShareButton>\r\n        <TelegramShareButton style={{ cursor: 'pointer' }} url={shareUrl}>\r\n          <TelegramIcon />\r\n        </TelegramShareButton>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\AwardResult.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { useEffect, useState } from 'react';\r\n// import { Chart } from \"react-google-charts\";\r\nimport axios from '../../axios';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Select } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nimport { Modal, Button } from 'antd';\r\nimport NomineeCard from '../../Components/Cards/NomineeCard';\r\n\r\nconst { Option } = Select;\r\nconst Graph = ({ match, id, isModalVisible, setIsModalVisible }) => {\r\n  const [ageFilter, setAgeFilter] = useState('Age');\r\n  const [regionFilter, setRegionFilter] = useState('Region');\r\n  const [genderFilter, setGenderFilter] = useState('Gender');\r\n  const [overall, setOverall] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [data1, setData1] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        type: 'bar',\r\n        height: 430,\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true,\r\n          dataLabels: {\r\n            position: 'top',\r\n          },\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled:false,\r\n        offsetX: -6,\r\n        style: {\r\n          fontSize: '12px',\r\n          colors: ['#000'],\r\n        },\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 1,\r\n        colors: ['#000'],\r\n      },\r\n      xaxis: {\r\n        title: { text: 'Percentage votes' },\r\n        categories: [],\r\n      },\r\n      yaxis: {\r\n        min: 0,\r\n        max: 100,\r\n        title: {\r\n          text: 'Nominees',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchResult();\r\n  }, []);\r\n\r\n  const dat1 = [];\r\n  const dat2 = [];\r\n  const dat3 = [];\r\n  const dat4 = [];\r\n  let seriesData = [];\r\n\r\n  const setDat = () => {\r\n    Object.keys(data).length > 0 &&\r\n      data.award.nominations.length > 0 &&\r\n      data.award.nominations.map((n) => {\r\n        // dat.push([n.name,data.nominees[n.name].audience,data.nominees[n.name].jury,data.nominees[n.name].overall.percentage])\r\n        dat1.push(n.name);\r\n        dat2.push(data.nominees[n.name].audience);\r\n        dat3.push(data.nominees[n.name].jury);\r\n        dat4.push(data.nominees[n.name].overall.percentage);\r\n      });\r\n\r\n    seriesData = [\r\n      {\r\n        name: 'Audience Votes',\r\n        data: [...dat2],\r\n      },\r\n      {\r\n        name: 'Jury Votes',\r\n        data: [...dat3],\r\n      },\r\n      {\r\n        name: 'Overall',\r\n        data: [...dat4],\r\n      },\r\n    ];\r\n    setData1({ ...data1, series: seriesData });\r\n\r\n    setData1((prevState) => ({\r\n      ...prevState, // copy all other field/objects\r\n      options: {\r\n        // recreate the object that contains the field to update\r\n        ...prevState.options, // copy all the fields of the object\r\n        xaxis: { ...prevState.xaxis, categories: [...dat1] }, // overwrite the value of the field to update\r\n      },\r\n    }));\r\n    return seriesData;\r\n  };\r\n\r\n  const fetchResult = async () => {\r\n    // await axios.get(`award/results/guest?id=${match.params.id}`)\r\n    await axios.get(`award/results/guest?id=${id}`).then((res) => {\r\n      setData(res.data.payload);\r\n      console.log(res.data.payload);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer1 = setTimeout(() => setDat(), 1000);\r\n    return () => {\r\n      clearTimeout(timer1);\r\n    };\r\n  }, [data1]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      <center>\r\n        <div\r\n          style={{\r\n            width: '300px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <NomineeCard p={Object.keys(data).length > 0 && data.winner} />\r\n          Winner\r\n        </div>\r\n      </center>\r\n      <ReactApexChart\r\n        options={data1.options}\r\n        series={data1.series}\r\n        type='bar'\r\n        height={400}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\Quiz\\QuizCategories.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Views\\HomePage\\HomePollsAndAwards.js",["385","386","387","388","389","390","391","392","393","394"],"import React, { useState, useEffect } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport { Checkbox, Row, Col } from 'antd';\r\nimport { fetchPolls } from '../../Actions/PollsAction';\r\nimport { fetchAwards } from '../../Actions/AwardsAction';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { icons, cats, catspa } from '../../Components/icons/Icons'\r\nimport PollCard from '../../Components/Polls/PollCard'\r\nimport axios from '../../axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Modal, Button } from 'antd';\r\nimport NomineeCard from '../../Components/Cards/NomineeCard'\r\nimport JuryCard from '../../Components/Cards/JuryCard'\r\nimport AwardResult from '../../Components/Result/AwardResult'\r\nconst { TabPane } = Tabs;\r\n\r\nconst HomePollsAndAwards = ({ fetchPolls, fetchAwards, polls: { polls }, awards: { awards }, english: { english },auth:{token} }) => {\r\n  const [selectedTagsPolls, setSelectedTagsPolls] = useState([]);\r\n  const [selectedTagsAwards, setSelectedTagsAwards] = useState([])\r\n  const [pollsBasedOnCategory, setPollsBasedOnCategory] = useState({})\r\n  const [expiredAwards, setExpiredAwards] = useState({})\r\n  const [type3Data, setType3Data] = useState({});\r\n  const [type3, setType3] = useState(false)\r\n  const [comm, setComm] = useState([])\r\n  const [vote,setVote]=useState(false)\r\n\r\n  const history = useHistory();\r\n  const types = [\r\n    \"Bollywood\",\r\n    \"Sports\",\r\n    \"Politics\"\r\n  ]\r\n\r\n  useEffect(() => {\r\n    fetchPolls(english);\r\n    fetchAwards();\r\n    fetchPollsSelected();\r\n    fetchExpiredAwards();\r\n  }, [english]);\r\n  useEffect(() => {\r\n    fetchPollsSelected();\r\n\r\n  }, [selectedTagsPolls,vote,token])\r\n\r\n  const fetchExpiredAwards = async (page) => {\r\n    try {\r\n      const response = await axios.get(`/award/fetchAwardsAndCategories?mode=expired&hindi=${!english}`);\r\n      const responseJSON = response.data;\r\n      setExpiredAwards(responseJSON);\r\n      console.log(responseJSON, 'expired awards');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const fetchPollsSelected = async (page) => {\r\n    const queryParam = selectedTagsPolls.join(',');\r\n    try {\r\n      if(token){\r\n      const response = await axios.get(`/polls?mode=active`,{\r\n        headers: {\r\n            Authorization: {\r\n              toString() {\r\n                return `Bearer `+JSON.parse(token);\r\n              }\r\n            }\r\n        }, \r\n        params: {\r\n          page,\r\n          categories: selectedTagsPolls.length > 0 ? queryParam : undefined\r\n        }\r\n      });\r\n      const response1 = await axios.get(`/polls?mode=expired`,{\r\n        headers: {\r\n            Authorization: {\r\n              toString() {\r\n                return `Bearer `+JSON.parse(token);\r\n              }\r\n            }\r\n        }, \r\n        params: {\r\n          page,\r\n          categories: selectedTagsPolls.length > 0 ? queryParam : undefined\r\n        }\r\n      });\r\n      console.log(response1)\r\n      console.log(response.data.payload.payload.concat(response1.data.payload.payload))\r\n      const final=response.data.payload.payload.concat(response1.data.payload.payload)\r\n      console.log(final)\r\n      response.data.payload.payload=final\r\n      const responseJSON = response.data;\r\n      setPollsBasedOnCategory(responseJSON);\r\n\r\n      console.log(responseJSON, \"selected news\");\r\n    }\r\n    else{\r\n      const response = await axios.get(`/common/polls`, {\r\n        params: {\r\n          page,\r\n          categories: selectedTagsPolls.length > 0 ? queryParam : undefined\r\n        }\r\n      });\r\n      const responseJSON = response.data;\r\n      setPollsBasedOnCategory(responseJSON)\r\n\r\n      console.log(responseJSON, \"selected news\");\r\n\r\n    }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n  function onChange(checkedValues) {\r\n    console.log('checked = ', checkedValues);\r\n    setSelectedTagsPolls(checkedValues);\r\n  }\r\n\r\n  function onChangeSel(checkedValues) {\r\n    console.log('checked = ', checkedValues);\r\n    setSelectedTagsAwards(checkedValues);\r\n  }\r\n  const checkChecked = (item) => {\r\n    console.log(selectedTagsPolls);\r\n    const bool = selectedTagsPolls.indexOf(item);\r\n    console.log(bool);\r\n    if (bool !== -1) {\r\n      return {\r\n        backgroundColor: '#a62844',\r\n        color: 'white',\r\n        fontSize: \"1rem\"\r\n      };\r\n    }\r\n    else {\r\n      return {\r\n        fontSize: '1rem',\r\n      }\r\n    }\r\n  };\r\n  const checkChecked1 = (item) => {\r\n    console.log(selectedTagsAwards);\r\n    const bool = selectedTagsAwards.indexOf(item);\r\n    console.log(bool);\r\n    if (bool !== -1) {\r\n      return {\r\n        backgroundColor: '#a62844',\r\n        color: 'white',\r\n        fontSize: '1rem'\r\n      };\r\n    }\r\n    else {\r\n      return {\r\n        fontSize: '1rem',\r\n      }\r\n    }\r\n  };\r\n  const getExpiryString = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff;\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    if (type3Data && type3Data._id) {\r\n      await axios\r\n        .get(`award/audienceComments?id=${type3Data && type3Data._id}`)\r\n        .then((res) => {\r\n          console.log(res, 'COMMENTS');\r\n          setComm(res.data.payload);\r\n        }).catch(err => {\r\n          console.log('hi', err);\r\n        })\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments()\r\n  }, [type3Data])\r\n\r\n\r\n  const getExpiryString1 = (expiryTime) => {\r\n    const lifeEndTime = moment(expiryTime);\r\n    const now = moment();\r\n    let duration = moment.duration(lifeEndTime.diff(now));\r\n    console.log(duration, \"duration\")\r\n    let difference = Math.floor(duration.asDays());\r\n    let minDiff = Math.floor(duration.asMinutes());\r\n    console.log(minDiff, 'diff');\r\n\r\n    let unit = 'days';\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asHours());\r\n      unit = 'hours';\r\n    }\r\n    if (difference < 1) {\r\n      difference = Math.floor(duration.asMinutes());\r\n      unit = 'minutes';\r\n    }\r\n    return minDiff < 0 ? 'show has expired' : `${duration._data.hours} hours ${duration._data.minutes} minutes left!!`;\r\n  };\r\n  const grid = (data, type, type2) => {\r\n    console.log(data, 'data');\r\n    let useData;\r\n    if (type2 === 'polls') {\r\n      if (type === 'active') {\r\n        useData =\r\n          Object.keys(data).length > 0 &&\r\n          data.payload.payload.filter((p) => {\r\n            return getExpiryString(p.lifeSpan) > 0;\r\n          });\r\n        console.log(useData);\r\n      } else if (type === 'expired') {\r\n        useData =\r\n          Object.keys(data).length > 0 &&\r\n          data.payload.payload.filter((p) => {\r\n            return getExpiryString(p.lifeSpan) < 0;\r\n          });\r\n        console.log(useData);\r\n      }\r\n    }\r\n    if (type2 === 'awards') {\r\n      if (type === 'active') {\r\n        if (selectedTagsAwards.length > 0) {\r\n          useData =\r\n            data && data.length > 0 &&\r\n            data.filter((l) => { return selectedTagsAwards.includes(l.type[0]) }).filter((p) => {\r\n              return getExpiryString(p.lifeSpan) > 0;\r\n            });\r\n        }\r\n        else {\r\n          useData =\r\n            data && data.length > 0 &&\r\n            data.filter((p) => {\r\n              return getExpiryString(p.lifeSpan) > 0;\r\n            });\r\n          console.log(useData);\r\n        }\r\n      } else if (type === 'expired') {\r\n        console.log(expiredAwards.payload, 'exp aw');\r\n        if (selectedTagsAwards.length > 0) {\r\n          useData =\r\n            data && data.length > 0 &&\r\n            data.filter((l) => { return selectedTagsAwards.includes(l.categories[0]) }).filter((p) => {\r\n              return getExpiryString(p.lifeSpan) < 0;\r\n            });\r\n        }\r\n        else {\r\n          useData =\r\n            data && data.length > 0 &&\r\n            data.filter((p) => {\r\n              return getExpiryString(p.lifeSpan) < 0;\r\n            });\r\n          console.log(useData);\r\n        }\r\n      }\r\n    }\r\n    const setIt = (p) => {\r\n      console.log('setIt called', p)\r\n      if (p.isSubcategory) {\r\n        setType3(true)\r\n        setType3Data(p)\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className='grid-46'>\r\n        <div style={{ backgroundColor: '#ffff', textAlign: 'center' }}>\r\n          {type2 === 'polls' && <Checkbox.Group\r\n            className='tags'\r\n            style={{ width: '100%' }}\r\n            onChange={onChange}\r\n          >\r\n            {type2 === 'polls' && catspa.map((p) => (\r\n              <label className=\"cur\" style={checkChecked(p)}>\r\n                {p}\r\n                <Checkbox style={{ display: 'none' }} value={p}></Checkbox>\r\n              </label>\r\n            ))}\r\n          </Checkbox.Group>}\r\n          {type2 === 'awards' && <Checkbox.Group\r\n            className='tags'\r\n            style={{ width: '100%' }}\r\n            onChange={onChangeSel}\r\n          >\r\n            {type2 === 'awards' && catspa.map((p) => (\r\n              <label className=\"cur\" style={checkChecked1(p)}>\r\n                {p}\r\n                <Checkbox style={{ display: 'none' }} value={p}></Checkbox>\r\n              </label>\r\n            ))}\r\n          </Checkbox.Group>}\r\n        </div>\r\n        <div style={{ overflowY: 'scroll' }}>\r\n          <div className=\"top\">\r\n            {/*   <span>\r\n              {useData && useData.length}{' '}\r\n              {data && data.length===0&& \"0\"}{\" \"}\r\n              {type === 'active' ? 'active' : 'expired'} {type2==='polls'?'polls':'Awards'}\r\n         </span>\r\n            <span onClick={()=>{type2==='polls'?history.push('/polls'):history.push(\"/awards\")}}  className=\"viewAll\">View all</span>*/}\r\n          </div>\r\n          <div className=\"grid-2\" >\r\n            {!token&&useData &&\r\n              useData.slice(0, 6).map((p) => (\r\n\r\n                p.hidden === false &&\r\n                <div onClick={() => setIt(p)}>\r\n                  <PollCard setVote={setVote} vote={vote} english={english} type={type} icons={icons} type2={type2} p={p} getExpiryString1={getExpiryString1} />\r\n                </div>\r\n              ))}\r\n               {token&&useData &&\r\n              useData.slice(0, 6).map((p) => (\r\n\r\n              \r\n                <div onClick={() => setIt(p)}>\r\n                  <PollCard setVote={setVote} english={english} type={type} icons={icons} type2={type2} p={p} getExpiryString1={getExpiryString1} />\r\n                </div>\r\n              ))}\r\n\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }} className=\"top\">\r\n            <span onClick={() => { type2 === 'polls' ? history.push('/polls') : history.push(\"/awards\") }} className=\"viewAll\">View all</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  const handleOk = () => {\r\n    setType3(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setType3(false);\r\n  };\r\n  const checkLength = (data, type) => {\r\n\r\n    let useData1 = []\r\n    if (type === 'polls') {\r\n\r\n      useData1 =\r\n        Object.keys(data).length > 0 &&\r\n        data.payload.payload.filter((p) => {\r\n          return getExpiryString(p.lifeSpan) > 0;\r\n        });\r\n      console.log(useData1);\r\n      return useData1.length;\r\n    }\r\n    if (type === 'awards') {\r\n      console.log(data, \"datata\")\r\n      if (data && data.length > 0) {\r\n        return 1\r\n      }\r\n      else {\r\n        return 0\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='card-container'>\r\n      <Modal footer={null} title={type3Data && Object.keys(type3Data).length > 0 && type3Data.heading} visible={type3} onOk={handleOk} onCancel={handleCancel}>\r\n        {/* <h3>{type3Data&& Object.keys(type3Data).length>0 && type3Data.heading}</h3>*/}\r\n        <Tabs size={'small'} onChange={callback} type=\"card\">\r\n          <TabPane tab=\"Nominees\" key=\"1\">\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit,minmax(200px,1fr))', justifyItems: 'center', gridGap: '1.5rem' }}>\r\n              {type3Data && Object.keys(type3Data).length > 0 && type3Data.nominations.map((p) => (\r\n                <NomineeCard p={p} />\r\n              ))}\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab=\"Jury\" key=\"2\">\r\n            <div tyle={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit,minmax(320px,1fr))', justifyItems: 'center', gridGap: '1.5rem' }}>\r\n              {type3Data && Object.keys(type3Data).length > 0 && type3Data.jurys.map((p) => (\r\n                <JuryCard p={p} />\r\n              ))}\r\n            </div>\r\n          </TabPane>\r\n\r\n          <TabPane tab=\"Results\" key=\"3\">\r\n            <AwardResult id={type3Data && Object.keys(type3Data).length > 0 && type3Data._id} />\r\n          </TabPane>\r\n\r\n          <TabPane tab='Comments' key='4'>\r\n            {comm.length > 0 &&\r\n              comm.map((m) => (\r\n                <div className=\"comm-cont\">\r\n                  <div>\r\n                    <img style={{ width: '50px' }} src={m.user.avatar} alt='' />\r\n                  </div>\r\n                  <div>\r\n                    <p>\r\n                      @{m.user.userName} Voted{' '}\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        {m.award.nominations.name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"comment-1\">{m.comment}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </TabPane>\r\n        </Tabs>\r\n\r\n      </Modal>\r\n      <Tabs className={'tabsStyl'} size={'large'} type='card'>\r\n        <TabPane className=\"cat\" id=\"cat\" tab={english ? 'Polls' : 'मतदान'} key='1'>\r\n          <Tabs className={'pp'} size={'small'} defaultActiveKey={checkLength(pollsBasedOnCategory, 'polls') === 0 ? '2' : '1'} onChange={callback}>\r\n            <TabPane tab='Active' key='1'>\r\n              {grid(pollsBasedOnCategory, 'active', 'polls')}\r\n            </TabPane>\r\n            <TabPane tab='Expired' key='2'>\r\n              {grid(pollsBasedOnCategory, 'expired', 'polls')}\r\n            </TabPane>\r\n          </Tabs>\r\n        </TabPane>\r\n        <TabPane tab={english ? 'Awards' : 'अवार्डस'} key='2'>\r\n          <Tabs className={'pp'} size={'small'} defaultActiveKey={checkLength(awards, 'awards') === 0 ? '2' : '1'} onChange={callback}>\r\n            <TabPane tab='Active' key='1'>\r\n              {grid(awards, 'active', 'awards')}\r\n            </TabPane>\r\n            <TabPane tab='Expired' key='2'>\r\n              {grid(expiredAwards.payload, 'expired', 'awards')}\r\n            </TabPane>\r\n          </Tabs>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  polls: state.polls,\r\n  awards: state.awards,\r\n  english: state.english,\r\n  auth:state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchPolls, fetchAwards\r\n})(HomePollsAndAwards);\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\Types.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Modal\\Modal.js",["395","396","397"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport Apple from '../../assets/apple.svg';\r\nimport Play from '../../assets/play_store.png';\r\nconst Modal1 = ({ isModalVisible, setIsModalVisible , text}) => {\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={null}\r\n    >\r\n    <div className=\"mod\">\r\n        {text ? <p>{text}</p> : <p>Find out latest updates with people's views on different issues </p>}\r\n    <div className=\"down\">\r\n    <a style={{display: \"inline-block\"}}\r\n    href=\"https://apps.apple.com/pa/app/polbol/id1476395002?l=en\">\r\n     <img src={Apple} style={{height: \"50px\", width: \"150px\", marginRight: \"20px\"}}\r\n          alt=\"App Store\"/>\r\n </a>\r\n <a style={{display: \"inline-block\"}}\r\n href={`https://play.google.com/store/apps/details?id=com.polbol&hl=en_IN`}>\r\n  <img src={Play} style={{height: \"50px\", width: \"150px\"}} alt=\"PlayStore\"/>\r\n</a>\r\n</div>\r\n    </div>\r\n\r\n    \r\n    \r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Modal1;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\News\\NewsTrendingCard.js",["398"],"import React from 'react'\r\nimport {RightOutlined} from '@ant-design/icons'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst NewsTrendingCard = ({k,setIt}) => {\r\n  return (\r\n    <div onClick={()=>setIt &&setIt(k)} className='trending-news-single'>\r\n    <div className='image-cont'>\r\n      <img src={k.news.images[0]} alt='' />\r\n    </div>\r\n    <div className='trending-desc'>\r\n      <div className='trending-desc-1'>\r\n        <span>{k.title}</span>\r\n        <p style={{fontSize:'1.2rem'}}>{k.description.substr(0,40)+'...'}</p>\r\n      </div>\r\n      <div className='trending-desc-2'>\r\n        <span style={{cursor:'pointer'}}><RightOutlined /></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default NewsTrendingCard\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\News\\NewsCard.js",["399","400","401","402","403","404"],"import React, { useEffect } from 'react';\r\nimport {\r\n  RightOutlined,\r\n  HeartOutlined,\r\n  CommentOutlined,\r\n  ShareAltOutlined,\r\n} from '@ant-design/icons';\r\nimport { icons } from '../icons/Icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NewsCard = ({ p, setIt, data }) => {\r\n  const setBord = () => {\r\n    if (data) {\r\n      if (p._id === data._id) {\r\n        return { border: '2px solid #a62844' };\r\n      }\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <Link\r\nto={`/news/${p._id}`}\r\n      onClick={() => setIt && setIt(p)}\r\n      style={{ cursor: 'pointer' }}\r\n      className='card'\r\n    >\r\n      <div\r\n        className='card-img'\r\n        style={{ backgroundImage: `url(${p.images[0]})` }}\r\n      ></div>\r\n\r\n      <div className='news-headlines'>\r\n        <span>\r\n          <img\r\n            style={{ height: '25px', width: '25px', marginRight: '1rem' }}\r\n            src={icons[p.categories[0]]}\r\n          />\r\n          {p.categories[0]} News\r\n        </span>\r\n        {/*       <p>{p.short_headline}</p>\r\n         */}{' '}\r\n      </div>\r\n      <div style={{ fontWeight: 'bold' }} className='description'>\r\n        <p>{p.headline}</p>\r\n      </div>\r\n      <div className='description'>\r\n        <p>{p.description.substr(0, 80) + '...'}.</p>\r\n      </div>\r\n      {/*<div className='published'>\r\n        <img\r\n          src={p.user.avatar}\r\n          style={{ width: '25px', height: '25px' }}\r\n          alt=''\r\n        />\r\n        <div className='user'>\r\n          <span>\r\n            {p.user.firstName} {p.user.lastName}\r\n          </span>\r\n        </div>\r\n  </div>*/}\r\n\r\n      <div className='read-more'>\r\n        {/*<div className=\"ico\">\r\n      <span className=\"i\"><span style={{marginRight:'0.3rem'}}><HeartOutlined /></span>{p.likesCount}</span>\r\n      <span className=\"i\"><span style={{marginRight:'0.3rem'}}><CommentOutlined /></span>{p.commentCount}</span>\r\n      <span className=\"i\"><span><ShareAltOutlined /></span></span>\r\n</div>*/}\r\n        {setIt ? (\r\n          <span\r\n            className='read'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => setIt && setIt(p)}\r\n          >\r\n            Read more <RightOutlined />\r\n          </span>\r\n        ) : (\r\n          <Link\r\n            className='read'\r\n            to={`/news/${p._id}`}\r\n            style={{ cursor: 'pointer', color: '#1890ff' }}\r\n            onClick={() => setIt && setIt(p)}\r\n          >\r\n            Read more <RightOutlined />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NewsCard;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\icons\\Icons.js",["405"],"import Social from '../../assets/social issues.png'\r\nimport Auto from '../../assets/automobile.png'\r\nimport Tech from '../../assets/technology.png'\r\nimport Legal from '../../assets/legal.png'\r\nimport Crime from '../../assets/crime.png'\r\nimport Media from '../../assets/media.png'\r\nimport International from '../../assets/international.png'\r\nimport Lifestyle from '../../assets/lifestyle.png'\r\nimport Entertainment from '../../assets/entertainment.png'\r\nimport Sports from '../../assets/sports.png'\r\nimport Business from '../../assets/buisness.png'\r\nimport IndianPolitics from '../../assets/indian politics.png'\r\nimport Elections from '../../assets/elections.png'\r\nimport Education from '../../assets/education.png'\r\nimport Economy from '../../assets/economy.png'\r\nimport Health from '../../assets/health.png'\r\nimport Movies from '../../assets/movies.png'\r\nimport Fashion from '../../assets/fashion.png'\r\nimport SocialIssues from '../../assets/social issues.png'\r\n\r\n\r\n\r\n\r\nexport const icons={\r\n  Social,\r\n Auto,\r\n Tech,\r\nLegal,\r\n Crime,\r\nMedia,\r\n International,\r\nLifestyle,\r\nEntertainment ,\r\nSports,\r\nBusiness,\r\nElections,\r\nEducation,\r\nEconomy, \r\nHealth,\r\n Movies,\r\nFashion,\r\n\"Indian Politics\":IndianPolitics,\r\n\"Social\":SocialIssues,\r\nBollywood:Movies,\r\n\"Social Issues\":SocialIssues,\r\n\"Politics\":IndianPolitics\r\n}\r\n\r\n\r\nexport const cats=[ 'Social Issues',\r\n  \"Auto\",\r\n\"Tech\",\r\n 'Legal',\r\n  'Crime',\r\n 'Media',\r\n  'International',\r\n 'Lifestyle',\r\n 'Entertainment' ,\r\n 'Sports',\r\n 'Business',\r\n 'Indian Politics',\r\n 'Elections',\r\n 'Education',\r\n 'Economy', \r\n 'Health',\r\n  'Movies',\r\n 'Fashion',\r\n\r\n]\r\n\r\nexport const catspa=[ 'Social Issues',\r\n  \"Auto\",\r\n\"Tech\",\r\n 'Legal',\r\n  'Crime',\r\n 'Media',\r\n  'International',\r\n 'Lifestyle',\r\n 'Entertainment' ,\r\n 'Sports',\r\n 'Business',\r\n 'Elections',\r\n 'Education',\r\n 'Economy', \r\n 'Health',\r\n 'Fashion',\r\n'Bollywood',\r\n\"Indian Politics\"\r\n]","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\PieChart.js",["406","407"],"import React,{useState} from 'react'\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst PieChart = (dataPie) => {\r\n  const [data,setData]=useState({\r\n          \r\n    series: [44, 55, 13, 43, 22],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie',\r\n      },\r\n      labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n  })\r\n  return (\r\n    <div id=\"chart\">\r\n    <ReactApexChart options={Object.keys(dataPie).length>0&&dataPie.options} series={Object.keys(dataPie).length>0&&dataPie.series} type=\"pie\" width={380} />\r\n  </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default PieChart\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\AwardCategoriesCard.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\CategoryBar\\CategoryBar.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\NomineeCard.js",["408","409","410","411","412"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Modal1 from '../Modal/Modal'\r\nimport {ArrowRightOutlined ,PlayCircleOutlined}from '@ant-design/icons'\r\nimport ModalVideo from 'react-modal-video'\r\nimport {Modal} from 'antd';\r\n\r\nimport ReactPlayer from \"react-player\";\r\n\r\n\r\nconst NomineeCard = ({ p }) => {\r\n   const [isModalVisible,setIsModalVisible]=useState(false)\r\n   const [isOpen, setOpen] = useState(false)\r\n\r\n   const vote=()=>{\r\n     setIsModalVisible(true)\r\n   }\r\n  console.log(p,\"ppp\")\r\n  return (\r\n    <>\r\n    <Modal1 isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible}/>\r\n    {/*<Modal style={{height:'100%'}} width=\"100%\" height=\"100%\" footer={null} visible={isOpen} onCancel={()=>setOpen(false)}>\r\n   \r\n\r\n    <ReactPlayer\r\n    \r\n    width=\"100%\"\r\n    url={`https://www.youtube.com/watch?v=${p.ytlink}`}\r\n  />\r\n  \r\n\r\n  </Modal>*/}\r\n    <div className='nominee-card'>\r\n      <div\r\n        className='img'\r\n        style={{\r\n          clipPath: 'circle(50% at 50% 50%)',\r\n          height: '200px',\r\n          width: '200px',\r\n          backgroundImage: `url(${p.image})`,\r\n        }}\r\n      ></div>\r\n      <div style={{textAlign:'center',fontWeight:'bold',marginTop:'1rem'}}>{p.name}</div>\r\n      <div style={{display:'flex',justifyContent:'space-evenly',marginTop:'1rem',alignItems:'center'}}>{<Link to={`/yt/${p.ytlink}` } style={{fontSize:'2rem'}}><PlayCircleOutlined /></Link>}{<span style={{cursor:'pointer'}} onClick={vote}>Vote Now</span>} {<Link style={{fontSize:'2rem'}} target='_blank' rel={'external'} to={p.weblink}><ArrowRightOutlined /></Link>}</div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NomineeCard;\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\JuryCard.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\QuizLevelsCard.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Polls\\PollCard.js",["413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import React, { useState } from 'react';\r\nimport Graph from '../Result/Graph';\r\nimport Bar from '../Result/Bar';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  PieChartOutlined,\r\n  ArrowRightOutlined,\r\n  LikeOutlined,\r\n  HeartOutlined,\r\n  HeartFilled,\r\n  CommentOutlined,\r\n  ShareAltOutlined,\r\n  HeartTwoTone\r\n} from '@ant-design/icons';\r\nimport { Rate , Radio, Input, Space } from 'antd';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from '../../axios';\r\nimport { Modal, Button } from 'antd';\r\nimport moment from 'moment';\r\nimport Stars from 'react-stars-display';\r\nimport StarRatings from 'react-star-ratings';\r\nimport ShareModal from '../Modal/ShareModal';\r\nimport ModalLogin from '../Modal/ModalLogin'\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PollCard = ({\r\n  auth: { token, user },\r\n\r\n  type2,\r\n  p,\r\n  icons,\r\n  getExpiryString1,\r\n  type,\r\n  setType3,\r\n  setType3Data,\r\n  english,\r\n  isAward,\r\n  setVote,\r\n  vote\r\n}) => {\r\n  const [isShareModalVisible, setIsShareModalVisible] = useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const history = useHistory();\r\n  const [isCommentModal, setIsCommentModal] = useState(false);\r\n  const [shareUrl, setShareUrl] = useState('');\r\n  const [isVoteModal, setIsVoteModal] = useState(false);\r\n  const [answer,setAnswer]= useState({key:0,comment:''});\r\n  const [voteModalData, setVoteModalData] = useState({});\r\n\r\n  const [loginModal,setLoginModal]=useState(false)\r\n\r\n  const showModal = (id) => {\r\n    setIsModalVisible(true);\r\n    setId(id);\r\n  };\r\n  const setIt = (p) => {\r\n    setType3(true);\r\n    setType3Data(p);\r\n  };\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const handleOk = () => {\r\n    setIsCommentModal(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsCommentModal(false);\r\n  };\r\n  const getComments = (id) => {\r\n    console.log(id);\r\n\r\n    axios.get(`/common/polls/comments?poll=${id}`).then((res) => {\r\n      console.log(res.data.payload.data);\r\n      setComments(res.data.payload.data);\r\n      setIsCommentModal(true);\r\n    });\r\n  };\r\n  const share = (url) => {\r\n    setShareUrl(url);\r\n    setIsShareModalVisible(true);\r\n  };\r\n\r\n  const awardPath = () => {\r\n    if (type2 === 'awards' && p.hasCategories) {\r\n      return `/award/categories/${p._id}`;\r\n    }\r\n    if (type2 === 'awards' && !p.hasCategories && !p.isSubcategory) {\r\n      return `/award/subcat/${p._id}`;\r\n    }\r\n    // if(type2 === 'awards' && p.isSubcategory ){\r\n    //   return ``\r\n    // }\r\n  };\r\n\r\n\r\n  const answerSubmitHandler = (id) => {\r\n    const authToken = JSON.parse(JSON.parse(localStorage.getItem(\"authToken\")));\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${authToken}` },\r\n    };\r\n\r\n    const bodyParameters = {\r\n      poll: id,\r\n      answer: answer.key,\r\n      comment: answer.comment,\r\n    };\r\n\r\n    if (answer.comment === '') { delete bodyParameters.comment }\r\n\r\n    axios\r\n      .post(\r\n        \"/poll/add-answer\",\r\n        bodyParameters,\r\n        config\r\n      )\r\n      .then((res) => {\r\n        setIsVoteModal(false);\r\n        setVoteModalData({});\r\n        setAnswer({key:0,comment:''});\r\n        setVote(!vote);\r\n      })\r\n      .catch((err) => {console.log(err);setIsVoteModal(false);\r\n      setVoteModalData({});setAnswer({key:0,comment:''});});\r\n  }\r\n\r\n  const Options = () => {\r\n    return (\r\n      <Radio.Group onChange={(e) => { setAnswer({ ...answer, key: e.target.value }) }} value={answer.key}>\r\n        <Space direction=\"vertical\">\r\n          {\r\n            voteModalData.options.map((option) => {\r\n              return <Radio value={option.key}>{english ? option.name : option.name_hindi}</Radio>\r\n            })\r\n          }\r\n        </Space>\r\n      </Radio.Group>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/*  <Graph\r\n        key={p._id}\r\n        isModalVisible={isModalVisible}\r\n        setIsModalVisible={setIsModalVisible}\r\n        id={id}\r\n    />*/}\r\n    <ModalLogin isModalVisible={loginModal} setIsModalVisible={setLoginModal}/>\r\n      <ShareModal\r\n        shareUrl={shareUrl}\r\n        isShareModalVisible={isShareModalVisible}\r\n        setIsShareModalVisible={setIsShareModalVisible}\r\n      />\r\n      <Bar\r\n        key={p._id}\r\n        id={id}\r\n        isModalVisible={isModalVisible}\r\n        setIsModalVisible={setIsModalVisible}\r\n      />\r\n      <Modal\r\n        title='Comments'\r\n        visible={isCommentModal}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        style={{\r\n          padding:'10px'\r\n        }}\r\n      >\r\n        {comments &&\r\n          comments.length > 0 &&\r\n          comments.map((c) => (\r\n            <div className='comment'>\r\n              <img style={{ width: '30px' }} src={c.user.avatar} alt='' />\r\n              <div className='det'>\r\n                <span>\r\n                  @{c.user.userName} Voted{' '}\r\n                  {typeof c.answer === 'number' ? (\r\n                    <StarRatings\r\n                      rating={c.answer}\r\n                      starRatedColor='brown'\r\n                      numberOfStars={c.answer}\r\n                      starDimension='15px'\r\n                      starSpacing='5px'\r\n                      name='rating'\r\n                    />\r\n                  ) : (\r\n                    `${c.answer}`\r\n                  )}{' '}\r\n                </span>\r\n                <p>{c.comment}</p>\r\n                <p className='bot'>\r\n                  {c.likesCount > 0 && (\r\n                    <span>\r\n                      {c.likesCount} {c.likesCount === 1 ? 'like' : 'likes'}\r\n                    </span>\r\n                  )}{' '}\r\n                  <span>{moment(c.createdAt).fromNow()}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        visible={isVoteModal}\r\n        onOk={() => { setIsVoteModal(false); setAnswer({ ...answer, key: 0 }); setVoteModalData({}) }}\r\n        onCancel={() => { setIsVoteModal(false); setAnswer({ ...answer, key: 0 }); setVoteModalData({}) }}\r\n        footer={null}>\r\n        <h4>{voteModalData.question}</h4>\r\n        {voteModalData.type === 'bar' ?\r\n          <div>\r\n            <Rate count={10} value={answer.key + 1} onChange={(value) => { setAnswer({ ...answer, key: value - 1 }) }} />\r\n          </div> : <span><Options /></span>\r\n        }\r\n        <div style={{ marginTop: '5px' }}>\r\n          <TextArea\r\n            value={answer.comment}\r\n            onChange={({ target: { value } }) => {\r\n              setAnswer({ ...answer, comment: value })\r\n            }}\r\n            placeholder={english ? \"Comment (optional)\" : \"टिप्पणी (वैकल्पिक)\"}\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: '10px' }}>\r\n          <Button type=\"primary\" onClick={() => { \r\n answerSubmitHandler(voteModalData.id) }}>Submit</Button>\r\n        </div>\r\n      </Modal>\r\n\r\n\r\n      <div\r\n        // to={awardPath()}\r\n        onClick={() => type2 === 'awards' && history.push(awardPath())}\r\n        className = { isAward  ? \"award-po\" : \"po\"}\r\n      >\r\n        <div className={\r\n          type2 === 'polls'\r\n            ? 'long-card long-card-hor'\r\n            : 'long-card long-card-ver'\r\n        }>\r\n          <div className='lef'>\r\n            {' '}\r\n            <span className='heading'>\r\n              {type2 === 'polls' && (\r\n                <img\r\n                  style={{ height: '25px', width: '25px', marginRight: '1rem' }}\r\n                  src={\r\n                    type2 === 'polls' ? icons[p.categories[0]] : icons[p.type[0]]\r\n                  }\r\n                />\r\n              )}\r\n              {type2 === 'polls'\r\n                ? `Poll on ${p.categories[0]}`\r\n                : `${getExpiryString1 && getExpiryString1(p.lifeSpan)}`}\r\n            </span>\r\n            {english && (\r\n\r\n              <div\r\n                className='long-card-img'\r\n                style={{\r\n                  backgroundImage: `url(${type2 === 'polls' ? p.image : p.icon ? p.icon : p.image\r\n                    })`,\r\n                }}\r\n              ></div>\r\n            )}\r\n            {!english && (\r\n              <div\r\n                className='long-card-img'\r\n                style={{\r\n                  backgroundImage: `url(${type2 === 'polls'\r\n                      ? p.image_hindi\r\n                      : p.icon_hindi\r\n                        ? p.icon_hindi\r\n                        : p.image\r\n                    })`,\r\n                }}\r\n              ></div>\r\n            )}\r\n          </div>\r\n          <div className='long-card-desc'>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              {type2 === 'awards' && p.hasCategories && (\r\n                <Link\r\n                  style={{ textAlign: 'center' }}\r\n                  to={`/award/categories/${p._id}`}\r\n                >\r\n                  <ArrowRightOutlined />\r\n                </Link>\r\n              )}\r\n              {type2 === 'awards' && !p.hasCategories && !p.isSubcategory && (\r\n                <Link\r\n                  style={{ textAlign: 'center' }}\r\n                  to={`/award/subcat/${p._id}`}\r\n                >\r\n                  <ArrowRightOutlined />\r\n                </Link>\r\n              )}\r\n              {type2 === 'awards' && p.isSubcategory && (\r\n                <span style={{ textAlign: 'center' }}>\r\n                  <ArrowRightOutlined />\r\n                </span>\r\n              )}\r\n              <p>{english ? p.question : p.question_hindi}</p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className='poll-but'>\r\n            {' '}\r\n            {type2 === 'polls' && (\r\n              <div className='ico'>\r\n                <span className='i'>\r\n                  <span style={{ marginRight: '0.3rem' }}>\r\n                    <i style={{ color: 'red' }} className=\"fas fa-heart\"></i>                 </span>\r\n                  {p.likesCount}\r\n                </span>\r\n                <span\r\n                  style={{ cursor: 'pointer' }}\r\n                  className='i'\r\n                  onClick={() => getComments(p._id)}\r\n                >\r\n                  <span style={{ marginRight: '0.3rem' }}>\r\n                    <CommentOutlined />\r\n                  </span>\r\n                  {p.commentCount}\r\n                </span>\r\n                {/* {type === 'active' && <span\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => share(p.url)}\r\n                  className='i'\r\n                >\r\n                  <span>\r\n                    <ShareAltOutlined />\r\n                  </span>\r\n                </span>} */}\r\n              </div>\r\n            )}\r\n            {type2 === 'polls' && type && type === 'active' && !p.userVote&& (\r\n              <span\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => {\r\n                  if(!token){\r\n                    setLoginModal(true)\r\n                  }\r\n                  else if(token && !user.gender){\r\n                    setLoginModal(true)\r\n                  }\r\n                  else{\r\n                  setIsVoteModal(true); \r\n                  setVoteModalData({\r\n                    type: p.type,\r\n                    question: english ? p.question : p.question_hindi,\r\n                    id: p._id,\r\n                    options: p.options\r\n                  })\r\n                }\r\n                }}\r\n                style={{ color: '#56a7ff', cursor: 'pointer' }}\r\n              >\r\n                {english ? 'Vote Now' : 'मतदान करें'}\r\n              </span>\r\n            )}\r\n            {type2 === 'polls' && type && type === 'active' && p.userVote&& (\r\n              <span\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => showModal(p._id)}\r\n                style={{ color: '#56a7ff', cursor: 'pointer' }}\r\n              >\r\n                {english ? 'View Result' : 'परिणाम'} <i style={{ color: '#56a7ff' }}\r\n                  className=\"fas fa-chart-pie\"></i>\r\n              </span>\r\n            )}\r\n            {type2 === 'polls' && type && type === 'expired' && (\r\n              <span\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => showModal(p._id)}\r\n                style={{ color: '#56a7ff', cursor: 'pointer' }}\r\n              >\r\n                {english ? 'View Result' : 'परिणाम'} <i style={{ color: '#56a7ff' }}\r\n                  className=\"fas fa-chart-pie\"></i>\r\n              </span>\r\n            )}\r\n            <div className='read-more-poll'>\r\n              {type2 === 'polls' && (\r\n                <Link\r\n                  style={{ textAlign: 'right' }}\r\n                  onClick={() =>\r\n                    english\r\n                      ? window.open(`${p.url}`)\r\n                      : window.open(`${p.url_hindi}`)\r\n                  }\r\n                >\r\n                  Read more\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PollCard);\r\n","C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Cards\\QuizCategoryCard.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\AwardsAction.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Actions\\PollsAction.js",[],"C:\\Users\\Asus\\Documents\\POLBOL Website\\POLBOL-website\\src\\Components\\Result\\Bar.js",["427","428","429","430","431","432"],{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","severity":1,"message":"438","line":8,"column":7,"nodeType":"439","messageId":"440","endLine":8,"endColumn":19},{"ruleId":"437","severity":1,"message":"441","line":4,"column":10,"nodeType":"439","messageId":"440","endLine":4,"endColumn":22},{"ruleId":"437","severity":1,"message":"442","line":4,"column":24,"nodeType":"439","messageId":"440","endLine":4,"endColumn":36},{"ruleId":"437","severity":1,"message":"443","line":4,"column":38,"nodeType":"439","messageId":"440","endLine":4,"endColumn":53},{"ruleId":"437","severity":1,"message":"444","line":7,"column":10,"nodeType":"439","messageId":"440","endLine":7,"endColumn":16},{"ruleId":"437","severity":1,"message":"445","line":11,"column":8,"nodeType":"439","messageId":"440","endLine":11,"endColumn":12},{"ruleId":"446","severity":1,"message":"447","line":130,"column":17,"nodeType":"448","endLine":134,"endColumn":18},{"ruleId":"449","severity":1,"message":"450","line":152,"column":17,"nodeType":"451","endLine":152,"endColumn":49},{"ruleId":"446","severity":1,"message":"452","line":189,"column":9,"nodeType":"448","endLine":189,"endColumn":78},{"ruleId":"453","severity":1,"message":"454","line":189,"column":17,"nodeType":"455","messageId":"456","endLine":189,"endColumn":37},{"ruleId":"446","severity":1,"message":"447","line":200,"column":13,"nodeType":"448","endLine":204,"endColumn":14},{"ruleId":"449","severity":1,"message":"450","line":221,"column":13,"nodeType":"451","endLine":221,"endColumn":45},{"ruleId":"437","severity":1,"message":"457","line":2,"column":10,"nodeType":"439","messageId":"440","endLine":2,"endColumn":23},{"ruleId":"437","severity":1,"message":"458","line":6,"column":10,"nodeType":"439","messageId":"440","endLine":6,"endColumn":14},{"ruleId":"459","severity":1,"message":"460","line":26,"column":6,"nodeType":"461","endLine":26,"endColumn":15,"suggestions":"462"},{"ruleId":"459","severity":1,"message":"463","line":30,"column":6,"nodeType":"461","endLine":30,"endColumn":20,"suggestions":"464"},{"ruleId":"459","severity":1,"message":"465","line":10,"column":6,"nodeType":"461","endLine":10,"endColumn":8,"suggestions":"466"},{"ruleId":"459","severity":1,"message":"467","line":11,"column":5,"nodeType":"461","endLine":11,"endColumn":7,"suggestions":"468"},{"ruleId":"437","severity":1,"message":"469","line":14,"column":9,"nodeType":"439","messageId":"440","endLine":14,"endColumn":14},{"ruleId":"437","severity":1,"message":"470","line":3,"column":10,"nodeType":"439","messageId":"440","endLine":3,"endColumn":14},{"ruleId":"437","severity":1,"message":"471","line":11,"column":17,"nodeType":"439","messageId":"440","endLine":11,"endColumn":23},{"ruleId":"459","severity":1,"message":"472","line":28,"column":6,"nodeType":"461","endLine":28,"endColumn":8,"suggestions":"473"},{"ruleId":"437","severity":1,"message":"474","line":81,"column":7,"nodeType":"439","messageId":"440","endLine":81,"endColumn":11},{"ruleId":"437","severity":1,"message":"474","line":102,"column":7,"nodeType":"439","messageId":"440","endLine":102,"endColumn":11},{"ruleId":"459","severity":1,"message":"475","line":124,"column":5,"nodeType":"461","endLine":124,"endColumn":16,"suggestions":"476"},{"ruleId":"459","severity":1,"message":"465","line":18,"column":5,"nodeType":"461","endLine":18,"endColumn":7,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":29,"column":162,"nodeType":"448","endLine":29,"endColumn":238},{"ruleId":"437","severity":1,"message":"480","line":15,"column":3,"nodeType":"439","messageId":"440","endLine":15,"endColumn":16},{"ruleId":"437","severity":1,"message":"481","line":17,"column":3,"nodeType":"439","messageId":"440","endLine":17,"endColumn":19},{"ruleId":"437","severity":1,"message":"482","line":18,"column":3,"nodeType":"439","messageId":"440","endLine":18,"endColumn":21},{"ruleId":"437","severity":1,"message":"483","line":21,"column":3,"nodeType":"439","messageId":"440","endLine":21,"endColumn":15},{"ruleId":"437","severity":1,"message":"484","line":24,"column":8,"nodeType":"439","messageId":"440","endLine":24,"endColumn":18},{"ruleId":"437","severity":1,"message":"485","line":44,"column":10,"nodeType":"439","messageId":"440","endLine":44,"endColumn":29},{"ruleId":"459","severity":1,"message":"486","line":71,"column":6,"nodeType":"461","endLine":71,"endColumn":39,"suggestions":"487"},{"ruleId":"459","severity":1,"message":"488","line":79,"column":6,"nodeType":"461","endLine":79,"endColumn":15,"suggestions":"489"},{"ruleId":"437","severity":1,"message":"490","line":87,"column":11,"nodeType":"439","messageId":"440","endLine":87,"endColumn":14},{"ruleId":"437","severity":1,"message":"491","line":88,"column":9,"nodeType":"439","messageId":"440","endLine":88,"endColumn":16},{"ruleId":"459","severity":1,"message":"463","line":102,"column":6,"nodeType":"461","endLine":102,"endColumn":35,"suggestions":"492"},{"ruleId":"459","severity":1,"message":"493","line":108,"column":6,"nodeType":"461","endLine":108,"endColumn":12,"suggestions":"494"},{"ruleId":"437","severity":1,"message":"495","line":111,"column":9,"nodeType":"439","messageId":"440","endLine":111,"endColumn":19},{"ruleId":"437","severity":1,"message":"496","line":113,"column":13,"nodeType":"439","messageId":"440","endLine":113,"endColumn":16},{"ruleId":"437","severity":1,"message":"497","line":228,"column":9,"nodeType":"439","messageId":"440","endLine":228,"endColumn":19},{"ruleId":"498","severity":1,"message":"499","line":276,"column":15,"nodeType":"448","endLine":283,"endColumn":17},{"ruleId":"459","severity":1,"message":"500","line":22,"column":6,"nodeType":"461","endLine":22,"endColumn":8,"suggestions":"501"},{"ruleId":"437","severity":1,"message":"502","line":33,"column":9,"nodeType":"439","messageId":"440","endLine":33,"endColumn":18},{"ruleId":"437","severity":1,"message":"474","line":98,"column":7,"nodeType":"439","messageId":"440","endLine":98,"endColumn":11},{"ruleId":"459","severity":1,"message":"503","line":10,"column":5,"nodeType":"461","endLine":10,"endColumn":7,"suggestions":"504"},{"ruleId":"459","severity":1,"message":"505","line":43,"column":5,"nodeType":"461","endLine":43,"endColumn":7,"suggestions":"506"},{"ruleId":"437","severity":1,"message":"507","line":2,"column":8,"nodeType":"439","messageId":"440","endLine":2,"endColumn":13},{"ruleId":"459","severity":1,"message":"465","line":12,"column":5,"nodeType":"461","endLine":12,"endColumn":7,"suggestions":"508"},{"ruleId":"509","severity":1,"message":"510","line":24,"column":5,"nodeType":"448","endLine":24,"endColumn":9},{"ruleId":"437","severity":1,"message":"471","line":2,"column":17,"nodeType":"439","messageId":"440","endLine":2,"endColumn":23},{"ruleId":"437","severity":1,"message":"511","line":5,"column":8,"nodeType":"439","messageId":"440","endLine":5,"endColumn":13},{"ruleId":"437","severity":1,"message":"512","line":6,"column":8,"nodeType":"439","messageId":"440","endLine":6,"endColumn":12},{"ruleId":"437","severity":1,"message":"513","line":15,"column":9,"nodeType":"439","messageId":"440","endLine":15,"endColumn":15},{"ruleId":"437","severity":1,"message":"514","line":15,"column":17,"nodeType":"439","messageId":"440","endLine":15,"endColumn":25},{"ruleId":"437","severity":1,"message":"515","line":128,"column":9,"nodeType":"439","messageId":"440","endLine":128,"endColumn":18},{"ruleId":"437","severity":1,"message":"516","line":157,"column":12,"nodeType":"439","messageId":"440","endLine":157,"endColumn":24},{"ruleId":"437","severity":1,"message":"517","line":161,"column":12,"nodeType":"439","messageId":"440","endLine":161,"endColumn":20},{"ruleId":"437","severity":1,"message":"518","line":165,"column":12,"nodeType":"439","messageId":"440","endLine":165,"endColumn":18},{"ruleId":"437","severity":1,"message":"519","line":169,"column":12,"nodeType":"439","messageId":"440","endLine":169,"endColumn":19},{"ruleId":"437","severity":1,"message":"520","line":173,"column":12,"nodeType":"439","messageId":"440","endLine":173,"endColumn":20},{"ruleId":"437","severity":1,"message":"521","line":178,"column":21,"nodeType":"439","messageId":"440","endLine":178,"endColumn":29},{"ruleId":"437","severity":1,"message":"471","line":8,"column":17,"nodeType":"439","messageId":"440","endLine":8,"endColumn":23},{"ruleId":"437","severity":1,"message":"522","line":11,"column":29,"nodeType":"439","messageId":"440","endLine":11,"endColumn":43},{"ruleId":"437","severity":1,"message":"523","line":19,"column":10,"nodeType":"439","messageId":"440","endLine":19,"endColumn":14},{"ruleId":"437","severity":1,"message":"524","line":37,"column":10,"nodeType":"439","messageId":"440","endLine":37,"endColumn":17},{"ruleId":"459","severity":1,"message":"525","line":70,"column":6,"nodeType":"461","endLine":70,"endColumn":8,"suggestions":"526"},{"ruleId":"459","severity":1,"message":"527","line":75,"column":5,"nodeType":"461","endLine":75,"endColumn":16,"suggestions":"528"},{"ruleId":"459","severity":1,"message":"529","line":76,"column":3,"nodeType":"439","endLine":76,"endColumn":12,"suggestions":"530"},{"ruleId":"437","severity":1,"message":"531","line":234,"column":9,"nodeType":"439","messageId":"440","endLine":234,"endColumn":12},{"ruleId":"532","severity":1,"message":"533","line":234,"column":42,"nodeType":"534","messageId":"535","endLine":234,"endColumn":44},{"ruleId":"459","severity":1,"message":"536","line":262,"column":5,"nodeType":"461","endLine":262,"endColumn":17,"suggestions":"537"},{"ruleId":"498","severity":1,"message":"499","line":295,"column":56,"nodeType":"448","endLine":295,"endColumn":97},{"ruleId":"498","severity":1,"message":"499","line":333,"column":109,"nodeType":"448","endLine":333,"endColumn":150},{"ruleId":"437","severity":1,"message":"538","line":4,"column":8,"nodeType":"439","messageId":"440","endLine":4,"endColumn":13},{"ruleId":"437","severity":1,"message":"471","line":8,"column":17,"nodeType":"439","messageId":"440","endLine":8,"endColumn":23},{"ruleId":"437","severity":1,"message":"539","line":9,"column":8,"nodeType":"439","messageId":"440","endLine":9,"endColumn":16},{"ruleId":"437","severity":1,"message":"540","line":18,"column":10,"nodeType":"439","messageId":"440","endLine":18,"endColumn":16},{"ruleId":"437","severity":1,"message":"541","line":18,"column":18,"nodeType":"439","messageId":"440","endLine":18,"endColumn":27},{"ruleId":"459","severity":1,"message":"542","line":89,"column":6,"nodeType":"461","endLine":89,"endColumn":10,"suggestions":"543"},{"ruleId":"437","severity":1,"message":"544","line":91,"column":9,"nodeType":"439","messageId":"440","endLine":91,"endColumn":12},{"ruleId":"437","severity":1,"message":"545","line":94,"column":9,"nodeType":"439","messageId":"440","endLine":94,"endColumn":13},{"ruleId":"437","severity":1,"message":"546","line":95,"column":9,"nodeType":"439","messageId":"440","endLine":95,"endColumn":13},{"ruleId":"532","severity":1,"message":"547","line":111,"column":41,"nodeType":"534","messageId":"548","endLine":111,"endColumn":43},{"ruleId":"532","severity":1,"message":"547","line":119,"column":49,"nodeType":"534","messageId":"548","endLine":119,"endColumn":51},{"ruleId":"532","severity":1,"message":"547","line":127,"column":55,"nodeType":"534","messageId":"548","endLine":127,"endColumn":57},{"ruleId":"532","severity":1,"message":"547","line":135,"column":55,"nodeType":"534","messageId":"548","endLine":135,"endColumn":57},{"ruleId":"532","severity":1,"message":"547","line":164,"column":50,"nodeType":"534","messageId":"548","endLine":164,"endColumn":52},{"ruleId":"532","severity":1,"message":"547","line":179,"column":59,"nodeType":"534","messageId":"548","endLine":179,"endColumn":61},{"ruleId":"532","severity":1,"message":"547","line":195,"column":65,"nodeType":"534","messageId":"548","endLine":195,"endColumn":67},{"ruleId":"532","severity":1,"message":"547","line":211,"column":65,"nodeType":"534","messageId":"548","endLine":211,"endColumn":67},{"ruleId":"459","severity":1,"message":"549","line":263,"column":6,"nodeType":"461","endLine":263,"endColumn":21,"suggestions":"550"},{"ruleId":"449","severity":1,"message":"450","line":12,"column":9,"nodeType":"451","endLine":12,"endColumn":25},{"ruleId":"437","severity":1,"message":"470","line":3,"column":10,"nodeType":"439","messageId":"440","endLine":3,"endColumn":14},{"ruleId":"459","severity":1,"message":"551","line":22,"column":6,"nodeType":"461","endLine":22,"endColumn":28,"suggestions":"552"},{"ruleId":"459","severity":1,"message":"551","line":26,"column":6,"nodeType":"461","endLine":26,"endColumn":20,"suggestions":"553"},{"ruleId":"437","severity":1,"message":"474","line":120,"column":7,"nodeType":"439","messageId":"440","endLine":120,"endColumn":11},{"ruleId":"437","severity":1,"message":"554","line":3,"column":5,"nodeType":"439","messageId":"440","endLine":3,"endColumn":10},{"ruleId":"437","severity":1,"message":"555","line":4,"column":18,"nodeType":"439","messageId":"440","endLine":4,"endColumn":23},{"ruleId":"556","severity":1,"message":"557","line":14,"column":37,"nodeType":"558","messageId":"559","endLine":14,"endColumn":42},{"ruleId":"556","severity":1,"message":"557","line":29,"column":37,"nodeType":"558","messageId":"559","endLine":29,"endColumn":42},{"ruleId":"437","severity":1,"message":"560","line":5,"column":3,"nodeType":"439","messageId":"440","endLine":5,"endColumn":20},{"ruleId":"437","severity":1,"message":"561","line":6,"column":3,"nodeType":"439","messageId":"440","endLine":6,"endColumn":24},{"ruleId":"437","severity":1,"message":"562","line":7,"column":3,"nodeType":"439","messageId":"440","endLine":7,"endColumn":18},{"ruleId":"437","severity":1,"message":"563","line":8,"column":3,"nodeType":"439","messageId":"440","endLine":8,"endColumn":22},{"ruleId":"437","severity":1,"message":"564","line":9,"column":3,"nodeType":"439","messageId":"440","endLine":9,"endColumn":25},{"ruleId":"437","severity":1,"message":"565","line":10,"column":3,"nodeType":"439","messageId":"440","endLine":10,"endColumn":20},{"ruleId":"437","severity":1,"message":"566","line":11,"column":3,"nodeType":"439","messageId":"440","endLine":11,"endColumn":16},{"ruleId":"437","severity":1,"message":"567","line":12,"column":3,"nodeType":"439","messageId":"440","endLine":12,"endColumn":23},{"ruleId":"437","severity":1,"message":"568","line":13,"column":3,"nodeType":"439","messageId":"440","endLine":13,"endColumn":20},{"ruleId":"437","severity":1,"message":"569","line":14,"column":3,"nodeType":"439","messageId":"440","endLine":14,"endColumn":20},{"ruleId":"437","severity":1,"message":"570","line":16,"column":3,"nodeType":"439","messageId":"440","endLine":16,"endColumn":20},{"ruleId":"437","severity":1,"message":"571","line":18,"column":3,"nodeType":"439","messageId":"440","endLine":18,"endColumn":19},{"ruleId":"437","severity":1,"message":"572","line":19,"column":3,"nodeType":"439","messageId":"440","endLine":19,"endColumn":16},{"ruleId":"437","severity":1,"message":"573","line":21,"column":3,"nodeType":"439","messageId":"440","endLine":21,"endColumn":23},{"ruleId":"437","severity":1,"message":"471","line":28,"column":17,"nodeType":"439","messageId":"440","endLine":28,"endColumn":23},{"ruleId":"437","severity":1,"message":"515","line":35,"column":9,"nodeType":"439","messageId":"440","endLine":35,"endColumn":18},{"ruleId":"437","severity":1,"message":"538","line":4,"column":8,"nodeType":"439","messageId":"440","endLine":4,"endColumn":13},{"ruleId":"437","severity":1,"message":"574","line":7,"column":10,"nodeType":"439","messageId":"440","endLine":7,"endColumn":18},{"ruleId":"437","severity":1,"message":"575","line":8,"column":10,"nodeType":"439","messageId":"440","endLine":8,"endColumn":15},{"ruleId":"437","severity":1,"message":"471","line":8,"column":17,"nodeType":"439","messageId":"440","endLine":8,"endColumn":23},{"ruleId":"437","severity":1,"message":"513","line":11,"column":9,"nodeType":"439","messageId":"440","endLine":11,"endColumn":15},{"ruleId":"437","severity":1,"message":"576","line":13,"column":10,"nodeType":"439","messageId":"440","endLine":13,"endColumn":19},{"ruleId":"437","severity":1,"message":"577","line":13,"column":21,"nodeType":"439","messageId":"440","endLine":13,"endColumn":33},{"ruleId":"437","severity":1,"message":"578","line":14,"column":10,"nodeType":"439","messageId":"440","endLine":14,"endColumn":22},{"ruleId":"437","severity":1,"message":"579","line":14,"column":24,"nodeType":"439","messageId":"440","endLine":14,"endColumn":39},{"ruleId":"437","severity":1,"message":"580","line":15,"column":10,"nodeType":"439","messageId":"440","endLine":15,"endColumn":22},{"ruleId":"437","severity":1,"message":"581","line":15,"column":24,"nodeType":"439","messageId":"440","endLine":15,"endColumn":39},{"ruleId":"437","severity":1,"message":"582","line":16,"column":10,"nodeType":"439","messageId":"440","endLine":16,"endColumn":17},{"ruleId":"437","severity":1,"message":"583","line":16,"column":19,"nodeType":"439","messageId":"440","endLine":16,"endColumn":29},{"ruleId":"459","severity":1,"message":"542","line":63,"column":6,"nodeType":"461","endLine":63,"endColumn":8,"suggestions":"584"},{"ruleId":"532","severity":1,"message":"547","line":74,"column":38,"nodeType":"534","messageId":"548","endLine":74,"endColumn":40},{"ruleId":"459","severity":1,"message":"549","line":122,"column":6,"nodeType":"461","endLine":122,"endColumn":13,"suggestions":"585"},{"ruleId":"437","severity":1,"message":"586","line":3,"column":20,"nodeType":"439","messageId":"440","endLine":3,"endColumn":23},{"ruleId":"437","severity":1,"message":"587","line":3,"column":25,"nodeType":"439","messageId":"440","endLine":3,"endColumn":28},{"ruleId":"437","severity":1,"message":"470","line":8,"column":17,"nodeType":"439","messageId":"440","endLine":8,"endColumn":21},{"ruleId":"437","severity":1,"message":"471","line":12,"column":17,"nodeType":"439","messageId":"440","endLine":12,"endColumn":23},{"ruleId":"437","severity":1,"message":"588","line":29,"column":9,"nodeType":"439","messageId":"440","endLine":29,"endColumn":14},{"ruleId":"459","severity":1,"message":"589","line":40,"column":6,"nodeType":"461","endLine":40,"endColumn":15,"suggestions":"590"},{"ruleId":"459","severity":1,"message":"551","line":44,"column":6,"nodeType":"461","endLine":44,"endColumn":36,"suggestions":"591"},{"ruleId":"437","severity":1,"message":"474","line":175,"column":7,"nodeType":"439","messageId":"440","endLine":175,"endColumn":11},{"ruleId":"459","severity":1,"message":"475","line":195,"column":6,"nodeType":"461","endLine":195,"endColumn":17,"suggestions":"592"},{"ruleId":"437","severity":1,"message":"474","line":214,"column":7,"nodeType":"439","messageId":"440","endLine":214,"endColumn":11},{"ruleId":"437","severity":1,"message":"593","line":1,"column":17,"nodeType":"439","messageId":"440","endLine":1,"endColumn":25},{"ruleId":"437","severity":1,"message":"471","line":2,"column":17,"nodeType":"439","messageId":"440","endLine":2,"endColumn":23},{"ruleId":"437","severity":1,"message":"515","line":6,"column":9,"nodeType":"439","messageId":"440","endLine":6,"endColumn":18},{"ruleId":"437","severity":1,"message":"594","line":3,"column":9,"nodeType":"439","messageId":"440","endLine":3,"endColumn":13},{"ruleId":"437","severity":1,"message":"595","line":1,"column":17,"nodeType":"439","messageId":"440","endLine":1,"endColumn":26},{"ruleId":"437","severity":1,"message":"480","line":4,"column":3,"nodeType":"439","messageId":"440","endLine":4,"endColumn":16},{"ruleId":"437","severity":1,"message":"596","line":5,"column":3,"nodeType":"439","messageId":"440","endLine":5,"endColumn":18},{"ruleId":"437","severity":1,"message":"481","line":6,"column":3,"nodeType":"439","messageId":"440","endLine":6,"endColumn":19},{"ruleId":"437","severity":1,"message":"597","line":12,"column":9,"nodeType":"439","messageId":"440","endLine":12,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":35,"column":11,"nodeType":"448","endLine":38,"endColumn":13},{"ruleId":"556","severity":1,"message":"598","line":43,"column":1,"nodeType":"558","messageId":"559","endLine":43,"endColumn":9},{"ruleId":"437","severity":1,"message":"599","line":5,"column":10,"nodeType":"439","messageId":"440","endLine":5,"endColumn":14},{"ruleId":"437","severity":1,"message":"600","line":5,"column":15,"nodeType":"439","messageId":"440","endLine":5,"endColumn":22},{"ruleId":"437","severity":1,"message":"601","line":5,"column":8,"nodeType":"439","messageId":"440","endLine":5,"endColumn":18},{"ruleId":"437","severity":1,"message":"575","line":6,"column":9,"nodeType":"439","messageId":"440","endLine":6,"endColumn":14},{"ruleId":"437","severity":1,"message":"602","line":8,"column":8,"nodeType":"439","messageId":"440","endLine":8,"endColumn":19},{"ruleId":"437","severity":1,"message":"603","line":13,"column":11,"nodeType":"439","messageId":"440","endLine":13,"endColumn":17},{"ruleId":"437","severity":1,"message":"604","line":13,"column":19,"nodeType":"439","messageId":"440","endLine":13,"endColumn":26},{"ruleId":"437","severity":1,"message":"605","line":2,"column":8,"nodeType":"439","messageId":"440","endLine":2,"endColumn":13},{"ruleId":"437","severity":1,"message":"606","line":7,"column":3,"nodeType":"439","messageId":"440","endLine":7,"endColumn":19},{"ruleId":"437","severity":1,"message":"607","line":9,"column":3,"nodeType":"439","messageId":"440","endLine":9,"endColumn":15},{"ruleId":"437","severity":1,"message":"480","line":10,"column":3,"nodeType":"439","messageId":"440","endLine":10,"endColumn":16},{"ruleId":"437","severity":1,"message":"608","line":11,"column":3,"nodeType":"439","messageId":"440","endLine":11,"endColumn":14},{"ruleId":"437","severity":1,"message":"481","line":13,"column":3,"nodeType":"439","messageId":"440","endLine":13,"endColumn":19},{"ruleId":"437","severity":1,"message":"483","line":14,"column":3,"nodeType":"439","messageId":"440","endLine":14,"endColumn":15},{"ruleId":"437","severity":1,"message":"609","line":21,"column":8,"nodeType":"439","messageId":"440","endLine":21,"endColumn":13},{"ruleId":"437","severity":1,"message":"610","line":60,"column":9,"nodeType":"439","messageId":"440","endLine":60,"endColumn":14},{"ruleId":"437","severity":1,"message":"611","line":82,"column":9,"nodeType":"439","messageId":"440","endLine":82,"endColumn":14},{"ruleId":"498","severity":1,"message":"499","line":252,"column":17,"nodeType":"448","endLine":257,"endColumn":19},{"ruleId":"449","severity":1,"message":"450","line":372,"column":17,"nodeType":"451","endLine":372,"endColumn":64},{"ruleId":"449","severity":1,"message":"450","line":381,"column":17,"nodeType":"451","endLine":381,"endColumn":64},{"ruleId":"449","severity":1,"message":"450","line":391,"column":17,"nodeType":"451","endLine":391,"endColumn":64},{"ruleId":"437","severity":1,"message":"471","line":2,"column":17,"nodeType":"439","messageId":"440","endLine":2,"endColumn":23},{"ruleId":"437","severity":1,"message":"612","line":13,"column":15,"nodeType":"439","messageId":"440","endLine":13,"endColumn":21},{"ruleId":"437","severity":1,"message":"613","line":14,"column":18,"nodeType":"439","messageId":"440","endLine":14,"endColumn":27},{"ruleId":"437","severity":1,"message":"614","line":15,"column":18,"nodeType":"439","messageId":"440","endLine":15,"endColumn":27},{"ruleId":"459","severity":1,"message":"542","line":23,"column":6,"nodeType":"461","endLine":23,"endColumn":10,"suggestions":"615"},{"ruleId":"437","severity":1,"message":"515","line":54,"column":9,"nodeType":"439","messageId":"440","endLine":54,"endColumn":18},"no-native-reassign",["616"],"no-negated-in-lhs",["617"],"no-unused-vars","'initialState' is assigned a value but never used.","Identifier","unusedVar","'DownOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'MessageOutlined' is defined but never used.","'Navbar' is defined but never used.","'Icon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'RightOutlined' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchNews', 'fetchNewsSelected', and 'getTrending'. Either include them or remove the dependency array. If 'fetchNews' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["618"],"React Hook useEffect has a missing dependency: 'fetchNewsSelected'. Either include it or remove the dependency array.",["619"],"React Hook useEffect has a missing dependency: 'fetchAward'. Either include it or remove the dependency array.",["620"],"React Hook useEffect has a missing dependency: 'fetchCat'. Either include it or remove the dependency array.",["621"],"'hello' is assigned a value but never used.","'cats' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAwards'. Either include it or remove the dependency array. If 'fetchAwards' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["622"],"'unit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["623"],["624"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'HeartOutlined' is defined but never used.","'ShareAltOutlined' is defined but never used.","'ArrowRightOutlined' is defined but never used.","'HeartTwoTone' is defined but never used.","'ShareModal' is defined but never used.","'isShareModalVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.",["625"],"React Hook useEffect has missing dependencies: 'fetchNewsSelected' and 'getTrending'. Either include them or remove the dependency array.",["626"],"'len' is assigned a value but never used.","'pageLen' is assigned a value but never used.",["627"],"React Hook useEffect has a missing dependency: 'y'. Either include it or remove the dependency array.",["628"],"'likeUnlike' is assigned a value but never used.","'res' is assigned a value but never used.","'copyToClip' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'fetchAward' and 'fetchComments'. Either include them or remove the dependency array.",["629"],"'fetchShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchLevels'. Either include it or remove the dependency array.",["630"],"React Hook useEffect has missing dependencies: 'fetchNews' and 'getTrending'. Either include them or remove the dependency array. If 'fetchNews' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["631"],"'axios' is defined but never used.",["632"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Apple' is defined but never used.","'Play' is defined but never used.","'Option' is assigned a value but never used.","'OptGroup' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleChange' is defined but never used.","'onChange' is defined but never used.","'onBlur' is defined but never used.","'onFocus' is defined but never used.","'onSearch' is defined but never used.","'religion' is assigned a value but never used.","'LogoutOutlined' is defined but never used.","'play' is assigned a value but never used.","'hintRes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuiz'. Either include it or remove the dependency array.",["633"],"React Hook useEffect has a missing dependency: 'startQuiz'. Either include it or remove the dependency array.",["634"],"React Hook useEffect contains a call to 'setTimer'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timer, wrong, display._id, questions.resultId] as a second argument to the useEffect Hook.",["635"],"'ind' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'alert' and 'tiktok'. Either include them or remove the dependency array.",["636"],"'Chart' is defined but never used.","'PieChart' is defined but never used.","'series' is assigned a value but never used.","'setSeries' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchResult'. Either include it or remove the dependency array.",["637"],"'dat' is assigned a value but never used.","'dat3' is assigned a value but never used.","'dat4' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'setDat'. Either include it or remove the dependency array.",["638"],"React Hook useEffect has a missing dependency: 'fetchPollsSelected'. Either include it or remove the dependency array.",["639"],["640"],"'token' is assigned a value but never used.","'Radio' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'HatenaShareButton' is defined but never used.","'InstapaperShareButton' is defined but never used.","'LineShareButton' is defined but never used.","'LinkedinShareButton' is defined but never used.","'LivejournalShareButton' is defined but never used.","'MailruShareButton' is defined but never used.","'OKShareButton' is defined but never used.","'PinterestShareButton' is defined but never used.","'PocketShareButton' is defined but never used.","'RedditShareButton' is defined but never used.","'TumblrShareButton' is defined but never used.","'ViberShareButton' is defined but never used.","'VKShareButton' is defined but never used.","'WorkplaceShareButton' is defined but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'ageFilter' is assigned a value but never used.","'setAgeFilter' is assigned a value but never used.","'regionFilter' is assigned a value but never used.","'setRegionFilter' is assigned a value but never used.","'genderFilter' is assigned a value but never used.","'setGenderFilter' is assigned a value but never used.","'overall' is assigned a value but never used.","'setOverall' is assigned a value but never used.",["641"],["642"],"'Row' is defined but never used.","'Col' is defined but never used.","'types' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAwards', 'fetchExpiredAwards', 'fetchPolls', and 'fetchPollsSelected'. Either include them or remove the dependency array. If 'fetchPolls' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["643"],["644"],["645"],"'useState' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'CommentOutlined' is defined but never used.","'setBord' is assigned a value but never used.","Duplicate key 'Social'.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'ModalVideo' is defined but never used.","'ReactPlayer' is defined but never used.","'isOpen' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Graph' is defined but never used.","'PieChartOutlined' is defined but never used.","'LikeOutlined' is defined but never used.","'HeartFilled' is defined but never used.","'Stars' is defined but never used.","'setIt' is assigned a value but never used.","'share' is assigned a value but never used.","'setAge' is assigned a value but never used.","'setGender' is assigned a value but never used.","'setRegion' is assigned a value but never used.",["646"],"no-global-assign","no-unsafe-negation",{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"651","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"651","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"657","fix":"699"},{"desc":"683","fix":"700"},"Update the dependencies array to be: [english, fetchNews, fetchNewsSelected, getTrending]",{"range":"701","text":"702"},"Update the dependencies array to be: [fetchNewsSelected, selectedTags]",{"range":"703","text":"704"},"Update the dependencies array to be: [fetchAward]",{"range":"705","text":"706"},"Update the dependencies array to be: [fetchCat]",{"range":"707","text":"708"},"Update the dependencies array to be: [fetchAwards]",{"range":"709","text":"710"},"Update the dependencies array to be: [fetchComments, type3Data]",{"range":"711","text":"712"},{"range":"713","text":"706"},"Update the dependencies array to be: [news, history.location.pathname, match]",{"range":"714","text":"715"},"Update the dependencies array to be: [english, fetchNewsSelected, getTrending]",{"range":"716","text":"717"},"Update the dependencies array to be: [selectedTags, english, token, fetchNewsSelected]",{"range":"718","text":"719"},"Update the dependencies array to be: [page, y]",{"range":"720","text":"721"},"Update the dependencies array to be: [fetchAward, fetchComments]",{"range":"722","text":"723"},"Update the dependencies array to be: [fetchLevels]",{"range":"724","text":"725"},"Update the dependencies array to be: [fetchNews, getTrending]",{"range":"726","text":"727"},{"range":"728","text":"706"},"Update the dependencies array to be: [fetchQuiz]",{"range":"729","text":"730"},"Update the dependencies array to be: [questions, startQuiz]",{"range":"731","text":"732"},"Add dependencies array: [timer, wrong, display._id, questions.resultId]",{"range":"733","text":"734"},"Update the dependencies array to be: [alert, tiktok, timer.time]",{"range":"735","text":"736"},"Update the dependencies array to be: [fetchResult, id]",{"range":"737","text":"738"},"Update the dependencies array to be: [data1, dataPie, setDat]",{"range":"739","text":"740"},"Update the dependencies array to be: [english, fetchPollsSelected, token, vote]",{"range":"741","text":"742"},"Update the dependencies array to be: [fetchPollsSelected, selectedTags]",{"range":"743","text":"744"},"Update the dependencies array to be: [fetchResult]",{"range":"745","text":"746"},"Update the dependencies array to be: [data1, setDat]",{"range":"747","text":"748"},"Update the dependencies array to be: [english, fetchAwards, fetchExpiredAwards, fetchPolls, fetchPollsSelected]",{"range":"749","text":"750"},"Update the dependencies array to be: [selectedTagsPolls, vote, token, fetchPollsSelected]",{"range":"751","text":"752"},{"range":"753","text":"712"},{"range":"754","text":"738"},[1056,1065],"[english, fetchNews, fetchNewsSelected, getTrending]",[1123,1137],"[fetchNewsSelected, selectedTags]",[340,342],"[fetchAward]",[330,332],"[fetchCat]",[1172,1174],"[fetchAwards]",[3711,3722],"[fetchComments, type3Data]",[466,468],[2313,2346],"[news, history.location.pathname, match]",[2518,2527],"[english, fetchNewsSelected, getTrending]",[3112,3141],"[selectedTags, english, token, fetchNewsSelected]",[3233,3239],"[page, y]",[733,735],"[fetchAward, fetchComments]",[331,333],"[fetchLevels]",[1469,1471],"[fetchNews, getTrending]",[341,343],[2174,2176],"[fetchQuiz]",[2226,2237],"[questions, startQuiz]",[2973,2973],", [timer, wrong, display._id, questions.resultId]",[7067,7079],"[alert, tiktok, timer.time]",[2052,2056],"[fetchResult, id]",[8088,8103],"[data1, dataPie, setDat]",[796,818],"[english, fetchPollsSelected, token, vote]",[877,891],"[fetchPollsSelected, selectedTags]",[1605,1607],"[fetchResult]",[3301,3308],"[data1, setDat]",[1579,1588],"[english, fetchAwards, fetchExpiredAwards, fetchPolls, fetchPollsSelected]",[1647,1677],"[selectedTagsPolls, vote, token, fetchPollsSelected]",[5837,5848],[830,834]]