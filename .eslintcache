[{"/Users/shaunviviandsouza/Desktop/polbol-v2/src/index.js":"1","/Users/shaunviviandsouza/Desktop/polbol-v2/src/App.js":"2","/Users/shaunviviandsouza/Desktop/polbol-v2/src/reportWebVitals.js":"3","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Layout/Layout.js":"4","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Navigation/Nav.js":"5","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/MainView/MainView.js":"6","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Store.js":"7","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/index.js":"8","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Footer/Footer.js":"9","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/NewsReducer.js":"10","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/PollsReducer.js":"11","/Users/shaunviviandsouza/Desktop/polbol-v2/src/axios.js":"12","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/icons/Icons.js":"13","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/NewsAction.js":"14","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/Types.js":"15","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/PollsAction.js":"16","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/AwardsReducer.js":"17","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/AwardsAction.js":"18","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/News/NewsCard.js":"19","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/News/NewsTrendingCard.js":"20","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/HomePage/Home.js":"21","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/HomePage/HomePollsAndAwards.js":"22","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/HomePage/HomeSection3.js":"23","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/News/News.js":"24","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/CategoryBar/CategoryBar.js":"25","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/Polls/Polls.js":"26","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Polls/PollCard.js":"27","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/Awards/Awards.js":"28"},{"size":243,"mtime":1611563817947,"results":"29","hashOfConfig":"30"},{"size":265,"mtime":1611564685720,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1611551138194,"results":"32","hashOfConfig":"30"},{"size":236,"mtime":1611551698141,"results":"33","hashOfConfig":"30"},{"size":3669,"mtime":1612074724105,"results":"34","hashOfConfig":"30"},{"size":635,"mtime":1612070191921,"results":"35","hashOfConfig":"30"},{"size":358,"mtime":1611563719922,"results":"36","hashOfConfig":"30"},{"size":253,"mtime":1611989641509,"results":"37","hashOfConfig":"30"},{"size":3172,"mtime":1611555407945,"results":"38","hashOfConfig":"30"},{"size":315,"mtime":1611563678950,"results":"39","hashOfConfig":"30"},{"size":317,"mtime":1611583254643,"results":"40","hashOfConfig":"30"},{"size":127,"mtime":1611562809626,"results":"41","hashOfConfig":"30"},{"size":1322,"mtime":1611594054440,"results":"42","hashOfConfig":"30"},{"size":326,"mtime":1611989692564,"results":"43","hashOfConfig":"30"},{"size":104,"mtime":1611582015717,"results":"44","hashOfConfig":"30"},{"size":325,"mtime":1611582108710,"results":"45","hashOfConfig":"30"},{"size":323,"mtime":1611989621806,"results":"46","hashOfConfig":"30"},{"size":346,"mtime":1611991126859,"results":"47","hashOfConfig":"30"},{"size":1647,"mtime":1612015258818,"results":"48","hashOfConfig":"30"},{"size":593,"mtime":1612010377034,"results":"49","hashOfConfig":"30"},{"size":4278,"mtime":1612090682427,"results":"50","hashOfConfig":"30"},{"size":7700,"mtime":1612067066397,"results":"51","hashOfConfig":"30"},{"size":1283,"mtime":1612009995942,"results":"52","hashOfConfig":"30"},{"size":3650,"mtime":1612066250464,"results":"53","hashOfConfig":"30"},{"size":507,"mtime":1612066142309,"results":"54","hashOfConfig":"30"},{"size":3736,"mtime":1612070114639,"results":"55","hashOfConfig":"30"},{"size":1277,"mtime":1612066969162,"results":"56","hashOfConfig":"30"},{"size":4566,"mtime":1612070946832,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"gni0g9",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},"/Users/shaunviviandsouza/Desktop/polbol-v2/src/index.js",[],["123","124"],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/App.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/reportWebVitals.js",[],["125","126"],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Layout/Layout.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Navigation/Nav.js",["127","128","129","130"],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/MainView/MainView.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Store.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/index.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Footer/Footer.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/NewsReducer.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/PollsReducer.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/axios.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/icons/Icons.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/NewsAction.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/Types.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/PollsAction.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Reducers/AwardsReducer.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Actions/AwardsAction.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/News/NewsCard.js",["131"],"import React from 'react'\nimport {RightOutlined} from '@ant-design/icons'\nimport {icons} from '../icons/Icons'\n\n\nconst NewsCard = ({p,setIt,data}) => {\n\n  const setBord=()=>{\n    if(data){\n    if(p._id === data._id){\n      return {border:'2px solid #a62844'}\n    }\n  }\n  }\n  return <div style={setBord()}  className='card'>\n                  <div\n                    className='card-img'\n                    style={{ backgroundImage: `url(${p.images[0]})` }}\n                  ></div>\n                  \n                  <div className='news-headlines'>\n                    <span><img style={{height:'25px',width:'25px',marginRight:'1rem'}} src={icons[p.categories[0]]}/>{p.categories[0]} News</span>\n                    <p>{p.short_headline}</p>\n                  </div>\n                  <div className=\"description\">\n                  <p>{p.description.substr(0,80)+'...'}.</p>\n                  </div>\n                  <div className='published'>\n                    <img\n                      src={p.user.avatar}\n                      style={{ width: '25px', height: '25px' }}\n                      alt=''\n                    />\n                    <div className='user'>\n                      <span>\n                        {p.user.firstName} {p.user.lastName}\n                      </span>\n                \n                    </div>\n                  </div>\n                  <div className='read-more'>\n                    <span style={{cursor:'pointer'}} onClick={()=>setIt(p)}>\n                      Read more <RightOutlined />\n                    </span>\n                  </div>\n                </div>\n  \n}\n\nexport default NewsCard\n","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/News/NewsTrendingCard.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/HomePage/Home.js",["132","133","134","135"],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/HomePage/HomePollsAndAwards.js",["136","137","138","139","140","141","142"],"import React, { useState, useEffect } from 'react';\nimport { Tabs } from 'antd';\nimport { Checkbox, Row, Col } from 'antd';\nimport { fetchPolls } from '../../Actions/PollsAction';\nimport { fetchAwards } from '../../Actions/AwardsAction';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {icons,cats} from '../../Components/icons/Icons'\nimport PollCard from '../../Components/Polls/PollCard'\nimport axios from '../../axios'\n\nconst { TabPane } = Tabs;\n\nconst HomePollsAndAwards = ({ fetchPolls,fetchAwards, polls: { polls },awards:{awards} }) => {\n  const [selectedTagsPolls, setSelectedTagsPolls] = useState([]);\n  const [selectedTagsAwards,setSelectedTagsAwards]=useState([])\n  const [pollsBasedOnCategory,setPollsBasedOnCategory]=useState({})\n\n  const types=[\n    \"Bollywood\",\n    \"Sports\",\n    \"Politics\"\n  ]\n \n  useEffect(() => {\n    fetchPolls();\n    fetchAwards();\n    fetchPollsSelected();\n  }, []);\nuseEffect(()=>{\n  fetchPollsSelected();\n\n},[selectedTagsPolls])\n\n  const fetchPollsSelected = async (page) => {\n    const queryParam = selectedTagsPolls.join(',');\n    try {\n        const response = await axios.get('/common/polls', {\n            params: {\n                page,\n                categories: selectedTagsPolls.length > 0 ? queryParam : undefined\n            }\n        });\n        const responseJSON = response.data;\n        setPollsBasedOnCategory(responseJSON)\n\n        console.log(responseJSON,\"selected news\");\n   \n    } catch (err) {\n        console.log(err);\n    }\n};\n  function callback(key) {\n    console.log(key);\n  }\n  function onChange(checkedValues) {\n    console.log('checked = ', checkedValues);\n    setSelectedTagsPolls(checkedValues);\n  }\n\n  function onChangeSel(checkedValues){\n    console.log('checked = ', checkedValues);\n    setSelectedTagsAwards(checkedValues);\n  }\n  const checkChecked = (item) => {\n    console.log(selectedTagsPolls);\n    const bool = selectedTagsPolls.indexOf(item);\n    console.log(bool);\n    if (bool !== -1) {\n      return {\n        backgroundColor: '#a62844',\n        color: 'white',\n      };\n    }\n  };\n  const checkChecked1 = (item) => {\n    console.log(selectedTagsAwards);\n    const bool = selectedTagsAwards.indexOf(item);\n    console.log(bool);\n    if (bool !== -1) {\n      return {\n        backgroundColor: '#a62844',\n        color: 'white',\n      };\n    }\n  };\n  const getExpiryString = (expiryTime) => {\n    const lifeEndTime = moment(expiryTime);\n    const now = moment();\n    let duration = moment.duration(lifeEndTime.diff(now));\n    let difference = Math.floor(duration.asDays());\n    let minDiff = Math.floor(duration.asMinutes());\n    console.log(minDiff, 'diff');\n\n    let unit = 'days';\n    if (difference < 1) {\n      difference = Math.floor(duration.asHours());\n      unit = 'hours';\n    }\n    if (difference < 1) {\n      difference = Math.floor(duration.asMinutes());\n      unit = 'minutes';\n    }\n    return minDiff;\n  };\n\n  const getExpiryString1 = (expiryTime) => {\n    const lifeEndTime = moment(expiryTime);\n    const now = moment();\n    let duration = moment.duration(lifeEndTime.diff(now));\n    console.log(duration,\"duration\")\n    let difference = Math.floor(duration.asDays());\n    let minDiff = Math.floor(duration.asMinutes());\n    console.log(minDiff, 'diff');\n\n    let unit = 'days';\n    if (difference < 1) {\n      difference = Math.floor(duration.asHours());\n      unit = 'hours';\n    }\n    if (difference < 1) {\n      difference = Math.floor(duration.asMinutes());\n      unit = 'minutes';\n    }\n    return minDiff<0?'show has expired':`${duration._data.hours} hours ${duration._data.minutes} minutes left!!`;\n  };\n  const grid = (data, type,type2) => {\n    console.log(data, 'data');\n    let useData;\nif(type2==='polls'){\n    if (type === 'active') {\n      useData =\n        Object.keys(data).length>0 &&\n        data.payload.payload.filter((p) => {\n          return getExpiryString(p.lifeSpan) > 0;\n        });\n      console.log(useData);\n    } else if (type === 'expired') {\n      useData =\n        Object.keys(data).length>0 &&\n        data.payload.payload.filter((p) => {\n          return getExpiryString(p.lifeSpan) < 0;\n        });\n      console.log(useData);\n    }\n  }\n  if(type2==='awards'){\n    if (type === 'active') {\n      if(selectedTagsAwards.length>0){\n        useData =\n        data &&data.length>0 &&\n        data.filter((l)=>{return selectedTagsAwards.includes(l.type[0])}).filter((p) => {\n          return getExpiryString(p.lifeSpan) > 0;\n        });\n      }\n      else{\n      useData =\n        data &&data.length>0 &&\n        data.filter((p) => {\n          return getExpiryString(p.lifeSpan) > 0;\n        });\n      console.log(useData);\n      }\n    } else if (type === 'expired') {\n      if(selectedTagsAwards.length>0){\n        useData =\n        data &&data.length>0 &&\n        data.filter((l)=>{return selectedTagsAwards.includes(l.type[0])}).filter((p) => {\n          return getExpiryString(p.lifeSpan) < 0;\n        });\n      }\n      else{\n      useData =\n        data &&data.length>0 &&\n        data.filter((p) => {\n          return getExpiryString(p.lifeSpan) < 0;\n        });\n      console.log(useData);\n      }\n    }\n  }\n\n    return (\n      <div className='grid-46'>\n        <div style={{ backgroundColor: '#ffff' }}>\n          {type2==='polls'&&<Checkbox.Group\n            className='tags'\n            style={{ width: '100%' }}\n            onChange={onChange}\n          >\n          {type2==='polls'&&cats.map((p)=>(\n            <label style={checkChecked(p)}>\n              {p}\n              <Checkbox style={{ display: 'none' }} value={p}></Checkbox>\n            </label>\n          ))}\n          </Checkbox.Group>}\n          {type2==='awards'&&<Checkbox.Group\n          className='tags'\n          style={{ width: '100%' }}\n          onChange={onChangeSel}\n        >\n        {type2==='awards'&&cats.map((p)=>(\n          <label style={checkChecked1(p)}>\n            {p}\n            <Checkbox style={{ display: 'none' }} value={p}></Checkbox>\n          </label>\n        ))}\n        </Checkbox.Group>}\n\n\n\n\n\n        </div>\n        <div style={{overflowY:'scroll'}}>\n          <div className=\"top\">\n            <span>\n              {useData && useData.length}{' '}\n              {type === 'active' ? 'active' : 'expired'} {type2==='polls'?'polls':'Awards'}\n            </span>\n            <span>View all</span>\n          </div>\n          <div className=\"grid-2\" >\n            {useData &&\n              useData.map((p) => (\n\n              p.hidden===false&&  <PollCard icons={icons} type2={type2} p={p} getExpiryString1={getExpiryString1}/>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className='card-container'>\n      <Tabs type='card'>\n        <TabPane tab='Polls' key='1'>\n          <Tabs defaultActiveKey='1' onChange={callback}>\n            <TabPane tab='Active' key='1'>\n              {grid(pollsBasedOnCategory, 'active','polls')}\n            </TabPane>\n            <TabPane tab='Expired' key='2'>\n              {grid(pollsBasedOnCategory, 'expired','polls')}\n            </TabPane>\n          </Tabs>\n        </TabPane>\n        <TabPane tab='Awards' key='2'>\n          <Tabs defaultActiveKey='1' onChange={callback}>\n            <TabPane tab='Active' key='1'>\n              {grid(awards,'active','awards')}\n            </TabPane>\n            <TabPane tab='Expired' key='2'>\n              {grid(awards,'expired','awards')}\n            </TabPane>\n          </Tabs>\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  polls: state.polls,\n  awards:state.awards\n});\n\nexport default connect(mapStateToProps, {\n  fetchPolls,fetchAwards\n})(HomePollsAndAwards);\n","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/HomePage/HomeSection3.js",["143","144","145"],"import React from 'react'\nimport im from '../../assets/download (1).jpeg'\nimport il from '../../assets/download.jpeg'\nimport { Button, Radio } from 'antd';\n\n\nconst HomeSection3 = () => {\n  return (\n    <div className=\"base\">\n    <div className=\"disp\" style={{backgroundColor:'white'}}>\n    <div>\n    <img style={{width:'50px',width:'100px',borderRadius:'50px'}} src={im} alt=\"\"/>\n    </div>\n    <p>\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ipsam ea earum delectus, fugit vero quo dignissimos assumenda? Provident in assumenda suscipit enim officia, quia nobis officiis blanditiis delectus doloribus.\n    </p>\n    <Button type=\"primary\" shape='round' ghost>\n   Play quiz\n    </Button>\n    </div>\n    <div className=\"disp\" style={{backgroundColor:'white'}}>\n    <div>\n    <img style={{width:'50px',width:'100px',borderRadius:'50px'}} src={il} alt=\"\"/>\n    </div>\n    <p>\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ipsam ea earum delectus, fugit vero quo dignissimos assumenda? Provident in assumenda suscipit enim officia, quia nobis officiis blanditiis delectus doloribus.\n    </p>\n    <Button shape='round' type=\"primary\" ghost>\n  Watch live\n  </Button>\n    </div>\n    \n      \n    </div>\n  )\n}\n\nexport default HomeSection3\n","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/News/News.js",["146","147","148"],"import React, { useEffect,useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchNews } from '../../Actions/NewsAction';\nimport NewsTrendingCard from '../../Components/News/NewsTrendingCard';\nimport NewsCard from '../../Components/News/NewsCard';\nimport {cats} from '../../Components/icons/Icons'\nimport {Checkbox} from 'antd'\nimport axios from '../../axios';\nimport CategoryBar from '../../Components/CategoryBar/CategoryBar'\n\nconst News = ({ fetchNews, news: { news } }) => {\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [newsBasedOnCategory, setNewsBasedOnCategory] = useState({});\n  let p1=news && news.payload.length>0 && news.payload[0]\n  const [data,setData]=useState(p1)\nconsole.log(p1);\n  useEffect(() => {\n    fetchNews();\n    fetchNewsSelected();\n    p1=news && news.payload.length>0 && news.payload[0]\n    setData(p1)\n  }, []);\n\n  useEffect(() => {\n    fetchNewsSelected();\n  }, [selectedTags]);\n\n  const fetchNewsSelected = async (page) => {\n    const queryParam = selectedTags.join(',');\n    try {\n      const response = await axios.get('/common/news', {\n        params: {\n          page,\n          categories: selectedTags.length > 0 ? queryParam : undefined,\n        },\n      });\n      const responseJSON = response.data;\n      setNewsBasedOnCategory(responseJSON);\n      console.log(responseJSON, 'selected news');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  function onChange(checkedValues) {\n    console.log('checked = ', checkedValues);\n    setSelectedTags(checkedValues);\n  }\n  const checkChecked = (item) => {\n    console.log(selectedTags);\n    const bool = selectedTags.indexOf(item);\n    console.log(bool);\n    if (bool !== -1) {\n      return {\n        backgroundColor: '#a62844',\n        color: 'white',\n      };\n    }\n  };\n  const setIt=(p)=>{\n    console.log(p)\n\n    setData(p)\n    window.scrollTo(0, 0)\n\n  }\n  return (\n    <div className='news'>\n      <div className='news-head'>\n        <h1>News</h1>\n      </div>\n      <section className='news-section1'>\n        <div className=\"left\">\n        <div className=\"left-head\"><p>{data &&data.headline}</p><span>{data && data.categories[0]}</span></div>\n        <div className=\"left-body\">\n        <div className=\"image\">\n        <img src={data && data.images[0]} alt=\"\"/>\n        </div>\n        <div className=\"description\">\n        <p>{data && data.description}</p>\n        <div className=\"download\">\n        <p>To enjoy the full experience of PolBol,download the PolBol App</p>\n        <span>Download PolBol App</span>\n        </div>\n        </div>\n        </div>\n        </div>\n        <div className='spotlight'>\n          <div className='spotlight-head'>\n            <span>Spotlight</span>\n            <span>View all</span>\n          </div>\n          <div className='trending-news'>\n            {news &&\n              news.payload.length > 0 &&\n              news.payload\n                .filter((f) => {\n                  return f.trending === true;\n                })\n                .map((k) => <NewsTrendingCard k={k} />)}\n          </div>\n        </div>\n      </section>\n\n      <section className=\"news-section2\">\n     <CategoryBar onChange={onChange} cats={cats} checkChecked={checkChecked}/>\n    <div className=\"news-container\">\n    {Object.keys(newsBasedOnCategory).length > 0 &&\n      newsBasedOnCategory.payload.data.length > 0 &&\n      newsBasedOnCategory.payload.data.map((p) => <NewsCard data={data} setIt={setIt} p={p} />)}\n    </div>\n\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  news: state.news,\n});\n\nexport default connect(mapStateToProps, {\n  fetchNews,\n})(News);\n","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/CategoryBar/CategoryBar.js",[],"/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/Polls/Polls.js",["149","150","151"],"import React, { useState, useEffect } from 'react';\nimport CategoryBar from '../../Components/CategoryBar/CategoryBar';\nimport { cats } from '../../Components/icons/Icons';\nimport { Tabs } from 'antd';\nimport axios from '../../axios';\nimport moment from 'moment';\nimport PollCard from '../../Components/Polls/PollCard';\nimport { icons } from '../../Components/icons/Icons';\n\nconst Polls = () => {\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [pollsBasedOnCategory, setPollsBasedOnCategory] = useState({});\n\n  const { TabPane } = Tabs;\n  useEffect(() => {\n    fetchPollsSelected();\n  }, []);\n\n  useEffect(() => {\n    fetchPollsSelected();\n  }, [selectedTags]);\n\n  const fetchPollsSelected = async (page) => {\n    const queryParam = selectedTags.join(',');\n    try {\n      const response = await axios.get('/common/polls', {\n        params: {\n          page,\n          categories: selectedTags.length > 0 ? queryParam : undefined,\n        },\n      });\n      const responseJSON = response.data;\n      setPollsBasedOnCategory(responseJSON);\n\n      console.log(responseJSON, 'selected news');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function callback(key) {\n    console.log(key);\n  }\n  function onChange(checkedValues) {\n    console.log('checked = ', checkedValues);\n    setSelectedTags(checkedValues);\n  }\n  const checkChecked = (item) => {\n    console.log(selectedTags);\n    const bool = selectedTags.indexOf(item);\n    console.log(bool);\n    if (bool !== -1) {\n      return {\n        backgroundColor: '#a62844',\n        color: 'white',\n      };\n    }\n  };\n\n  const getExpiryString = (expiryTime) => {\n    const lifeEndTime = moment(expiryTime);\n    const now = moment();\n    let duration = moment.duration(lifeEndTime.diff(now));\n    let difference = Math.floor(duration.asDays());\n    let minDiff = Math.floor(duration.asMinutes());\n    console.log(minDiff, 'diff');\n\n    let unit = 'days';\n    if (difference < 1) {\n      difference = Math.floor(duration.asHours());\n      unit = 'hours';\n    }\n    if (difference < 1) {\n      difference = Math.floor(duration.asMinutes());\n      unit = 'minutes';\n    }\n    return minDiff;\n  };\n\n  const PollView = (data, type, type2) => {\n    let useData;\n    if (type === 'active') {\n      useData =\n        Object.keys(data).length > 0 &&\n        data.payload.payload.filter((p) => {\n          return getExpiryString(p.lifeSpan) > 0;\n        });\n      console.log(useData);\n    } else if (type === 'expired') {\n      useData =\n        Object.keys(data).length > 0 &&\n        data.payload.payload.filter((p) => {\n          return getExpiryString(p.lifeSpan) < 0;\n        });\n      console.log(useData);\n    }\n\n    return (\n      <>\n        <div style={{ margin: '1.5rem 0' }}>\n          <span>{useData.length + ' ' + type + ' ' + type2}</span>\n        </div>\n        <div className='pollCont'>\n          {useData &&\n            useData.map(\n              (p) =>\n                p.hidden === false && (\n                  <PollCard icons={icons} type2={type2} p={p} />\n                )\n            )}\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className='poll-box'>\n      <div>\n        <h1>Polls</h1>\n        <div>\n          <CategoryBar\n            onChange={onChange}\n            checkChecked={checkChecked}\n            cats={cats}\n          />\n          <Tabs onChange={callback} type='card'>\n            <TabPane tab='Active' key='1'>\n              {PollView(pollsBasedOnCategory, 'active', 'polls')}\n            </TabPane>\n            <TabPane tab='Expired' key='2'>\n              {PollView(pollsBasedOnCategory, 'expired', 'polls')}\n            </TabPane>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Polls;\n","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Components/Polls/PollCard.js",["152"],"import React from 'react';\n\nconst PollCard = ({type2,p,icons,getExpiryString1}) => {\n  return (\n    <div\n      className={\n        type2 === 'polls'\n          ? 'long-card long-card-hor'\n          : 'long-card long-card-ver'\n      }\n    >\n      <div\n        className='long-card-img'\n        style={{\n          backgroundImage: `url(${type2 === 'polls' ? p.image : p.icon})`,\n        }}\n      ></div>\n      <div className='long-card-desc'>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          <span className='heading'>\n            {type2 === 'polls' && (\n              <img\n                style={{ height: '25px', width: '25px', marginRight: '1rem' }}\n                src={\n                  type2 === 'polls' ? icons[p.categories[0]] : icons[p.type[0]]\n                }\n              />\n            )}\n            {type2 === 'polls'\n              ? `Poll on ${p.categories[0]}`\n              : `${getExpiryString1 && getExpiryString1(p.lifeSpan)}`}\n          </span>\n          <p>{p.question}</p>\n        </div>\n        {type2 === 'polls' && <span className='give-rating'>Give Rating</span>}\n      </div>\n    </div>\n  );\n};\n\nexport default PollCard;\n","/Users/shaunviviandsouza/Desktop/polbol-v2/src/Views/Awards/Awards.js",["153","154","155","156"],"import React, { useState, useEffect } from 'react';\nimport CategoryBar from '../../Components/CategoryBar/CategoryBar';\nimport { cats } from '../../Components/icons/Icons';\nimport { Tabs } from 'antd';\nimport axios from '../../axios';\nimport moment from 'moment';\nimport PollCard from '../../Components/Polls/PollCard';\nimport { icons } from '../../Components/icons/Icons';\nimport { fetchAwards } from '../../Actions/AwardsAction';\nimport { connect } from 'react-redux';\n\nconst Awards = ({fetchAwards,awards:{awards}}) => {\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [pollsBasedOnCategory, setPollsBasedOnCategory] = useState({});\n\n  const { TabPane } = Tabs;\n  useEffect(() => {\n    fetchPollsSelected();\n    fetchAwards();\n  }, []);\n\n  useEffect(() => {\n    fetchPollsSelected();\n  }, [selectedTags]);\n\n  const fetchPollsSelected = async (page) => {\n    const queryParam = selectedTags.join(',');\n    try {\n      const response = await axios.get('/common/polls', {\n        params: {\n          page,\n          categories: selectedTags.length > 0 ? queryParam : undefined,\n        },\n      });\n      const responseJSON = response.data;\n      setPollsBasedOnCategory(responseJSON);\n\n      console.log(responseJSON, 'selected news');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function callback(key) {\n    console.log(key);\n  }\n  function onChange(checkedValues) {\n    console.log('checked = ', checkedValues);\n    setSelectedTags(checkedValues);\n  }\n  const checkChecked = (item) => {\n    console.log(selectedTags);\n    const bool = selectedTags.indexOf(item);\n    console.log(bool);\n    if (bool !== -1) {\n      return {\n        backgroundColor: '#a62844',\n        color: 'white',\n      };\n    }\n  };\n\n  const getExpiryString = (expiryTime) => {\n    const lifeEndTime = moment(expiryTime);\n    const now = moment();\n    let duration = moment.duration(lifeEndTime.diff(now));\n    let difference = Math.floor(duration.asDays());\n    let minDiff = Math.floor(duration.asMinutes());\n    console.log(minDiff, 'diff');\n\n    let unit = 'days';\n    if (difference < 1) {\n      difference = Math.floor(duration.asHours());\n      unit = 'hours';\n    }\n    if (difference < 1) {\n      difference = Math.floor(duration.asMinutes());\n      unit = 'minutes';\n    }\n    return minDiff;\n  };\n\n  const PollView = (data, type, type2) => {\n    let useData;\n    if(type2==='awards'){\n      if (type === 'active') {\n        if(selectedTags.length>0){\n          useData =\n          data &&data.length>0 &&\n          data.filter((l)=>{return selectedTags.includes(l.type[0])}).filter((p) => {\n            return getExpiryString(p.lifeSpan) > 0;\n          });\n        }\n        else{\n        useData =\n          data &&data.length>0 &&\n          data.filter((p) => {\n            return getExpiryString(p.lifeSpan) > 0;\n          });\n        console.log(useData);\n        }\n      } else if (type === 'expired') {\n        if(selectedTags.length>0){\n          useData =\n          data &&data.length>0 &&\n          data.filter((l)=>{return selectedTags.includes(l.type[0])}).filter((p) => {\n            return getExpiryString(p.lifeSpan) < 0;\n          });\n        }\n        else{\n        useData =\n          data &&data.length>0 &&\n          data.filter((p) => {\n            return getExpiryString(p.lifeSpan) < 0;\n          });\n        console.log(useData);\n        }\n      }\n    }\n\n    return (\n      <>\n        <div style={{ margin: '1.5rem 0' }}>\n          {useData && <span>{useData.length + ' ' + type + ' ' + type2}</span>}\n        </div>\n        <div className='pollCont'>\n          {useData &&\n            useData.map(\n              (p) =>\n                p.hidden === false && (\n                  <PollCard icons={icons} type2={type2} p={p} />\n                )\n            )}\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className='poll-box'>\n      <div>\n        <h1>Awards</h1>\n        <div>\n          <CategoryBar\n            onChange={onChange}\n            checkChecked={checkChecked}\n            cats={cats}\n          />\n          <Tabs onChange={callback} type='card'>\n            <TabPane tab='Active' key='1'>\n              {PollView(awards, 'active', 'awards')}\n            </TabPane>\n            <TabPane tab='Expired' key='2'>\n              {PollView(awards, 'expired', 'awards')}\n            </TabPane>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  polls: state.polls,\n  awards:state.awards\n});\n\nexport default connect(mapStateToProps, {\n  fetchAwards\n})(Awards);",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":50,"column":11,"nodeType":"169","endLine":53,"endColumn":12},{"ruleId":"167","severity":1,"message":"170","line":82,"column":7,"nodeType":"169","endLine":82,"endColumn":77},{"ruleId":"171","severity":1,"message":"172","line":82,"column":15,"nodeType":"173","messageId":"174","endLine":82,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":22,"column":27,"nodeType":"169","endLine":22,"endColumn":118},{"ruleId":"163","severity":1,"message":"177","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"178","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":23,"column":6,"nodeType":"181","endLine":23,"endColumn":8,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":27,"column":6,"nodeType":"181","endLine":27,"endColumn":20,"suggestions":"184"},{"ruleId":"163","severity":1,"message":"185","line":3,"column":20,"nodeType":"165","messageId":"166","endLine":3,"endColumn":23},{"ruleId":"163","severity":1,"message":"186","line":3,"column":25,"nodeType":"165","messageId":"166","endLine":3,"endColumn":28},{"ruleId":"163","severity":1,"message":"187","line":19,"column":9,"nodeType":"165","messageId":"166","endLine":19,"endColumn":14},{"ruleId":"179","severity":1,"message":"188","line":29,"column":6,"nodeType":"181","endLine":29,"endColumn":8,"suggestions":"189"},{"ruleId":"179","severity":1,"message":"190","line":33,"column":3,"nodeType":"181","endLine":33,"endColumn":22,"suggestions":"191"},{"ruleId":"163","severity":1,"message":"192","line":102,"column":7,"nodeType":"165","messageId":"166","endLine":102,"endColumn":11},{"ruleId":"163","severity":1,"message":"192","line":123,"column":7,"nodeType":"165","messageId":"166","endLine":123,"endColumn":11},{"ruleId":"163","severity":1,"message":"193","line":4,"column":18,"nodeType":"165","messageId":"166","endLine":4,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":12,"column":31,"nodeType":"196","messageId":"197","endLine":12,"endColumn":36},{"ruleId":"194","severity":1,"message":"195","line":23,"column":31,"nodeType":"196","messageId":"197","endLine":23,"endColumn":36},{"ruleId":"163","severity":1,"message":"198","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":17},{"ruleId":"179","severity":1,"message":"199","line":20,"column":8,"nodeType":"200","endLine":20,"endColumn":56},{"ruleId":"179","severity":1,"message":"183","line":26,"column":6,"nodeType":"181","endLine":26,"endColumn":20,"suggestions":"201"},{"ruleId":"179","severity":1,"message":"190","line":17,"column":6,"nodeType":"181","endLine":17,"endColumn":8,"suggestions":"202"},{"ruleId":"179","severity":1,"message":"190","line":21,"column":6,"nodeType":"181","endLine":21,"endColumn":20,"suggestions":"203"},{"ruleId":"163","severity":1,"message":"192","line":75,"column":7,"nodeType":"165","messageId":"166","endLine":75,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":28,"column":15,"nodeType":"169","endLine":33,"endColumn":17},{"ruleId":"163","severity":1,"message":"204","line":14,"column":10,"nodeType":"165","messageId":"166","endLine":14,"endColumn":30},{"ruleId":"179","severity":1,"message":"205","line":20,"column":6,"nodeType":"181","endLine":20,"endColumn":8,"suggestions":"206"},{"ruleId":"179","severity":1,"message":"190","line":24,"column":6,"nodeType":"181","endLine":24,"endColumn":20,"suggestions":"207"},{"ruleId":"163","severity":1,"message":"192","line":78,"column":7,"nodeType":"165","messageId":"166","endLine":78,"endColumn":11},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Card' is defined but never used.","'Carousel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchNews' and 'fetchNewsSelected'. Either include them or remove the dependency array. If 'fetchNews' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["210"],"React Hook useEffect has a missing dependency: 'fetchNewsSelected'. Either include it or remove the dependency array.",["211"],"'Row' is defined but never used.","'Col' is defined but never used.","'types' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAwards', 'fetchPolls', and 'fetchPollsSelected'. Either include them or remove the dependency array. If 'fetchPolls' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["212"],"React Hook useEffect has a missing dependency: 'fetchPollsSelected'. Either include it or remove the dependency array.",["213"],"'unit' is assigned a value but never used.","'Radio' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'Checkbox' is defined but never used.","Assignments to the 'p1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression",["214"],["215"],["216"],"'pollsBasedOnCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAwards' and 'fetchPollsSelected'. Either include them or remove the dependency array. If 'fetchAwards' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["217"],["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"221","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"230","fix":"234"},"Update the dependencies array to be: [fetchNews, fetchNewsSelected]",{"range":"235","text":"236"},"Update the dependencies array to be: [fetchNewsSelected, selectedTags]",{"range":"237","text":"238"},"Update the dependencies array to be: [fetchAwards, fetchPolls, fetchPollsSelected]",{"range":"239","text":"240"},"Update the dependencies array to be: [fetchPollsSelected, selectedTagsPolls]",{"range":"241","text":"242"},{"range":"243","text":"238"},"Update the dependencies array to be: [fetchPollsSelected]",{"range":"244","text":"245"},"Update the dependencies array to be: [fetchPollsSelected, selectedTags]",{"range":"246","text":"247"},"Update the dependencies array to be: [fetchAwards, fetchPollsSelected]",{"range":"248","text":"249"},{"range":"250","text":"247"},[899,901],"[fetchNews, fetchNewsSelected]",[955,969],"[fetchNewsSelected, selectedTags]",[927,929],"[fetchAwards, fetchPolls, fetchPollsSelected]",[975,994],"[fetchPollsSelected, selectedTagsPolls]",[933,947],[605,607],"[fetchPollsSelected]",[662,676],"[fetchPollsSelected, selectedTags]",[751,753],"[fetchAwards, fetchPollsSelected]",[808,822]]